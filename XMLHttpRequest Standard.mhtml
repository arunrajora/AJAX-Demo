From: <Saved by Blink>
Subject: XMLHttpRequest Standard
Date: Tue, 3 Apr 2017 19:40:06 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--0Her9Mqf3y9I8AcGDzeenx9hyupwWZXDKwlHTt2xTF----"

------MultipartBoundary--0Her9Mqf3y9I8AcGDzeenx9hyupwWZXDKwlHTt2xTF----
Content-Type: text/html
Content-ID: <frame-145-6290e510-0df5-4371-8421-659f76dfbb1c@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://xhr.spec.whatwg.org/

<!DOCTYPE html><html lang=3D"en"><head><meta http-equiv=3D"Content-Type" co=
ntent=3D"text/html; charset=3DUTF-8">
 =20
  <meta content=3D"width=3Ddevice-width, initial-scale=3D1, shrink-to-fit=
=3Dno" name=3D"viewport">
  <meta content=3D"#3c790a" name=3D"theme-color">
  <title>XMLHttpRequest Standard</title>
  <link href=3D"https://resources.whatwg.org/standard.css" rel=3D"styleshee=
t">
  <link href=3D"https://resources.whatwg.org/bikeshed.css" rel=3D"styleshee=
t">
  <link href=3D"https://resources.whatwg.org/logo-xhr.svg" rel=3D"icon">
  <meta content=3D"Bikeshed version 9260eac3642631ba07cbb9e9b2936efe928153e=
3" name=3D"generator">
<style>/* style-syntax-highlighting */
pre.idl.highlight { color: #708090; }
        .highlight:not(.idl) { background: hsl(24, 20%, 95%); }
        code.highlight { padding: .1em; border-radius: .3em; }
        pre.highlight, pre > code.highlight { display: block; padding: 1em;=
 margin: .5em 0; overflow: auto; border-radius: 0; }
        .highlight .c { color: #708090 } /* Comment */
        .highlight .k { color: #990055 } /* Keyword */
        .highlight .l { color: #000000 } /* Literal */
        .highlight .n { color: #0077aa } /* Name */
        .highlight .o { color: #999999 } /* Operator */
        .highlight .p { color: #999999 } /* Punctuation */
        .highlight .cm { color: #708090 } /* Comment.Multiline */
        .highlight .cp { color: #708090 } /* Comment.Preproc */
        .highlight .c1 { color: #708090 } /* Comment.Single */
        .highlight .cs { color: #708090 } /* Comment.Special */
        .highlight .kc { color: #990055 } /* Keyword.Constant */
        .highlight .kd { color: #990055 } /* Keyword.Declaration */
        .highlight .kn { color: #990055 } /* Keyword.Namespace */
        .highlight .kp { color: #990055 } /* Keyword.Pseudo */
        .highlight .kr { color: #990055 } /* Keyword.Reserved */
        .highlight .kt { color: #990055 } /* Keyword.Type */
        .highlight .ld { color: #000000 } /* Literal.Date */
        .highlight .m { color: #000000 } /* Literal.Number */
        .highlight .s { color: #a67f59 } /* Literal.String */
        .highlight .na { color: #0077aa } /* Name.Attribute */
        .highlight .nc { color: #0077aa } /* Name.Class */
        .highlight .no { color: #0077aa } /* Name.Constant */
        .highlight .nd { color: #0077aa } /* Name.Decorator */
        .highlight .ni { color: #0077aa } /* Name.Entity */
        .highlight .ne { color: #0077aa } /* Name.Exception */
        .highlight .nf { color: #0077aa } /* Name.Function */
        .highlight .nl { color: #0077aa } /* Name.Label */
        .highlight .nn { color: #0077aa } /* Name.Namespace */
        .highlight .py { color: #0077aa } /* Name.Property */
        .highlight .nt { color: #669900 } /* Name.Tag */
        .highlight .nv { color: #222222 } /* Name.Variable */
        .highlight .ow { color: #999999 } /* Operator.Word */
        .highlight .mb { color: #000000 } /* Literal.Number.Bin */
        .highlight .mf { color: #000000 } /* Literal.Number.Float */
        .highlight .mh { color: #000000 } /* Literal.Number.Hex */
        .highlight .mi { color: #000000 } /* Literal.Number.Integer */
        .highlight .mo { color: #000000 } /* Literal.Number.Oct */
        .highlight .sb { color: #a67f59 } /* Literal.String.Backtick */
        .highlight .sc { color: #a67f59 } /* Literal.String.Char */
        .highlight .sd { color: #a67f59 } /* Literal.String.Doc */
        .highlight .s2 { color: #a67f59 } /* Literal.String.Double */
        .highlight .se { color: #a67f59 } /* Literal.String.Escape */
        .highlight .sh { color: #a67f59 } /* Literal.String.Heredoc */
        .highlight .si { color: #a67f59 } /* Literal.String.Interpol */
        .highlight .sx { color: #a67f59 } /* Literal.String.Other */
        .highlight .sr { color: #a67f59 } /* Literal.String.Regex */
        .highlight .s1 { color: #a67f59 } /* Literal.String.Single */
        .highlight .ss { color: #a67f59 } /* Literal.String.Symbol */
        .highlight .vc { color: #0077aa } /* Name.Variable.Class */
        .highlight .vg { color: #0077aa } /* Name.Variable.Global */
        .highlight .vi { color: #0077aa } /* Name.Variable.Instance */
        .highlight .il { color: #000000 } /* Literal.Number.Integer.Long */
        </style>
 </head><body class=3D"h-entry status-LS dfnEnabled"><a href=3D"https://git=
hub.com/whatwg/xhr/issues/new?title=3D&amp;body=3Dhttps%3A%2F%2Fxhr.spec.wh=
atwg.org%2Fcommit-snapshots%2F59c9cd9ae31fc8fafd1c327f2d2a1ca1e88da28f%2F%0=
A%0A" accesskey=3D"1" class=3D"selected-text-file-an-issue">File an issue a=
bout the selected text</a>
  <div class=3D"head">
   <p data-fill-with=3D"logo"><a class=3D"logo" href=3D"https://whatwg.org/=
"> <img alt=3D"WHATWG" height=3D"100" src=3D"https://resources.whatwg.org/l=
ogo-xhr.svg"> </a> </p>
   <hgroup>
    <h1 class=3D"p-name no-ref" id=3D"title">XMLHttpRequest</h1>
    <h2 class=3D"no-num no-toc no-ref heading settled" id=3D"subtitle"><spa=
n class=3D"content">Living Standard =E2=80=94 Last Updated <time class=3D"d=
t-updated" datetime=3D"2017-03-13">13 March 2017</time></span></h2>
   </hgroup>
   <div data-fill-with=3D"spec-metadata">
    <dl>
     <dt>Participate:
     </dt><dd><span><a href=3D"https://github.com/whatwg/xhr">GitHub whatwg=
/xhr</a> (<a href=3D"https://github.com/whatwg/xhr/issues/new">file an issu=
e</a>, <a href=3D"https://github.com/whatwg/xhr/issues">open issues</a>)</s=
pan>
     </dd><dd><span><a href=3D"https://wiki.whatwg.org/wiki/IRC">IRC: #what=
wg on Freenode</a></span>
     </dd><dt>Commits:
     </dt><dd><span><a href=3D"https://github.com/whatwg/xhr/commits">GitHu=
b whatwg/xhr/commits</a></span>
     </dd><dd><span><a href=3D"https://xhr.spec.whatwg.org/commit-snapshots=
/59c9cd9ae31fc8fafd1c327f2d2a1ca1e88da28f/" id=3D"commit-snapshot-link" tit=
le=3D"You can also press the 'y' key">Snapshot as of this commit</a></span>
     </dd><dd><span><a href=3D"https://twitter.com/xhrstandard">@xhrstandar=
d</a></span>
     </dd><dt>Tests:
     </dt><dd><span><a href=3D"https://github.com/w3c/web-platform-tests/tr=
ee/master/XMLHttpRequest">web-platform-tests XMLHttpRequest/</a> (<a href=
=3D"https://github.com/w3c/web-platform-tests/labels/xhr">ongoing work</a>)=
</span>
     </dd><dt>Translation (non-normative):
     </dt><dd><span><span title=3D"Japanese"><a href=3D"https://triple-unde=
rscore.github.io/XHR-ja.html" hreflang=3D"ja" lang=3D"ja" rel=3D"alternate"=
>=E6=97=A5=E6=9C=AC=E8=AA=9E</a></span></span>
    </dd></dl>
   </div>
   <div data-fill-with=3D"warning"></div>
  </div>
  <h2 class=3D"no-num no-toc no-ref heading settled" id=3D"abstract"><span =
class=3D"content">Abstract</span></h2>
  <div class=3D"p-summary" data-fill-with=3D"abstract">
   <p>The XMLHttpRequest Standard defines an API that provides scripted cli=
ent functionality for transferring data between a client and a server.</p>
  </div>
  <nav data-fill-with=3D"table-of-contents" id=3D"toc">
   <h2 class=3D"no-num no-toc no-ref" id=3D"contents">Table of Contents</h2=
>
   <ol class=3D"toc" role=3D"directory">
    <li>
     <a href=3D"https://xhr.spec.whatwg.org/#introduction"><span class=3D"s=
ecno">1</span> <span class=3D"content">Introduction</span></a>
     <ol class=3D"toc">
      <li><a href=3D"https://xhr.spec.whatwg.org/#specification-history"><s=
pan class=3D"secno">1.1</span> <span class=3D"content">Specification histor=
y</span></a>
     </li></ol>
    </li><li>
     <a href=3D"https://xhr.spec.whatwg.org/#conformance"><span class=3D"se=
cno">2</span> <span class=3D"content">Conformance</span></a>
     <ol class=3D"toc">
      <li><a href=3D"https://xhr.spec.whatwg.org/#extensibility"><span clas=
s=3D"secno">2.1</span> <span class=3D"content">Extensibility</span></a>
     </li></ol>
    </li><li><a href=3D"https://xhr.spec.whatwg.org/#terminology"><span cla=
ss=3D"secno">3</span> <span class=3D"content">Terminology</span></a>
    </li><li>
     <a href=3D"https://xhr.spec.whatwg.org/#interface-xmlhttprequest"><spa=
n class=3D"secno">4</span> <span class=3D"content">Interface <code class=3D=
"idl"><span>XMLHttpRequest</span></code></span></a>
     <ol class=3D"toc">
      <li><a href=3D"https://xhr.spec.whatwg.org/#constructors"><span class=
=3D"secno">4.1</span> <span class=3D"content">Constructors</span></a>
      </li><li><a href=3D"https://xhr.spec.whatwg.org/#garbage-collection">=
<span class=3D"secno">4.2</span> <span class=3D"content">Garbage collection=
</span></a>
      </li><li><a href=3D"https://xhr.spec.whatwg.org/#event-handlers"><spa=
n class=3D"secno">4.3</span> <span class=3D"content">Event handlers</span><=
/a>
      </li><li><a href=3D"https://xhr.spec.whatwg.org/#states"><span class=
=3D"secno">4.4</span> <span class=3D"content">States</span></a>
      </li><li>
       <a href=3D"https://xhr.spec.whatwg.org/#request"><span class=3D"secn=
o">4.5</span> <span class=3D"content">Request</span></a>
       <ol class=3D"toc">
        <li><a href=3D"https://xhr.spec.whatwg.org/#the-open()-method"><spa=
n class=3D"secno">4.5.1</span> <span class=3D"content">The <code>open()</co=
de> method</span></a>
        </li><li><a href=3D"https://xhr.spec.whatwg.org/#the-setrequesthead=
er()-method"><span class=3D"secno">4.5.2</span> <span class=3D"content">The=
 <code>setRequestHeader()</code> method</span></a>
        </li><li><a href=3D"https://xhr.spec.whatwg.org/#the-timeout-attrib=
ute"><span class=3D"secno">4.5.3</span> <span class=3D"content">The <code>t=
imeout</code> attribute</span></a>
        </li><li><a href=3D"https://xhr.spec.whatwg.org/#the-withcredential=
s-attribute"><span class=3D"secno">4.5.4</span> <span class=3D"content">The=
 <code>withCredentials</code> attribute</span></a>
        </li><li><a href=3D"https://xhr.spec.whatwg.org/#the-upload-attribu=
te"><span class=3D"secno">4.5.5</span> <span class=3D"content">The <code>up=
load</code> attribute</span></a>
        </li><li><a href=3D"https://xhr.spec.whatwg.org/#the-send()-method"=
><span class=3D"secno">4.5.6</span> <span class=3D"content">The <code>send(=
)</code> method</span></a>
        </li><li><a href=3D"https://xhr.spec.whatwg.org/#the-abort()-method=
"><span class=3D"secno">4.5.7</span> <span class=3D"content">The <code>abor=
t()</code> method</span></a>
       </li></ol>
      </li><li>
       <a href=3D"https://xhr.spec.whatwg.org/#xmlhttprequest-response"><sp=
an class=3D"secno">4.6</span> <span class=3D"content">Response</span></a>
       <ol class=3D"toc">
        <li><a href=3D"https://xhr.spec.whatwg.org/#the-responseurl-attribu=
te"><span class=3D"secno">4.6.1</span> <span class=3D"content">The <code>re=
sponseURL</code> attribute</span></a>
        </li><li><a href=3D"https://xhr.spec.whatwg.org/#the-status-attribu=
te"><span class=3D"secno">4.6.2</span> <span class=3D"content">The <code>st=
atus</code> attribute</span></a>
        </li><li><a href=3D"https://xhr.spec.whatwg.org/#the-statustext-att=
ribute"><span class=3D"secno">4.6.3</span> <span class=3D"content">The <cod=
e>statusText</code> attribute</span></a>
        </li><li><a href=3D"https://xhr.spec.whatwg.org/#the-getresponsehea=
der()-method"><span class=3D"secno">4.6.4</span> <span class=3D"content">Th=
e <code>getResponseHeader()</code> method</span></a>
        </li><li><a href=3D"https://xhr.spec.whatwg.org/#the-getallresponse=
headers()-method"><span class=3D"secno">4.6.5</span> <span class=3D"content=
">The <code>getAllResponseHeaders()</code> method</span></a>
        </li><li><a href=3D"https://xhr.spec.whatwg.org/#response-body"><sp=
an class=3D"secno">4.6.6</span> <span class=3D"content">Response body</span=
></a>
        </li><li><a href=3D"https://xhr.spec.whatwg.org/#the-overridemimety=
pe()-method"><span class=3D"secno">4.6.7</span> <span class=3D"content">The=
 <code>overrideMimeType()</code> method</span></a>
        </li><li><a href=3D"https://xhr.spec.whatwg.org/#the-responsetype-a=
ttribute"><span class=3D"secno">4.6.8</span> <span class=3D"content">The <c=
ode>responseType</code> attribute</span></a>
        </li><li><a href=3D"https://xhr.spec.whatwg.org/#the-response-attri=
bute"><span class=3D"secno">4.6.9</span> <span class=3D"content">The <code>=
response</code> attribute</span></a>
        </li><li><a href=3D"https://xhr.spec.whatwg.org/#the-responsetext-a=
ttribute"><span class=3D"secno">4.6.10</span> <span class=3D"content">The <=
code>responseText</code> attribute</span></a>
        </li><li><a href=3D"https://xhr.spec.whatwg.org/#the-responsexml-at=
tribute"><span class=3D"secno">4.6.11</span> <span class=3D"content">The <c=
ode>responseXML</code> attribute</span></a>
       </li></ol>
      </li><li><a href=3D"https://xhr.spec.whatwg.org/#events"><span class=
=3D"secno">4.7</span> <span class=3D"content">Events summary</span></a>
     </li></ol>
    </li><li><a href=3D"https://xhr.spec.whatwg.org/#interface-formdata"><s=
pan class=3D"secno">5</span> <span class=3D"content">Interface <code class=
=3D"idl"><span>FormData</span></code></span></a>
    </li><li>
     <a href=3D"https://xhr.spec.whatwg.org/#interface-progressevent"><span=
 class=3D"secno">6</span> <span class=3D"content">Interface <code class=3D"=
idl"><span>ProgressEvent</span></code></span></a>
     <ol class=3D"toc">
      <li><a href=3D"https://xhr.spec.whatwg.org/#firing-events-using-the-p=
rogressevent-interface"><span class=3D"secno">6.1</span> <span class=3D"con=
tent">Firing events using the <code class=3D"idl"><span>ProgressEvent</span=
></code> interface</span></a>
      </li><li><a href=3D"https://xhr.spec.whatwg.org/#suggested-names-for-=
events-using-the-progressevent-interface"><span class=3D"secno">6.2</span> =
<span class=3D"content">Suggested names for events using the <code class=3D=
"idl"><span>ProgressEvent</span></code> interface</span></a>
      </li><li><a href=3D"https://xhr.spec.whatwg.org/#security-considerati=
ons"><span class=3D"secno">6.3</span> <span class=3D"content">Security Cons=
iderations</span></a>
      </li><li><a href=3D"https://xhr.spec.whatwg.org/#example"><span class=
=3D"secno">6.4</span> <span class=3D"content">Example</span></a>
     </li></ol>
    </li><li>
     <a href=3D"https://xhr.spec.whatwg.org/#references"><span class=3D"sec=
no"></span> <span class=3D"content">References</span></a>
     <ol class=3D"toc">
      <li><a href=3D"https://xhr.spec.whatwg.org/#normative"><span class=3D=
"secno"></span> <span class=3D"content">Normative References</span></a>
     </li></ol>
    </li><li><a href=3D"https://xhr.spec.whatwg.org/#acknowledgments"><span=
 class=3D"secno"></span> <span class=3D"content">Acknowledgments</span></a>
    </li><li>
     <a href=3D"https://xhr.spec.whatwg.org/#index"><span class=3D"secno"><=
/span> <span class=3D"content">Index</span></a>
     <ol class=3D"toc">
      <li><a href=3D"https://xhr.spec.whatwg.org/#index-defined-here"><span=
 class=3D"secno"></span> <span class=3D"content">Terms defined by this spec=
ification</span></a>
      </li><li><a href=3D"https://xhr.spec.whatwg.org/#index-defined-elsewh=
ere"><span class=3D"secno"></span> <span class=3D"content">Terms defined by=
 reference</span></a>
     </li></ol>
    </li><li><a href=3D"https://xhr.spec.whatwg.org/#idl-index"><span class=
=3D"secno"></span> <span class=3D"content">IDL Index</span></a>
   </li></ol>
  </nav>
  <main>



   <h2 class=3D"heading settled" data-level=3D"1" id=3D"introduction"><span=
 class=3D"secno">1. </span><span class=3D"content">Introduction</span><a cl=
ass=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#introduction"></a></=
h2>
   <p><em>This section is non-normative.</em> </p>
   <p>The <code class=3D"idl"><a data-link-type=3D"idl" href=3D"https://xhr=
.spec.whatwg.org/#xmlhttprequest">XMLHttpRequest</a></code> object is an AP=
I for <a data-link-type=3D"dfn" href=3D"https://fetch.spec.whatwg.org/#conc=
ept-fetch">fetching</a> resources. </p>
   <p>The name <code class=3D"idl"><a data-link-type=3D"idl" href=3D"https:=
//xhr.spec.whatwg.org/#xmlhttprequest">XMLHttpRequest</a></code> is histori=
cal and has no bearing on its functionality. </p>
   <div class=3D"example" id=3D"example-xhr">
    <a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#example-xhr=
"></a>=20
    <p>Some simple code to do something with data from an XML document
 fetched over the network: </p>
<pre><code>function processData(data) {
  // taking care of data
}

function handler() {
  if(this.status =3D=3D 200 &amp;&amp;
    this.responseXML !=3D null &amp;&amp;
    this.responseXML.getElementById('test').textContent) {
    // success!
    processData(this.responseXML.getElementById('test').textContent);
  } else {
    // something went wrong
    =E2=80=A6
  }
}

var client =3D new XMLHttpRequest();
client.onload =3D handler;
client.open("GET", "unicorn.xml");
client.send();</code></pre>
    <p>If you just want to log a message to the server: </p>
<pre><code>function log(message) {
  var client =3D new XMLHttpRequest();
  client.open("POST", "/log");
  client.setRequestHeader("Content-Type", "text/plain;charset=3DUTF-8");
  client.send(message);
}</code></pre>
    <p>Or if you want to check the status of a document on the server: </p>
<pre><code>function fetchStatus(address) {
  var client =3D new XMLHttpRequest();
  client.onload =3D function() {
    // in case of network errors this might not give reliable results
    returnStatus(this.status);
  }
  client.open("HEAD", address);
  client.send();
}</code></pre>
   </div>
   <h3 class=3D"heading settled" data-level=3D"1.1" id=3D"specification-his=
tory"><span class=3D"secno">1.1. </span><span class=3D"content">Specificati=
on history</span><a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org=
/#specification-history"></a></h3>
   <p>The <code class=3D"idl"><a data-link-type=3D"idl" href=3D"https://xhr=
.spec.whatwg.org/#xmlhttprequest">XMLHttpRequest</a></code> object was init=
ially defined as part of
the WHATWG=E2=80=99s HTML effort. (Based on Microsoft=E2=80=99s implementat=
ion many years prior.)
It moved to the W3C in 2006. Extensions (e.g. progress events and
cross-origin requests) to <code class=3D"idl"><a data-link-type=3D"idl" hre=
f=3D"https://xhr.spec.whatwg.org/#xmlhttprequest">XMLHttpRequest</a></code>=
 were developed in a
separate draft (XMLHttpRequest Level 2) until end of 2011, at which point
the two drafts were merged and <code class=3D"idl"><a data-link-type=3D"idl=
" href=3D"https://xhr.spec.whatwg.org/#xmlhttprequest">XMLHttpRequest</a></=
code> became a single
entity again from a standards perspective. End of 2012 it moved back to the
WHATWG. </p>
   <p>Discussion that led to the current draft can be found in the followin=
g mailing list
archives: </p>
   <ul class=3D"brief">
    <li><a href=3D"https://lists.w3.org/Archives/Public/public-whatwg-archi=
ve/">whatwg@whatwg.org</a>=20
    </li><li><a href=3D"https://lists.w3.org/Archives/Public/public-webapps=
/">public-webapps@w3.org</a>=20
    </li><li><a href=3D"https://lists.w3.org/Archives/Public/public-webapi/=
">public-webapi@w3.org</a>=20
    </li><li><a href=3D"https://lists.w3.org/Archives/Public/public-appform=
ats/">public-appformats@w3.org</a>=20
   </li></ul>
   <h2 class=3D"heading settled" data-level=3D"2" id=3D"conformance"><span =
class=3D"secno">2. </span><span class=3D"content">Conformance</span><a clas=
s=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#conformance"></a></h2>
   <p>All diagrams, examples, and notes in this specification are
non-normative, as are all sections explicitly marked non-normative.
Everything else in this specification is normative. </p>
   <p>The key words "MUST", "MUST NOT", "REQUIRED",=20
 "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and
"OPTIONAL" in the normative parts of this specification are to be
interpreted as described in RFC2119. For readability, these words do
not appear in all uppercase letters in this specification. <a data-link-typ=
e=3D"biblio" href=3D"https://xhr.spec.whatwg.org/#biblio-rfc2119">[RFC2119]=
</a> </p>
   <h3 class=3D"heading settled" data-level=3D"2.1" id=3D"extensibility"><s=
pan class=3D"secno">2.1. </span><span class=3D"content">Extensibility</span=
><a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#extensibility"=
></a></h3>
   <p>User agents, Working Groups, and other interested parties are <em>str=
ongly encouraged</em> to discuss new features with the WHATWG
community. </p>
   <h2 class=3D"heading settled" data-level=3D"3" id=3D"terminology"><span =
class=3D"secno">3. </span><span class=3D"content">Terminology</span><a clas=
s=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#terminology"></a></h2>
   <p>This specification uses terminology, cross-linked throughout, from DO=
M,
DOM Parsing and Serialization, Encoding, Fetch, File API, HTML, HTTP, URL, =
Web IDL, and
XML. </p>
   <p><a data-link-type=3D"biblio" href=3D"https://xhr.spec.whatwg.org/#bib=
lio-dom">[DOM]</a> <a data-link-type=3D"biblio" href=3D"https://xhr.spec.wh=
atwg.org/#biblio-domps">[DOMPS]</a> <a data-link-type=3D"biblio" href=3D"ht=
tps://xhr.spec.whatwg.org/#biblio-encoding">[ENCODING]</a> <a data-link-typ=
e=3D"biblio" href=3D"https://xhr.spec.whatwg.org/#biblio-fetch">[FETCH]</a>=
 <a data-link-type=3D"biblio" href=3D"https://xhr.spec.whatwg.org/#biblio-f=
ileapi">[FILEAPI]</a> <a data-link-type=3D"biblio" href=3D"https://xhr.spec=
.whatwg.org/#biblio-html">[HTML]</a> <a data-link-type=3D"biblio" href=3D"h=
ttps://xhr.spec.whatwg.org/#biblio-http">[HTTP]</a> <a data-link-type=3D"bi=
blio" href=3D"https://xhr.spec.whatwg.org/#biblio-url">[URL]</a> <a data-li=
nk-type=3D"biblio" href=3D"https://xhr.spec.whatwg.org/#biblio-webidl">[WEB=
IDL]</a> <a data-link-type=3D"biblio" href=3D"https://xhr.spec.whatwg.org/#=
biblio-xml">[XML]</a> <a data-link-type=3D"biblio" href=3D"https://xhr.spec=
.whatwg.org/#biblio-xmlns">[XMLNS]</a></p>
   <p>It uses the typographic conventions from HTML. <a data-link-type=3D"b=
iblio" href=3D"https://xhr.spec.whatwg.org/#biblio-html">[HTML]</a> </p>
   <p>The term <dfn data-dfn-type=3D"dfn" data-noexport=3D"" id=3D"user-cre=
dentials">user credentials<a class=3D"self-link" href=3D"https://xhr.spec.w=
hatwg.org/#user-credentials"></a></dfn> for the purposes of this
specification means cookies, HTTP authentication, and TLS client certificat=
es.
Specifically it does not refer to proxy authentication or the <a data-link-=
type=3D"http-header" href=3D"https://fetch.spec.whatwg.org/#http-origin"><c=
ode>Origin</code></a> header. <a data-link-type=3D"biblio" href=3D"https://=
xhr.spec.whatwg.org/#biblio-cookies">[COOKIES]</a> </p>
   <h2 class=3D"heading settled" data-level=3D"4" id=3D"interface-xmlhttpre=
quest"><span class=3D"secno">4. </span><span class=3D"content">Interface <c=
ode class=3D"idl"><a data-link-type=3D"idl" href=3D"https://xhr.spec.whatwg=
.org/#xmlhttprequest">XMLHttpRequest</a></code></span><a class=3D"self-link=
" href=3D"https://xhr.spec.whatwg.org/#interface-xmlhttprequest"></a></h2>
<pre class=3D"idl highlight def">[<a class=3D"nv idl-code" data-link-type=
=3D"extended-attribute" href=3D"https://heycam.github.io/webidl/#Exposed">E=
xposed</a>=3D(<span class=3D"n">Window</span>,<span class=3D"n">DedicatedWo=
rker</span>,<span class=3D"n">SharedWorker</span>)]
<span class=3D"kt">interface</span> <dfn class=3D"nv idl-code" data-dfn-typ=
e=3D"interface" data-export=3D"" id=3D"xmlhttprequesteventtarget">XMLHttpRe=
questEventTarget<a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org/=
#xmlhttprequesteventtarget"></a></dfn> : <a class=3D"n" data-link-type=3D"i=
dl-name" href=3D"https://dom.spec.whatwg.org/#eventtarget">EventTarget</a> =
{
  // event handlers
  <span class=3D"kt">attribute</span> <a class=3D"n" data-link-type=3D"idl-=
name" href=3D"https://html.spec.whatwg.org/multipage/webappapis.html#eventh=
andler">EventHandler</a> <a class=3D"nv idl-code" data-link-type=3D"attribu=
te" data-type=3D"EventHandler" href=3D"https://xhr.spec.whatwg.org/#handler=
-xhr-onloadstart">onloadstart</a>;
  <span class=3D"kt">attribute</span> <a class=3D"n" data-link-type=3D"idl-=
name" href=3D"https://html.spec.whatwg.org/multipage/webappapis.html#eventh=
andler">EventHandler</a> <a class=3D"nv idl-code" data-link-type=3D"attribu=
te" data-type=3D"EventHandler" href=3D"https://xhr.spec.whatwg.org/#handler=
-xhr-onprogress">onprogress</a>;
  <span class=3D"kt">attribute</span> <a class=3D"n" data-link-type=3D"idl-=
name" href=3D"https://html.spec.whatwg.org/multipage/webappapis.html#eventh=
andler">EventHandler</a> <a class=3D"nv idl-code" data-link-type=3D"attribu=
te" data-type=3D"EventHandler" href=3D"https://xhr.spec.whatwg.org/#handler=
-xhr-onabort">onabort</a>;
  <span class=3D"kt">attribute</span> <a class=3D"n" data-link-type=3D"idl-=
name" href=3D"https://html.spec.whatwg.org/multipage/webappapis.html#eventh=
andler">EventHandler</a> <a class=3D"nv idl-code" data-link-type=3D"attribu=
te" data-type=3D"EventHandler" href=3D"https://xhr.spec.whatwg.org/#handler=
-xhr-onerror">onerror</a>;
  <span class=3D"kt">attribute</span> <a class=3D"n" data-link-type=3D"idl-=
name" href=3D"https://html.spec.whatwg.org/multipage/webappapis.html#eventh=
andler">EventHandler</a> <a class=3D"nv idl-code" data-link-type=3D"attribu=
te" data-type=3D"EventHandler" href=3D"https://xhr.spec.whatwg.org/#handler=
-xhr-onload">onload</a>;
  <span class=3D"kt">attribute</span> <a class=3D"n" data-link-type=3D"idl-=
name" href=3D"https://html.spec.whatwg.org/multipage/webappapis.html#eventh=
andler">EventHandler</a> <a class=3D"nv idl-code" data-link-type=3D"attribu=
te" data-type=3D"EventHandler" href=3D"https://xhr.spec.whatwg.org/#handler=
-xhr-ontimeout">ontimeout</a>;
  <span class=3D"kt">attribute</span> <a class=3D"n" data-link-type=3D"idl-=
name" href=3D"https://html.spec.whatwg.org/multipage/webappapis.html#eventh=
andler">EventHandler</a> <a class=3D"nv idl-code" data-link-type=3D"attribu=
te" data-type=3D"EventHandler" href=3D"https://xhr.spec.whatwg.org/#handler=
-xhr-onloadend">onloadend</a>;
};

[<a class=3D"nv idl-code" data-link-type=3D"extended-attribute" href=3D"htt=
ps://heycam.github.io/webidl/#Exposed">Exposed</a>=3D(<span class=3D"n">Win=
dow</span>,<span class=3D"n">DedicatedWorker</span>,<span class=3D"n">Share=
dWorker</span>)]
<span class=3D"kt">interface</span> <dfn class=3D"nv idl-code" data-dfn-typ=
e=3D"interface" data-export=3D"" id=3D"xmlhttprequestupload">XMLHttpRequest=
Upload<a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#xmlhttpre=
questupload"></a></dfn> : <a class=3D"n" data-link-type=3D"idl-name" href=
=3D"https://xhr.spec.whatwg.org/#xmlhttprequesteventtarget">XMLHttpRequestE=
ventTarget</a> {
};

<span class=3D"kt">enum</span> <dfn class=3D"nv idl-code" data-dfn-type=3D"=
enum" data-export=3D"" id=3D"xmlhttprequestresponsetype">XMLHttpRequestResp=
onseType<a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#xmlhttp=
requestresponsetype"></a></dfn> {
  <dfn class=3D"s idl-code" data-dfn-for=3D"XMLHttpRequestResponseType" dat=
a-dfn-type=3D"enum-value" data-export=3D"" data-lt=3D"&quot;&quot;|" id=3D"=
dom-xmlhttprequestresponsetype">""<a class=3D"self-link" href=3D"https://xh=
r.spec.whatwg.org/#dom-xmlhttprequestresponsetype"></a></dfn>,
  <dfn class=3D"s idl-code" data-dfn-for=3D"XMLHttpRequestResponseType" dat=
a-dfn-type=3D"enum-value" data-export=3D"" data-lt=3D"&quot;arraybuffer&quo=
t;|arraybuffer" id=3D"dom-xmlhttprequestresponsetype-arraybuffer">"arraybuf=
fer"<a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttp=
requestresponsetype-arraybuffer"></a></dfn>,
  <dfn class=3D"s idl-code" data-dfn-for=3D"XMLHttpRequestResponseType" dat=
a-dfn-type=3D"enum-value" data-export=3D"" data-lt=3D"&quot;blob&quot;|blob=
" id=3D"dom-xmlhttprequestresponsetype-blob">"blob"<a class=3D"self-link" h=
ref=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequestresponsetype-blob"></=
a></dfn>,
  <dfn class=3D"s idl-code" data-dfn-for=3D"XMLHttpRequestResponseType" dat=
a-dfn-type=3D"enum-value" data-export=3D"" data-lt=3D"&quot;document&quot;|=
document" id=3D"dom-xmlhttprequestresponsetype-document">"document"<a class=
=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequestrespo=
nsetype-document"></a></dfn>,
  <dfn class=3D"s idl-code" data-dfn-for=3D"XMLHttpRequestResponseType" dat=
a-dfn-type=3D"enum-value" data-export=3D"" data-lt=3D"&quot;json&quot;|json=
" id=3D"dom-xmlhttprequestresponsetype-json">"json"<a class=3D"self-link" h=
ref=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequestresponsetype-json"></=
a></dfn>,
  <dfn class=3D"s idl-code" data-dfn-for=3D"XMLHttpRequestResponseType" dat=
a-dfn-type=3D"enum-value" data-export=3D"" data-lt=3D"&quot;text&quot;|text=
" id=3D"dom-xmlhttprequestresponsetype-text">"text"<a class=3D"self-link" h=
ref=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequestresponsetype-text"></=
a></dfn>
};

[<a class=3D"nv idl-code" data-link-type=3D"constructor" href=3D"https://xh=
r.spec.whatwg.org/#dom-xmlhttprequest">Constructor</a>,
 <a class=3D"nv idl-code" data-link-type=3D"extended-attribute" href=3D"htt=
ps://heycam.github.io/webidl/#Exposed">Exposed</a>=3D(<span class=3D"n">Win=
dow</span>,<span class=3D"n">DedicatedWorker</span>,<span class=3D"n">Share=
dWorker</span>)]
<span class=3D"kt">interface</span> <dfn class=3D"nv idl-code" data-dfn-typ=
e=3D"interface" data-export=3D"" id=3D"xmlhttprequest">XMLHttpRequest<a cla=
ss=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#xmlhttprequest"></a><=
/dfn> : <a class=3D"n" data-link-type=3D"idl-name" href=3D"https://xhr.spec=
.whatwg.org/#xmlhttprequesteventtarget">XMLHttpRequestEventTarget</a> {
  // event handler
  <span class=3D"kt">attribute</span> <a class=3D"n" data-link-type=3D"idl-=
name" href=3D"https://html.spec.whatwg.org/multipage/webappapis.html#eventh=
andler">EventHandler</a> <a class=3D"nv idl-code" data-link-type=3D"attribu=
te" data-type=3D"EventHandler" href=3D"https://xhr.spec.whatwg.org/#handler=
-xhr-onreadystatechange">onreadystatechange</a>;

  // states
  <span class=3D"kt">const</span> <a class=3D"n idl-code" data-link-type=3D=
"interface" href=3D"https://heycam.github.io/webidl/#idl-unsigned-short"><s=
pan class=3D"kt">unsigned</span> <span class=3D"kt">short</span></a> <a cla=
ss=3D"nv idl-code" data-link-type=3D"const" href=3D"https://xhr.spec.whatwg=
.org/#dom-xmlhttprequest-unsent">UNSENT</a> =3D 0;
  <span class=3D"kt">const</span> <a class=3D"n idl-code" data-link-type=3D=
"interface" href=3D"https://heycam.github.io/webidl/#idl-unsigned-short"><s=
pan class=3D"kt">unsigned</span> <span class=3D"kt">short</span></a> <a cla=
ss=3D"nv idl-code" data-link-type=3D"const" href=3D"https://xhr.spec.whatwg=
.org/#dom-xmlhttprequest-opened">OPENED</a> =3D 1;
  <span class=3D"kt">const</span> <a class=3D"n idl-code" data-link-type=3D=
"interface" href=3D"https://heycam.github.io/webidl/#idl-unsigned-short"><s=
pan class=3D"kt">unsigned</span> <span class=3D"kt">short</span></a> <a cla=
ss=3D"nv idl-code" data-link-type=3D"const" href=3D"https://xhr.spec.whatwg=
.org/#dom-xmlhttprequest-headers_received">HEADERS_RECEIVED</a> =3D 2;
  <span class=3D"kt">const</span> <a class=3D"n idl-code" data-link-type=3D=
"interface" href=3D"https://heycam.github.io/webidl/#idl-unsigned-short"><s=
pan class=3D"kt">unsigned</span> <span class=3D"kt">short</span></a> <a cla=
ss=3D"nv idl-code" data-link-type=3D"const" href=3D"https://xhr.spec.whatwg=
.org/#dom-xmlhttprequest-loading">LOADING</a> =3D 3;
  <span class=3D"kt">const</span> <a class=3D"n idl-code" data-link-type=3D=
"interface" href=3D"https://heycam.github.io/webidl/#idl-unsigned-short"><s=
pan class=3D"kt">unsigned</span> <span class=3D"kt">short</span></a> <a cla=
ss=3D"nv idl-code" data-link-type=3D"const" href=3D"https://xhr.spec.whatwg=
.org/#dom-xmlhttprequest-done">DONE</a> =3D 4;
  <span class=3D"kt">readonly</span> <span class=3D"kt">attribute</span> <a=
 class=3D"n idl-code" data-link-type=3D"interface" href=3D"https://heycam.g=
ithub.io/webidl/#idl-unsigned-short"><span class=3D"kt">unsigned</span> <sp=
an class=3D"kt">short</span></a> <a class=3D"nv idl-code" data-link-type=3D=
"attribute" data-readonly=3D"" data-type=3D"unsigned short" href=3D"https:/=
/xhr.spec.whatwg.org/#dom-xmlhttprequest-readystate">readyState</a>;

  // request
  <span class=3D"kt">void</span> <a class=3D"nv idl-code" data-link-type=3D=
"method" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-open">open=
</a>(<a class=3D"n idl-code" data-link-type=3D"interface" href=3D"https://h=
eycam.github.io/webidl/#idl-ByteString"><span class=3D"kt">ByteString</span=
></a> <dfn class=3D"nv idl-code" data-dfn-for=3D"XMLHttpRequest/open(method=
, url)" data-dfn-type=3D"argument" data-export=3D"" id=3D"dom-xmlhttpreques=
t-open-method-url-method">method<a class=3D"self-link" href=3D"https://xhr.=
spec.whatwg.org/#dom-xmlhttprequest-open-method-url-method"></a></dfn>, <a =
class=3D"n idl-code" data-link-type=3D"interface" href=3D"https://heycam.gi=
thub.io/webidl/#idl-USVString"><span class=3D"kt">USVString</span></a> <dfn=
 class=3D"nv idl-code" data-dfn-for=3D"XMLHttpRequest/open(method, url)" da=
ta-dfn-type=3D"argument" data-export=3D"" id=3D"dom-xmlhttprequest-open-met=
hod-url-url">url<a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org/=
#dom-xmlhttprequest-open-method-url-url"></a></dfn>);
  <span class=3D"kt">void</span> <a class=3D"nv idl-code" data-link-type=3D=
"method" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-open-metho=
d-url-async-username-password">open</a>(<a class=3D"n idl-code" data-link-t=
ype=3D"interface" href=3D"https://heycam.github.io/webidl/#idl-ByteString">=
<span class=3D"kt">ByteString</span></a> <dfn class=3D"nv idl-code" data-df=
n-for=3D"XMLHttpRequest/open(method, url, async, username, password), XMLHt=
tpRequest/open(method, url, async, username), XMLHttpRequest/open(method, u=
rl, async)" data-dfn-type=3D"argument" data-export=3D"" id=3D"dom-xmlhttpre=
quest-open-method-url-async-username-password-method">method<a class=3D"sel=
f-link" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-open-method=
-url-async-username-password-method"></a></dfn>, <a class=3D"n idl-code" da=
ta-link-type=3D"interface" href=3D"https://heycam.github.io/webidl/#idl-USV=
String"><span class=3D"kt">USVString</span></a> <dfn class=3D"nv idl-code" =
data-dfn-for=3D"XMLHttpRequest/open(method, url, async, username, password)=
, XMLHttpRequest/open(method, url, async, username), XMLHttpRequest/open(me=
thod, url, async)" data-dfn-type=3D"argument" data-export=3D"" id=3D"dom-xm=
lhttprequest-open-method-url-async-username-password-url">url<a class=3D"se=
lf-link" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-open-metho=
d-url-async-username-password-url"></a></dfn>, <a class=3D"n idl-code" data=
-link-type=3D"interface" href=3D"https://heycam.github.io/webidl/#idl-boole=
an"><span class=3D"kt">boolean</span></a> <dfn class=3D"nv idl-code" data-d=
fn-for=3D"XMLHttpRequest/open(method, url, async, username, password), XMLH=
ttpRequest/open(method, url, async, username), XMLHttpRequest/open(method, =
url, async)" data-dfn-type=3D"argument" data-export=3D"" id=3D"dom-xmlhttpr=
equest-open-method-url-async-username-password-async">async<a class=3D"self=
-link" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-open-method-=
url-async-username-password-async"></a></dfn>, <span class=3D"kt">optional<=
/span> <a class=3D"n idl-code" data-link-type=3D"interface" href=3D"https:/=
/heycam.github.io/webidl/#idl-USVString"><span class=3D"kt">USVString</span=
></a>? <dfn class=3D"nv idl-code" data-dfn-for=3D"XMLHttpRequest/open(metho=
d, url, async, username, password), XMLHttpRequest/open(method, url, async,=
 username), XMLHttpRequest/open(method, url, async)" data-dfn-type=3D"argum=
ent" data-export=3D"" id=3D"dom-xmlhttprequest-open-method-url-async-userna=
me-password-username">username<a class=3D"self-link" href=3D"https://xhr.sp=
ec.whatwg.org/#dom-xmlhttprequest-open-method-url-async-username-password-u=
sername"></a></dfn> =3D <span class=3D"kt">null</span>, <span class=3D"kt">=
optional</span> <a class=3D"n idl-code" data-link-type=3D"interface" href=
=3D"https://heycam.github.io/webidl/#idl-USVString"><span class=3D"kt">USVS=
tring</span></a>? <dfn class=3D"nv idl-code" data-dfn-for=3D"XMLHttpRequest=
/open(method, url, async, username, password), XMLHttpRequest/open(method, =
url, async, username), XMLHttpRequest/open(method, url, async)" data-dfn-ty=
pe=3D"argument" data-export=3D"" id=3D"dom-xmlhttprequest-open-method-url-a=
sync-username-password-password">password<a class=3D"self-link" href=3D"htt=
ps://xhr.spec.whatwg.org/#dom-xmlhttprequest-open-method-url-async-username=
-password-password"></a></dfn> =3D <span class=3D"kt">null</span>);
  <span class=3D"kt">void</span> <a class=3D"nv idl-code" data-link-type=3D=
"method" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-setrequest=
header">setRequestHeader</a>(<a class=3D"n idl-code" data-link-type=3D"inte=
rface" href=3D"https://heycam.github.io/webidl/#idl-ByteString"><span class=
=3D"kt">ByteString</span></a> <dfn class=3D"nv idl-code" data-dfn-for=3D"XM=
LHttpRequest/setRequestHeader(name, value)" data-dfn-type=3D"argument" data=
-export=3D"" id=3D"dom-xmlhttprequest-setrequestheader-name-value-name">nam=
e<a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttpreq=
uest-setrequestheader-name-value-name"></a></dfn>, <a class=3D"n idl-code" =
data-link-type=3D"interface" href=3D"https://heycam.github.io/webidl/#idl-B=
yteString"><span class=3D"kt">ByteString</span></a> <dfn class=3D"nv idl-co=
de" data-dfn-for=3D"XMLHttpRequest/setRequestHeader(name, value)" data-dfn-=
type=3D"argument" data-export=3D"" id=3D"dom-xmlhttprequest-setrequestheade=
r-name-value-value">value<a class=3D"self-link" href=3D"https://xhr.spec.wh=
atwg.org/#dom-xmlhttprequest-setrequestheader-name-value-value"></a></dfn>)=
;
           <span class=3D"kt">attribute</span> <a class=3D"n idl-code" data=
-link-type=3D"interface" href=3D"https://heycam.github.io/webidl/#idl-unsig=
ned-long"><span class=3D"kt">unsigned</span> <span class=3D"kt">long</span>=
</a> <a class=3D"nv idl-code" data-link-type=3D"attribute" data-type=3D"uns=
igned long" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-timeout=
">timeout</a>;
           <span class=3D"kt">attribute</span> <a class=3D"n idl-code" data=
-link-type=3D"interface" href=3D"https://heycam.github.io/webidl/#idl-boole=
an"><span class=3D"kt">boolean</span></a> <a class=3D"nv idl-code" data-lin=
k-type=3D"attribute" data-type=3D"boolean" href=3D"https://xhr.spec.whatwg.=
org/#dom-xmlhttprequest-withcredentials">withCredentials</a>;
  [<a class=3D"nv idl-code" data-link-type=3D"extended-attribute" href=3D"h=
ttps://heycam.github.io/webidl/#SameObject">SameObject</a>] <span class=3D"=
kt">readonly</span> <span class=3D"kt">attribute</span> <a class=3D"n" data=
-link-type=3D"idl-name" href=3D"https://xhr.spec.whatwg.org/#xmlhttprequest=
upload">XMLHttpRequestUpload</a> <a class=3D"nv idl-code" data-link-type=3D=
"attribute" data-readonly=3D"" data-type=3D"XMLHttpRequestUpload" href=3D"h=
ttps://xhr.spec.whatwg.org/#dom-xmlhttprequest-upload">upload</a>;
  <span class=3D"kt">void</span> <a class=3D"nv idl-code" data-link-type=3D=
"method" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-send">send=
</a>(<span class=3D"kt">optional</span> (<a class=3D"n" data-link-type=3D"i=
dl-name" href=3D"https://dom.spec.whatwg.org/#document">Document</a> <span =
class=3D"kt">or</span> <a class=3D"n" data-link-type=3D"idl-name" href=3D"h=
ttps://fetch.spec.whatwg.org/#bodyinit">BodyInit</a>)? <dfn class=3D"nv idl=
-code" data-dfn-for=3D"XMLHttpRequest/send(body), XMLHttpRequest/send()" da=
ta-dfn-type=3D"argument" data-export=3D"" id=3D"dom-xmlhttprequest-send-bod=
y-body">body<a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#dom=
-xmlhttprequest-send-body-body"></a></dfn> =3D <span class=3D"kt">null</spa=
n>);
  <span class=3D"kt">void</span> <a class=3D"nv idl-code" data-link-type=3D=
"method" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-abort">abo=
rt</a>();

  // response
  <span class=3D"kt">readonly</span> <span class=3D"kt">attribute</span> <a=
 class=3D"n idl-code" data-link-type=3D"interface" href=3D"https://heycam.g=
ithub.io/webidl/#idl-USVString"><span class=3D"kt">USVString</span></a> <a =
class=3D"nv idl-code" data-link-type=3D"attribute" data-readonly=3D"" data-=
type=3D"USVString" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-=
responseurl">responseURL</a>;
  <span class=3D"kt">readonly</span> <span class=3D"kt">attribute</span> <a=
 class=3D"n idl-code" data-link-type=3D"interface" href=3D"https://heycam.g=
ithub.io/webidl/#idl-unsigned-short"><span class=3D"kt">unsigned</span> <sp=
an class=3D"kt">short</span></a> <a class=3D"nv idl-code" data-link-type=3D=
"attribute" data-readonly=3D"" data-type=3D"unsigned short" href=3D"https:/=
/xhr.spec.whatwg.org/#dom-xmlhttprequest-status">status</a>;
  <span class=3D"kt">readonly</span> <span class=3D"kt">attribute</span> <a=
 class=3D"n idl-code" data-link-type=3D"interface" href=3D"https://heycam.g=
ithub.io/webidl/#idl-ByteString"><span class=3D"kt">ByteString</span></a> <=
a class=3D"nv idl-code" data-link-type=3D"attribute" data-readonly=3D"" dat=
a-type=3D"ByteString" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttpreque=
st-statustext">statusText</a>;
  <a class=3D"n idl-code" data-link-type=3D"interface" href=3D"https://heyc=
am.github.io/webidl/#idl-ByteString"><span class=3D"kt">ByteString</span></=
a>? <a class=3D"nv idl-code" data-link-type=3D"method" href=3D"https://xhr.=
spec.whatwg.org/#dom-xmlhttprequest-getresponseheader">getResponseHeader</a=
>(<a class=3D"n idl-code" data-link-type=3D"interface" href=3D"https://heyc=
am.github.io/webidl/#idl-ByteString"><span class=3D"kt">ByteString</span></=
a> <dfn class=3D"nv idl-code" data-dfn-for=3D"XMLHttpRequest/getResponseHea=
der(name)" data-dfn-type=3D"argument" data-export=3D"" id=3D"dom-xmlhttpreq=
uest-getresponseheader-name-name">name<a class=3D"self-link" href=3D"https:=
//xhr.spec.whatwg.org/#dom-xmlhttprequest-getresponseheader-name-name"></a>=
</dfn>);
  <a class=3D"n idl-code" data-link-type=3D"interface" href=3D"https://heyc=
am.github.io/webidl/#idl-ByteString"><span class=3D"kt">ByteString</span></=
a> <a class=3D"nv idl-code" data-link-type=3D"method" href=3D"https://xhr.s=
pec.whatwg.org/#dom-xmlhttprequest-getallresponseheaders">getAllResponseHea=
ders</a>();
  <span class=3D"kt">void</span> <a class=3D"nv idl-code" data-link-type=3D=
"method" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-overridemi=
metype">overrideMimeType</a>(<a class=3D"n idl-code" data-link-type=3D"inte=
rface" href=3D"https://heycam.github.io/webidl/#idl-DOMString"><span class=
=3D"kt">DOMString</span></a> <dfn class=3D"nv idl-code" data-dfn-for=3D"XML=
HttpRequest/overrideMimeType(mime)" data-dfn-type=3D"argument" data-export=
=3D"" id=3D"dom-xmlhttprequest-overridemimetype-mime-mime">mime<a class=3D"=
self-link" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-override=
mimetype-mime-mime"></a></dfn>);
           <span class=3D"kt">attribute</span> <a class=3D"n" data-link-typ=
e=3D"idl-name" href=3D"https://xhr.spec.whatwg.org/#xmlhttprequestresponset=
ype">XMLHttpRequestResponseType</a> <a class=3D"nv idl-code" data-link-type=
=3D"attribute" data-type=3D"XMLHttpRequestResponseType" href=3D"https://xhr=
.spec.whatwg.org/#dom-xmlhttprequest-responsetype">responseType</a>;
  <span class=3D"kt">readonly</span> <span class=3D"kt">attribute</span> <s=
pan class=3D"kt">any</span> <a class=3D"nv idl-code" data-link-type=3D"attr=
ibute" data-readonly=3D"" data-type=3D"any" href=3D"https://xhr.spec.whatwg=
.org/#dom-xmlhttprequest-response">response</a>;
  <span class=3D"kt">readonly</span> <span class=3D"kt">attribute</span> <a=
 class=3D"n idl-code" data-link-type=3D"interface" href=3D"https://heycam.g=
ithub.io/webidl/#idl-USVString"><span class=3D"kt">USVString</span></a> <a =
class=3D"nv idl-code" data-link-type=3D"attribute" data-readonly=3D"" data-=
type=3D"USVString" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-=
responsetext">responseText</a>;
  [<a class=3D"nv idl-code" data-link-type=3D"extended-attribute" href=3D"h=
ttps://heycam.github.io/webidl/#Exposed">Exposed</a>=3D<span class=3D"n">Wi=
ndow</span>] <span class=3D"kt">readonly</span> <span class=3D"kt">attribut=
e</span> <a class=3D"n" data-link-type=3D"idl-name" href=3D"https://dom.spe=
c.whatwg.org/#document">Document</a>? <a class=3D"nv idl-code" data-link-ty=
pe=3D"attribute" data-readonly=3D"" data-type=3D"Document?" href=3D"https:/=
/xhr.spec.whatwg.org/#dom-xmlhttprequest-responsexml">responseXML</a>;
};</pre>
   <p>An <code class=3D"idl"><a data-link-type=3D"idl" href=3D"https://xhr.=
spec.whatwg.org/#xmlhttprequest">XMLHttpRequest</a></code> object has an as=
sociated <code class=3D"idl"><a data-link-type=3D"idl" href=3D"https://xhr.=
spec.whatwg.org/#xmlhttprequestupload">XMLHttpRequestUpload</a></code> obje=
ct. </p>
   <p>An <code class=3D"idl"><a data-link-type=3D"idl" href=3D"https://xhr.=
spec.whatwg.org/#xmlhttprequest">XMLHttpRequest</a></code> object has an as=
sociated <dfn data-dfn-type=3D"dfn" data-noexport=3D"" id=3D"concept-xmlhtt=
prequest-state">state<a class=3D"self-link" href=3D"https://xhr.spec.whatwg=
.org/#concept-xmlhttprequest-state"></a></dfn>, which is one of <i>unsent</=
i>, <i>opened</i>, <i>headers received</i>, <i>loading</i>, and <i>done</i>=
. Unless stated otherwise it is <i>unsent</i>. </p>
   <p>An <code class=3D"idl"><a data-link-type=3D"idl" href=3D"https://xhr.=
spec.whatwg.org/#xmlhttprequest">XMLHttpRequest</a></code> object has an as=
sociated <dfn data-dfn-type=3D"dfn" data-noexport=3D"" id=3D"send-flag"><co=
de>send()</code> flag<a class=3D"self-link" href=3D"https://xhr.spec.whatwg=
.org/#send-flag"></a></dfn>. Unless stated otherwise it is unset. </p>
   <p>An <code class=3D"idl"><a data-link-type=3D"idl" href=3D"https://xhr.=
spec.whatwg.org/#xmlhttprequest">XMLHttpRequest</a></code> object has an as=
sociated <dfn data-dfn-type=3D"dfn" data-noexport=3D"" id=3D"stop-timeout-f=
lag">stop timeout flag<a class=3D"self-link" href=3D"https://xhr.spec.whatw=
g.org/#stop-timeout-flag"></a></dfn>.
Unless stated otherwise it is unset. </p>
   <h3 class=3D"heading settled" data-level=3D"4.1" id=3D"constructors"><sp=
an class=3D"secno">4.1. </span><span class=3D"content">Constructors</span><=
a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#constructors"></=
a></h3>
   <dl class=3D"domintro">
    <dt><code><var>client</var> =3D new <a class=3D"idl-code" data-link-typ=
e=3D"constructor" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest">=
XMLHttpRequest()</a></code>=20
    </dt><dd>Returns a new <code class=3D"idl"><a data-link-type=3D"idl" hr=
ef=3D"https://xhr.spec.whatwg.org/#xmlhttprequest">XMLHttpRequest</a></code=
> object.=20
   </dd></dl>
   <p>The <dfn class=3D"idl-code" data-dfn-for=3D"XMLHttpRequest" data-dfn-=
type=3D"constructor" data-export=3D"" id=3D"dom-xmlhttprequest"><code>XMLHt=
tpRequest()</code><a class=3D"self-link" href=3D"https://xhr.spec.whatwg.or=
g/#dom-xmlhttprequest"></a></dfn> constructor, when invoked, must return a =
new <code class=3D"idl"><a data-link-type=3D"idl" href=3D"https://xhr.spec.=
whatwg.org/#xmlhttprequest">XMLHttpRequest</a></code> object. </p>
   <h3 class=3D"heading settled" data-level=3D"4.2" id=3D"garbage-collectio=
n"><span class=3D"secno">4.2. </span><span class=3D"content">Garbage collec=
tion</span><a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#garb=
age-collection"></a></h3>
   <p>An <code class=3D"idl"><a data-link-type=3D"idl" href=3D"https://xhr.=
spec.whatwg.org/#xmlhttprequest">XMLHttpRequest</a></code> object must not =
be garbage collected if its <a data-link-type=3D"dfn" href=3D"https://xhr.s=
pec.whatwg.org/#concept-xmlhttprequest-state">state</a> is either <i>opened=
</i> with the <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org=
/#send-flag"><code>send()</code> flag</a> set, <i>headers received</i>, or =
<i>loading</i>, and it has one or more <a data-link-type=3D"dfn" href=3D"ht=
tps://dom.spec.whatwg.org/#concept-event-listener">event listeners</a> regi=
stered whose <b>type</b> is one of <a class=3D"idl-code" data-link-type=3D"=
event" href=3D"https://xhr.spec.whatwg.org/#event-xhr-readystatechange"><co=
de>readystatechange</code></a>, <a class=3D"idl-code" data-link-type=3D"eve=
nt" href=3D"https://xhr.spec.whatwg.org/#event-xhr-progress"><code>progress=
</code></a>, <a class=3D"idl-code" data-link-type=3D"event" href=3D"https:/=
/xhr.spec.whatwg.org/#event-xhr-abort"><code>abort</code></a>, <a class=3D"=
idl-code" data-link-type=3D"event" href=3D"https://xhr.spec.whatwg.org/#eve=
nt-xhr-error"><code>error</code></a>, <a class=3D"idl-code" data-link-type=
=3D"event" href=3D"https://xhr.spec.whatwg.org/#event-xhr-load"><code>load<=
/code></a>, <a class=3D"idl-code" data-link-type=3D"event" href=3D"https://=
xhr.spec.whatwg.org/#event-xhr-timeout"><code>timeout</code></a>, and <a cl=
ass=3D"idl-code" data-link-type=3D"event" href=3D"https://xhr.spec.whatwg.o=
rg/#event-xhr-loadend"><code>loadend</code></a>. </p>
   <p>If an <code class=3D"idl"><a data-link-type=3D"idl" href=3D"https://x=
hr.spec.whatwg.org/#xmlhttprequest">XMLHttpRequest</a></code> object is gar=
bage collected while its
connection is still open, the user agent must <a data-link-type=3D"dfn" hre=
f=3D"https://xhr.spec.whatwg.org/#terminate-the-request">terminate the requ=
est</a>. </p>
   <h3 class=3D"heading settled" data-level=3D"4.3" id=3D"event-handlers"><=
span class=3D"secno">4.3. </span><span class=3D"content">Event handlers</sp=
an><a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#event-handle=
rs"></a></h3>
   <p>The following are the <a data-link-type=3D"dfn" href=3D"https://html.=
spec.whatwg.org/multipage/webappapis.html#event-handlers">event handlers</a=
> (and their corresponding <a data-link-type=3D"dfn" href=3D"https://html.s=
pec.whatwg.org/multipage/webappapis.html#event-handler-event-type">event ha=
ndler event types</a>)
that must be supported on objects implementing an interface that inherits
from <code class=3D"idl"><a data-link-type=3D"idl" href=3D"https://xhr.spec=
.whatwg.org/#xmlhttprequesteventtarget">XMLHttpRequestEventTarget</a></code=
> as attributes: </p>
   <table>
    <thead>
     <tr>
      <th><a data-link-type=3D"dfn" href=3D"https://html.spec.whatwg.org/mu=
ltipage/webappapis.html#event-handlers">event handler</a>=20
      </th><th><a data-link-type=3D"dfn" href=3D"https://html.spec.whatwg.o=
rg/multipage/webappapis.html#event-handler-event-type">event handler event =
type</a>=20
    </th></tr></thead><tbody>
     <tr>
      <td><dfn class=3D"idl-code" data-dfn-for=3D"XMLHttpRequestEventTarget=
" data-dfn-type=3D"attribute" data-export=3D"" id=3D"handler-xhr-onloadstar=
t"><code>onloadstart</code><a class=3D"self-link" href=3D"https://xhr.spec.=
whatwg.org/#handler-xhr-onloadstart"></a></dfn>=20
      </td><td><a class=3D"idl-code" data-link-type=3D"event" href=3D"https=
://xhr.spec.whatwg.org/#event-xhr-loadstart"><code>loadstart</code></a>=20
     </td></tr><tr>
      <td><dfn class=3D"idl-code" data-dfn-for=3D"XMLHttpRequestEventTarget=
" data-dfn-type=3D"attribute" data-export=3D"" id=3D"handler-xhr-onprogress=
"><code>onprogress</code><a class=3D"self-link" href=3D"https://xhr.spec.wh=
atwg.org/#handler-xhr-onprogress"></a></dfn>=20
      </td><td><a class=3D"idl-code" data-link-type=3D"event" href=3D"https=
://xhr.spec.whatwg.org/#event-xhr-progress"><code>progress</code></a>=20
     </td></tr><tr>
      <td><dfn class=3D"idl-code" data-dfn-for=3D"XMLHttpRequestEventTarget=
" data-dfn-type=3D"attribute" data-export=3D"" id=3D"handler-xhr-onabort"><=
code>onabort</code><a class=3D"self-link" href=3D"https://xhr.spec.whatwg.o=
rg/#handler-xhr-onabort"></a></dfn>=20
      </td><td><a class=3D"idl-code" data-link-type=3D"event" href=3D"https=
://xhr.spec.whatwg.org/#event-xhr-abort"><code>abort</code></a>=20
     </td></tr><tr>
      <td><dfn class=3D"idl-code" data-dfn-for=3D"XMLHttpRequestEventTarget=
" data-dfn-type=3D"attribute" data-export=3D"" id=3D"handler-xhr-onerror"><=
code>onerror</code><a class=3D"self-link" href=3D"https://xhr.spec.whatwg.o=
rg/#handler-xhr-onerror"></a></dfn>=20
      </td><td><a class=3D"idl-code" data-link-type=3D"event" href=3D"https=
://xhr.spec.whatwg.org/#event-xhr-error"><code>error</code></a>=20
     </td></tr><tr>
      <td><dfn class=3D"idl-code" data-dfn-for=3D"XMLHttpRequestEventTarget=
" data-dfn-type=3D"attribute" data-export=3D"" id=3D"handler-xhr-onload"><c=
ode>onload</code><a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org=
/#handler-xhr-onload"></a></dfn>=20
      </td><td><a class=3D"idl-code" data-link-type=3D"event" href=3D"https=
://xhr.spec.whatwg.org/#event-xhr-load"><code>load</code></a>=20
     </td></tr><tr>
      <td><dfn class=3D"idl-code" data-dfn-for=3D"XMLHttpRequestEventTarget=
" data-dfn-type=3D"attribute" data-export=3D"" id=3D"handler-xhr-ontimeout"=
><code>ontimeout</code><a class=3D"self-link" href=3D"https://xhr.spec.what=
wg.org/#handler-xhr-ontimeout"></a></dfn>=20
      </td><td><a class=3D"idl-code" data-link-type=3D"event" href=3D"https=
://xhr.spec.whatwg.org/#event-xhr-timeout"><code>timeout</code></a>=20
     </td></tr><tr>
      <td><dfn class=3D"idl-code" data-dfn-for=3D"XMLHttpRequestEventTarget=
" data-dfn-type=3D"attribute" data-export=3D"" id=3D"handler-xhr-onloadend"=
><code>onloadend</code><a class=3D"self-link" href=3D"https://xhr.spec.what=
wg.org/#handler-xhr-onloadend"></a></dfn>=20
      </td><td><a class=3D"idl-code" data-link-type=3D"event" href=3D"https=
://xhr.spec.whatwg.org/#event-xhr-loadend"><code>loadend</code></a>=20
   </td></tr></tbody></table>
   <p>The following is the <a data-link-type=3D"dfn" href=3D"https://html.s=
pec.whatwg.org/multipage/webappapis.html#event-handlers">event handler</a> =
(and its corresponding <a data-link-type=3D"dfn" href=3D"https://html.spec.=
whatwg.org/multipage/webappapis.html#event-handler-event-type">event handle=
r event type</a>) that must be
supported as attribute solely by the <code class=3D"idl"><a data-link-type=
=3D"idl" href=3D"https://xhr.spec.whatwg.org/#xmlhttprequest">XMLHttpReques=
t</a></code> object: </p>
   <table>
    <thead>
     <tr>
      <th><a data-link-type=3D"dfn" href=3D"https://html.spec.whatwg.org/mu=
ltipage/webappapis.html#event-handlers">event handler</a>=20
      </th><th><a data-link-type=3D"dfn" href=3D"https://html.spec.whatwg.o=
rg/multipage/webappapis.html#event-handler-event-type">event handler event =
type</a>=20
    </th></tr></thead><tbody>
     <tr>
      <td><dfn class=3D"idl-code" data-dfn-for=3D"XMLHttpRequest" data-dfn-=
type=3D"attribute" data-export=3D"" id=3D"handler-xhr-onreadystatechange"><=
code>onreadystatechange</code><a class=3D"self-link" href=3D"https://xhr.sp=
ec.whatwg.org/#handler-xhr-onreadystatechange"></a></dfn>=20
      </td><td><a class=3D"idl-code" data-link-type=3D"event" href=3D"https=
://xhr.spec.whatwg.org/#event-xhr-readystatechange"><code>readystatechange<=
/code></a>=20
   </td></tr></tbody></table>
   <h3 class=3D"heading settled" data-level=3D"4.4" id=3D"states"><span cla=
ss=3D"secno">4.4. </span><span class=3D"content">States</span><a class=3D"s=
elf-link" href=3D"https://xhr.spec.whatwg.org/#states"></a></h3>
   <dl class=3D"domintro">
    <dt><code><var>client</var> . <a class=3D"idl-code" data-link-type=3D"a=
ttribute" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-readystat=
e">readyState</a></code>=20
    </dt><dd>
     <p>Returns <var>client</var>=E2=80=99s <a data-link-type=3D"dfn" href=
=3D"https://xhr.spec.whatwg.org/#concept-xmlhttprequest-state">state</a>. <=
/p>
   </dd></dl>
   <p>The <dfn class=3D"idl-code" data-dfn-for=3D"XMLHttpRequest" data-dfn-=
type=3D"attribute" data-export=3D"" id=3D"dom-xmlhttprequest-readystate"><c=
ode>readyState</code><a class=3D"self-link" href=3D"https://xhr.spec.whatwg=
.org/#dom-xmlhttprequest-readystate"></a></dfn> attribute=E2=80=99s getter =
must return the value from the table below in the cell of the second column=
, from
the row where the value in the cell in the first column is <a data-link-typ=
e=3D"dfn" href=3D"https://dom.spec.whatwg.org/#context-object">context obje=
ct</a>=E2=80=99s <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.=
org/#concept-xmlhttprequest-state">state</a>: </p>
   <table>
    <tbody>
     <tr>
      <td><i>unsent</i>=20
      </td><td><dfn class=3D"idl-code" data-dfn-for=3D"XMLHttpRequest" data=
-dfn-type=3D"const" data-export=3D"" id=3D"dom-xmlhttprequest-unsent"><code=
>UNSENT</code><a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#d=
om-xmlhttprequest-unsent"></a></dfn> (numeric value 0)=20
      </td><td>The object has been constructed.=20
     </td></tr><tr>
      <td><i>opened</i>=20
      </td><td><dfn class=3D"idl-code" data-dfn-for=3D"XMLHttpRequest" data=
-dfn-type=3D"const" data-export=3D"" id=3D"dom-xmlhttprequest-opened"><code=
>OPENED</code><a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#d=
om-xmlhttprequest-opened"></a></dfn> (numeric value 1)=20
      </td><td>The <a class=3D"idl-code" data-link-type=3D"method" href=3D"=
https://xhr.spec.whatwg.org/#dom-xmlhttprequest-open"><code>open()</code></=
a> method has
   been successfully invoked. During this state request headers can be set =
using <a data-link-type=3D"functionish" href=3D"https://xhr.spec.whatwg.org=
/#dom-xmlhttprequest-setrequestheader"><code>setRequestHeader()</code></a> =
and the fetch can be initiated using the <a data-link-type=3D"functionish" =
href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-send"><code>send()<=
/code></a> method.=20
     </td></tr><tr>
      <td><i>headers received</i>=20
      </td><td><dfn class=3D"idl-code" data-dfn-for=3D"XMLHttpRequest" data=
-dfn-type=3D"const" data-export=3D"" id=3D"dom-xmlhttprequest-headers_recei=
ved"><code>HEADERS_RECEIVED</code><a class=3D"self-link" href=3D"https://xh=
r.spec.whatwg.org/#dom-xmlhttprequest-headers_received"></a></dfn> (numeric=
 value 2)=20
      </td><td>All redirects (if any) have been followed and all HTTP heade=
rs of the <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#re=
sponse">response</a> have been received.=20
     </td></tr><tr>
      <td><i>loading</i>=20
      </td><td><dfn class=3D"idl-code" data-dfn-for=3D"XMLHttpRequest" data=
-dfn-type=3D"const" data-export=3D"" id=3D"dom-xmlhttprequest-loading"><cod=
e>LOADING</code><a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org/=
#dom-xmlhttprequest-loading"></a></dfn> (numeric value 3)=20
      </td><td>The <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatw=
g.org/#response">response</a>=E2=80=99s <a data-link-type=3D"dfn" href=3D"h=
ttps://fetch.spec.whatwg.org/#concept-response-body">body</a> is being rece=
ived.=20
     </td></tr><tr>
      <td><i>done</i>=20
      </td><td><dfn class=3D"idl-code" data-dfn-for=3D"XMLHttpRequest" data=
-dfn-type=3D"const" data-export=3D"" id=3D"dom-xmlhttprequest-done"><code>D=
ONE</code><a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#dom-x=
mlhttprequest-done"></a></dfn> (numeric value 4)=20
      </td><td>The data transfer has been completed or something went wrong=
 during the transfer
   (e.g. infinite redirects).=20
   </td></tr></tbody></table>
   <h3 class=3D"heading settled" data-level=3D"4.5" id=3D"request"><span cl=
ass=3D"secno">4.5. </span><span class=3D"content">Request</span><a class=3D=
"self-link" href=3D"https://xhr.spec.whatwg.org/#request"></a></h3>
   <p>Each <code class=3D"idl"><a data-link-type=3D"idl" href=3D"https://xh=
r.spec.whatwg.org/#xmlhttprequest">XMLHttpRequest</a></code> object has the=
 following request-associated concepts: <dfn data-dfn-type=3D"dfn" data-noe=
xport=3D"" id=3D"request-method">request method<a class=3D"self-link" href=
=3D"https://xhr.spec.whatwg.org/#request-method"></a></dfn>, <dfn data-dfn-=
type=3D"dfn" data-noexport=3D"" id=3D"request-url">request URL<a class=3D"s=
elf-link" href=3D"https://xhr.spec.whatwg.org/#request-url"></a></dfn>, <df=
n data-dfn-type=3D"dfn" data-noexport=3D"" id=3D"author-request-headers">au=
thor request headers<a class=3D"self-link" href=3D"https://xhr.spec.whatwg.=
org/#author-request-headers"></a></dfn>, <dfn data-dfn-type=3D"dfn" data-no=
export=3D"" id=3D"request-body">request body<a class=3D"self-link" href=3D"=
https://xhr.spec.whatwg.org/#request-body"></a></dfn>, <dfn data-dfn-type=
=3D"dfn" data-noexport=3D"" id=3D"synchronous-flag">synchronous flag<a clas=
s=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#synchronous-flag"></a>=
</dfn>, <dfn data-dfn-type=3D"dfn" data-noexport=3D"" id=3D"upload-complete=
-flag">upload complete flag<a class=3D"self-link" href=3D"https://xhr.spec.=
whatwg.org/#upload-complete-flag"></a></dfn>, and <dfn data-dfn-type=3D"dfn=
" data-noexport=3D"" id=3D"upload-listener-flag">upload listener flag<a cla=
ss=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#upload-listener-flag"=
></a></dfn>. </p>
   <p>The <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#au=
thor-request-headers">author request headers</a> is an initially empty <a d=
ata-link-type=3D"dfn" href=3D"https://fetch.spec.whatwg.org/#concept-header=
-list">header list</a>. </p>
   <p>The <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#re=
quest-body">request body</a> is initially null. </p>
   <p>The <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#sy=
nchronous-flag">synchronous flag</a>, <a data-link-type=3D"dfn" href=3D"htt=
ps://xhr.spec.whatwg.org/#upload-complete-flag">upload complete flag</a>, a=
nd <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#upload-li=
stener-flag">upload listener flag</a> are initially unset. </p>
   <hr>
   <p>To <dfn data-dfn-type=3D"dfn" data-noexport=3D"" id=3D"terminate-the-=
request">terminate the request<a class=3D"self-link" href=3D"https://xhr.sp=
ec.whatwg.org/#terminate-the-request"></a></dfn>, <a data-link-type=3D"dfn"=
 href=3D"https://fetch.spec.whatwg.org/#concept-fetch-terminate">terminate<=
/a> the <a data-link-type=3D"dfn" href=3D"https://fetch.spec.whatwg.org/#co=
ncept-fetch">fetch</a> algorithm operated by the <code class=3D"idl"><a dat=
a-link-type=3D"idl" href=3D"https://xhr.spec.whatwg.org/#xmlhttprequest">XM=
LHttpRequest</a></code> object with reason <i>fatal</i>. </p>
   <h4 class=3D"heading settled" data-level=3D"4.5.1" id=3D"the-open()-meth=
od"><span class=3D"secno">4.5.1. </span><span class=3D"content">The <code>o=
pen()</code> method</span><a class=3D"self-link" href=3D"https://xhr.spec.w=
hatwg.org/#the-open%28%29-method"></a></h4>
   <dl class=3D"domintro">
    <dt><code><var>client</var> . <a class=3D"idl-code" data-link-type=3D"m=
ethod" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-open">open(<=
var>method</var>, <var>url</var> [, <var>async</var> =3D true [, <var>usern=
ame</var> =3D null [, <var>password</var> =3D null]]])</a></code>=20
    </dt><dd>
     <p>Sets the <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.=
org/#request-method">request method</a>, <a data-link-type=3D"dfn" href=3D"=
https://xhr.spec.whatwg.org/#request-url">request URL</a>, and <a data-link=
-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#synchronous-flag">synchr=
onous flag</a>. </p>
     <p>Throws a <code>SyntaxError</code> exception if
  either <var>method</var> is not a valid HTTP method or <var>url</var> can=
not be parsed. </p>
     <p>Throws a <code>SecurityError</code> exception
  if <var>method</var> is a case-insensitive match for
  `<code>CONNECT</code>`, `<code>TRACE</code>` or `<code>TRACK</code>`. </p=
>
     <p>Throws an <code>InvalidAccessError</code> exception if <var>async</=
var> is false, <a data-link-type=3D"dfn" href=3D"https://html.spec.whatwg.o=
rg/multipage/webappapis.html#current-global-object">current global object</=
a> is a <code class=3D"idl"><a data-link-type=3D"idl" href=3D"https://html.=
spec.whatwg.org/multipage/browsers.html#window">Window</a></code> object, a=
nd the <code class=3D"idl"><a class=3D"idl-code" data-link-type=3D"attribut=
e" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-timeout">timeout=
</a></code> attribute is not zero or the <code class=3D"idl"><a data-link-t=
ype=3D"idl" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-respons=
etype">responseType</a></code> attribute is not the empty string. </p>
   </dd></dl>
   <p class=3D"critical no-backref" id=3D"sync-warning">Synchronous <code c=
lass=3D"idl"><a data-link-type=3D"idl" href=3D"https://xhr.spec.whatwg.org/=
#xmlhttprequest">XMLHttpRequest</a></code> outside of workers is in the pro=
cess of being removed from the web platform as it has
detrimental effects to the end user=E2=80=99s experience. (This is a long p=
rocess that takes many
years.) Developers must not pass false for the <var>async</var> argument wh=
en <a data-link-type=3D"dfn" href=3D"https://html.spec.whatwg.org/multipage=
/webappapis.html#current-global-object">current global object</a> is a <cod=
e class=3D"idl"><a data-link-type=3D"idl" href=3D"https://html.spec.whatwg.=
org/multipage/browsers.html#window">Window</a></code> object. User agents a=
re strongly encouraged to warn about such usage in developer tools and may
experiment with <a data-link-type=3D"dfn" href=3D"https://heycam.github.io/=
webidl/#dfn-throw">throwing</a> an <code>InvalidAccessError</code> exceptio=
n when it occurs. </p>
   <p>The <dfn class=3D"idl-code" data-dfn-for=3D"XMLHttpRequest" data-dfn-=
type=3D"method" data-export=3D"" id=3D"dom-xmlhttprequest-open"><code>open(=
<var>method</var>, <var>url</var>)</code><a class=3D"self-link" href=3D"htt=
ps://xhr.spec.whatwg.org/#dom-xmlhttprequest-open"></a></dfn> and <dfn clas=
s=3D"idl-code" data-dfn-for=3D"XMLHttpRequest" data-dfn-type=3D"method" dat=
a-export=3D"" data-lt=3D"open(method, url, async, username, password)|open(=
method, url, async, username)|open(method, url, async)" id=3D"dom-xmlhttpre=
quest-open-method-url-async-username-password"><code>open(<var>method</var>=
, <var>url</var>, <var>async</var>, <var>username</var>, <var>password</var=
>)</code><a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#dom-xm=
lhttprequest-open-method-url-async-username-password"></a></dfn> methods, w=
hen invoked, must run these steps: </p>
   <ol>
    <li>
     <p>If <a data-link-type=3D"dfn" href=3D"https://dom.spec.whatwg.org/#c=
ontext-object">context object</a>=E2=80=99s <a data-link-type=3D"dfn" href=
=3D"https://html.spec.whatwg.org/multipage/webappapis.html#relevant-setting=
s-object">relevant settings object</a> has a <a data-link-type=3D"dfn" href=
=3D"https://html.spec.whatwg.org/multipage/webappapis.html#responsible-docu=
ment">responsible document</a> and it is <em>not</em> <a data-link-type=3D"=
dfn" href=3D"https://html.spec.whatwg.org/multipage/browsers.html#fully-act=
ive">fully active</a>, <a data-link-type=3D"dfn" href=3D"https://heycam.git=
hub.io/webidl/#dfn-throw">throw</a> an <code>InvalidStateError</code> excep=
tion. </p>
    </li><li>
     <p>If <var>method</var> is not a <a data-link-type=3D"dfn" href=3D"htt=
ps://fetch.spec.whatwg.org/#concept-method">method</a>, <a data-link-type=
=3D"dfn" href=3D"https://heycam.github.io/webidl/#dfn-throw">throw</a> a <c=
ode>SyntaxError</code> exception. </p>
    </li><li>
     <p>If <var>method</var> is a <a data-link-type=3D"dfn" href=3D"https:/=
/fetch.spec.whatwg.org/#forbidden-method">forbidden method</a>, <a data-lin=
k-type=3D"dfn" href=3D"https://heycam.github.io/webidl/#dfn-throw">throw</a=
> a <code>SecurityError</code> exception. </p>
    </li><li>
     <p><a data-link-type=3D"dfn" href=3D"https://fetch.spec.whatwg.org/#co=
ncept-method-normalize">Normalize</a> <var>method</var>. </p>
    </li><li>
     <p>Let <var>parsedURL</var> be the result of <a data-link-type=3D"dfn"=
 href=3D"https://url.spec.whatwg.org/#concept-url-parser">parsing</a> <var>=
url</var> with <a data-link-type=3D"dfn" href=3D"https://dom.spec.whatwg.or=
g/#context-object">context object</a>=E2=80=99s <a data-link-type=3D"dfn" h=
ref=3D"https://html.spec.whatwg.org/multipage/webappapis.html#relevant-sett=
ings-object">relevant settings object</a>=E2=80=99s <a data-link-type=3D"df=
n" href=3D"https://html.spec.whatwg.org/multipage/webappapis.html#api-base-=
url">API base URL</a>. </p>
    </li><li>
     <p>If <var>parsedURL</var> is failure, <a data-link-type=3D"dfn" href=
=3D"https://heycam.github.io/webidl/#dfn-throw">throw</a> a <code>SyntaxErr=
or</code> exception. </p>
    </li><li>
     <p>If the <var>async</var> argument is omitted, set <var>async</var> t=
o true, and set <var>username</var> and <var>password</var> to null. </p>
     <p class=3D"note" role=3D"note">Unfortunately legacy content prevents =
treating the <var>async</var> argument being <code>undefined</code> identic=
al from it being omitted. </p>
    </li><li>
     <p>If <var>parsedURL</var>=E2=80=99s <a data-link-type=3D"dfn" href=3D=
"https://url.spec.whatwg.org/#concept-url-host">host</a> is non-null, run t=
hese substeps: </p>
     <ol>
      <li>
       <p>If the <var>username</var> argument is not null, <a data-link-typ=
e=3D"dfn" href=3D"https://url.spec.whatwg.org/#set-the-username">set the us=
ername</a> given <var>parsedURL</var> and <var>username</var>. </p>
      </li><li>
       <p>If the <var>password</var> argument is not null, <a data-link-typ=
e=3D"dfn" href=3D"https://url.spec.whatwg.org/#set-the-password">set the pa=
ssword</a> given <var>parsedURL</var> and <var>password</var>. </p>
     </li></ol>
    </li><li>
     <p>If <var>async</var> is false, <a data-link-type=3D"dfn" href=3D"htt=
ps://html.spec.whatwg.org/multipage/webappapis.html#current-global-object">=
current global object</a> is a <code class=3D"idl"><a data-link-type=3D"idl=
" href=3D"https://html.spec.whatwg.org/multipage/browsers.html#window">Wind=
ow</a></code> object, and the <code class=3D"idl"><a class=3D"idl-code" dat=
a-link-type=3D"attribute" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttpr=
equest-timeout">timeout</a></code> attribute value is not zero
 or the <code class=3D"idl"><a data-link-type=3D"idl" href=3D"https://xhr.s=
pec.whatwg.org/#dom-xmlhttprequest-responsetype">responseType</a></code> at=
tribute value is not the
 empty string, then <a data-link-type=3D"dfn" href=3D"https://heycam.github=
.io/webidl/#dfn-throw">throw</a> an <code>InvalidAccessError</code> excepti=
on. </p>
    </li><li>
     <p><a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#term=
inate-the-request">Terminate the request</a>. </p>
     <p class=3D"note" role=3D"note">A <a data-link-type=3D"dfn" href=3D"ht=
tps://fetch.spec.whatwg.org/#concept-fetch">fetch</a> can be
  ongoing at this point. </p>
    </li><li>
     <p>Set variables associated with the object as follows: </p>
     <ul>
      <li>
       <p>Unset the <a data-link-type=3D"dfn" href=3D"https://xhr.spec.what=
wg.org/#send-flag"><code>send()</code> flag</a>, <a data-link-type=3D"dfn" =
href=3D"https://xhr.spec.whatwg.org/#stop-timeout-flag">stop timeout flag</=
a>, and <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#uplo=
ad-listener-flag">upload listener flag</a>. </p>
      </li><li>
       <p>Set <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org=
/#request-method">request method</a> to <var>method</var>. </p>
      </li><li>
       <p>Set <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org=
/#request-url">request URL</a> to <var>parsedURL</var>. </p>
      </li><li>
       <p>Set the <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg=
.org/#synchronous-flag">synchronous flag</a>, if <var>async</var> is false,=
 and unset
   the <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#synch=
ronous-flag">synchronous flag</a> otherwise. </p>
      </li><li>
       <p>Empty <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.o=
rg/#author-request-headers">author request headers</a>. </p>
      </li><li>
       <p>Set <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org=
/#response">response</a> to a <a data-link-type=3D"dfn" href=3D"https://fet=
ch.spec.whatwg.org/#concept-network-error">network error</a>. </p>
      </li><li>
       <p>Set <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org=
/#received-bytes">received bytes</a> to the empty byte sequence. </p>
      </li><li>
       <p>Set <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org=
/#response-object">response object</a> to null. </p>
     </li></ul>
    </li><li>
     <p>If the <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.or=
g/#concept-xmlhttprequest-state">state</a> is not <i>opened</i>, run these =
substeps: </p>
     <ol>
      <li>
       <p>Set <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org=
/#concept-xmlhttprequest-state">state</a> to <i>opened</i>. </p>
      </li><li>
       <p><a data-link-type=3D"dfn" href=3D"https://dom.spec.whatwg.org/#co=
ncept-event-fire">Fire an event</a> named <a class=3D"idl-code" data-link-t=
ype=3D"event" href=3D"https://xhr.spec.whatwg.org/#event-xhr-readystatechan=
ge"><code>readystatechange</code></a>. </p>
     </li></ol>
   </li></ol>
   <p class=3D"note" role=3D"note">The reason there are two <code>open()</c=
ode> methods defined is due to a limitation of
the editing software used to write the XMLHttpRequest Standard. </p>
   <h4 class=3D"heading settled" data-level=3D"4.5.2" id=3D"the-setrequesth=
eader()-method"><span class=3D"secno">4.5.2. </span><span class=3D"content"=
>The <code>setRequestHeader()</code> method</span><a class=3D"self-link" hr=
ef=3D"https://xhr.spec.whatwg.org/#the-setrequestheader%28%29-method"></a><=
/h4>
   <dl class=3D"domintro">
    <dt><code><var>client</var> . <a class=3D"idl-code" data-link-type=3D"m=
ethod" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-setrequesthe=
ader">setRequestHeader(<var>name</var>, <var>value</var>)</a></code>=20
    </dt><dd>
     <p>Combines a <a data-link-type=3D"dfn" href=3D"https://fetch.spec.wha=
twg.org/#concept-header">header</a> in <a data-link-type=3D"dfn" href=3D"ht=
tps://xhr.spec.whatwg.org/#author-request-headers">author request headers</=
a>. </p>
     <p>Throws an <code>InvalidStateError</code> exception if either <a dat=
a-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#concept-xmlhttpreq=
uest-state">state</a> is not <i>opened</i> or the <a data-link-type=3D"dfn"=
 href=3D"https://xhr.spec.whatwg.org/#send-flag"><code>send()</code> flag</=
a> is set. </p>
     <p>Throws a <code>SyntaxError</code> exception if <var>name</var> is n=
ot a header name or if <var>value</var> is not a header value. </p>
   </dd></dl>
   <p class=3D"note" role=3D"note">As indicated in the algorithm below cert=
ain headers cannot
be set and are left up to the user agent. In addition there are certain
other headers the user agent will take control of if they are not set by
the author as indicated at the end of the <a data-link-type=3D"functionish"=
 href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-send"><code>send()=
</code></a> method section. </p>
   <p>The <dfn class=3D"idl-code" data-dfn-for=3D"XMLHttpRequest" data-dfn-=
type=3D"method" data-export=3D"" id=3D"dom-xmlhttprequest-setrequestheader"=
><code>setRequestHeader(<var>name</var>, <var>value</var>)</code><a class=
=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-setr=
equestheader"></a></dfn> method must run these steps: </p>
   <ol>
    <li>
     <p>If <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#c=
oncept-xmlhttprequest-state">state</a> is not <i>opened</i>, <a data-link-t=
ype=3D"dfn" href=3D"https://heycam.github.io/webidl/#dfn-throw">throw</a> a=
n <code>InvalidStateError</code> exception. </p>
    </li><li>
     <p>If the <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.or=
g/#send-flag"><code>send()</code> flag</a> is set, <a data-link-type=3D"dfn=
" href=3D"https://heycam.github.io/webidl/#dfn-throw">throw</a> an <code>In=
validStateError</code> exception. </p>
    </li><li>
     <p><a data-link-type=3D"dfn" href=3D"https://fetch.spec.whatwg.org/#co=
ncept-header-value-normalize">Normalize</a> <var>value</var>. </p>
    </li><li>
     <p>If <var>name</var> is not a <a data-link-type=3D"dfn" href=3D"https=
://fetch.spec.whatwg.org/#concept-header-name">name</a> or <var>value</var>=
 is not a <a data-link-type=3D"dfn" href=3D"https://fetch.spec.whatwg.org/#=
concept-header-value">value</a>, <a data-link-type=3D"dfn" href=3D"https://=
heycam.github.io/webidl/#dfn-throw">throw</a> a <code>SyntaxError</code> ex=
ception. </p>
     <p class=3D"note no-backref" role=3D"note">An empty byte sequence repr=
esents an empty <a data-link-type=3D"dfn" href=3D"https://fetch.spec.whatwg=
.org/#concept-header">header</a> <a data-link-type=3D"dfn" href=3D"https://=
fetch.spec.whatwg.org/#concept-header-value">value</a>. </p>
    </li><li>
     <p>Terminate these steps if <var>name</var> is a <a data-link-type=3D"=
dfn" href=3D"https://fetch.spec.whatwg.org/#forbidden-header-name">forbidde=
n header name</a>. </p>
    </li><li>
     <p><a data-link-type=3D"dfn" href=3D"https://fetch.spec.whatwg.org/#co=
ncept-header-list-combine">Combine</a> <var>name</var>/<var>value</var> in =
<a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#author-reque=
st-headers">author request headers</a>. </p>
   </li></ol>
   <div class=3D"example" id=3D"example-setting-header-twice">
    <a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#example-set=
ting-header-twice"></a>=20
    <p>Some simple code demonstrating what happens when setting the same
 header twice: </p>
<pre><code>// The following script:
var client =3D new XMLHttpRequest();
client.open('GET', 'demo.cgi');
client.setRequestHeader('X-Test', 'one');
client.setRequestHeader('X-Test', 'two');
client.send();

// =E2=80=A6results in the following header being sent:
X-Test: one, two</code></pre>
   </div>
   <h4 class=3D"heading settled" data-level=3D"4.5.3" id=3D"the-timeout-att=
ribute"><span class=3D"secno">4.5.3. </span><span class=3D"content">The <co=
de>timeout</code> attribute</span><a class=3D"self-link" href=3D"https://xh=
r.spec.whatwg.org/#the-timeout-attribute"></a></h4>
   <dl class=3D"domintro">
    <dt><code><var>client</var> . <a class=3D"idl-code" data-link-type=3D"a=
ttribute" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-timeout">=
timeout</a></code>=20
    </dt><dd>
     <p>Can be set to a time in milliseconds. When set to a non-zero value
  will cause <a data-link-type=3D"dfn" href=3D"https://fetch.spec.whatwg.or=
g/#concept-fetch">fetching</a> to
  terminate after the given time has passed. When the time has passed, the =
request has
  not yet completed, and the <a data-link-type=3D"dfn" href=3D"https://xhr.=
spec.whatwg.org/#synchronous-flag">synchronous flag</a> is unset, a <a clas=
s=3D"idl-code" data-link-type=3D"event" href=3D"https://xhr.spec.whatwg.org=
/#event-xhr-timeout"><code>timeout</code></a> event will then be <a data-li=
nk-type=3D"dfn" href=3D"https://dom.spec.whatwg.org/#concept-event-dispatch=
">dispatched</a>,
  or a <code>TimeoutError</code> exception will be <a data-link-type=3D"dfn=
" href=3D"https://heycam.github.io/webidl/#dfn-throw">thrown</a> otherwise
  (for the <a data-link-type=3D"functionish" href=3D"https://xhr.spec.whatw=
g.org/#dom-xmlhttprequest-send"><code>send()</code></a> method). </p>
     <p>When set: throws an <code>InvalidAccessError</code> exception if
  the <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#synchr=
onous-flag">synchronous flag</a> is set and <a data-link-type=3D"dfn" href=
=3D"https://html.spec.whatwg.org/multipage/webappapis.html#current-global-o=
bject">current global object</a> is a <code class=3D"idl"><a data-link-type=
=3D"idl" href=3D"https://html.spec.whatwg.org/multipage/browsers.html#windo=
w">Window</a></code> object. </p>
   </dd></dl>
   <p>The <dfn class=3D"idl-code" data-dfn-for=3D"XMLHttpRequest" data-dfn-=
type=3D"attribute" data-export=3D"" id=3D"dom-xmlhttprequest-timeout"><code=
>timeout</code><a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#=
dom-xmlhttprequest-timeout"></a></dfn> attribute must return its value. Ini=
tially its value must be zero. </p>
   <p>Setting the <code class=3D"idl"><a class=3D"idl-code" data-link-type=
=3D"attribute" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-time=
out">timeout</a></code> attribute must run these steps: </p>
   <ol>
    <li>
     <p>If <a data-link-type=3D"dfn" href=3D"https://html.spec.whatwg.org/m=
ultipage/webappapis.html#current-global-object">current global object</a> i=
s a <code class=3D"idl"><a data-link-type=3D"idl" href=3D"https://html.spec=
.whatwg.org/multipage/browsers.html#window">Window</a></code> object and th=
e <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#synchronou=
s-flag">synchronous flag</a> is set, <a data-link-type=3D"dfn" href=3D"http=
s://heycam.github.io/webidl/#dfn-throw">throw</a> an <code>InvalidAccessErr=
or</code> exception. </p>
    </li><li>
     <p>Set its value to the new value. </p>
   </li></ol>
   <p class=3D"note" role=3D"note">This implies that the <code class=3D"idl=
"><a class=3D"idl-code" data-link-type=3D"attribute" href=3D"https://xhr.sp=
ec.whatwg.org/#dom-xmlhttprequest-timeout">timeout</a></code> attribute can=
 be
set while <a data-link-type=3D"dfn" href=3D"https://fetch.spec.whatwg.org/#=
concept-fetch">fetching</a> is in
progress. If that occurs it will still be measured relative to the start
of <a data-link-type=3D"dfn" href=3D"https://fetch.spec.whatwg.org/#concept=
-fetch">fetching</a>. </p>
   <h4 class=3D"heading settled" data-level=3D"4.5.4" id=3D"the-withcredent=
ials-attribute"><span class=3D"secno">4.5.4. </span><span class=3D"content"=
>The <code>withCredentials</code> attribute</span><a class=3D"self-link" hr=
ef=3D"https://xhr.spec.whatwg.org/#the-withcredentials-attribute"></a></h4>
   <dl class=3D"domintro">
    <dt><code><var>client</var> . <a class=3D"idl-code" data-link-type=3D"a=
ttribute" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-withcrede=
ntials">withCredentials</a></code>=20
    </dt><dd>
     <p>True when <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg=
.org/#user-credentials">user credentials</a> are to be included in a
  cross-origin request. False when they are to be excluded in a
  cross-origin request and when cookies are to be ignored in its response.
  Initially false. </p>
     <p>When set: throws an <code>InvalidStateError</code> exception if <a =
data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#concept-xmlhttp=
request-state">state</a> is not <i>unsent</i> or <i>opened</i>, or if the <=
a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#send-flag"><c=
ode>send()</code> flag</a> is set. </p>
   </dd></dl>
   <p>The <dfn class=3D"idl-code" data-dfn-for=3D"XMLHttpRequest" data-dfn-=
type=3D"attribute" data-export=3D"" id=3D"dom-xmlhttprequest-withcredential=
s"><code>withCredentials</code><a class=3D"self-link" href=3D"https://xhr.s=
pec.whatwg.org/#dom-xmlhttprequest-withcredentials"></a></dfn> attribute mu=
st return its value. Initially its value must be false. </p>
   <p>Setting the <code class=3D"idl"><a data-link-type=3D"idl" href=3D"htt=
ps://xhr.spec.whatwg.org/#dom-xmlhttprequest-withcredentials">withCredentia=
ls</a></code> attribute must run these steps: </p>
   <ol>
    <li>
     <p>If <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#c=
oncept-xmlhttprequest-state">state</a> is not <i>unsent</i> or <i>opened</i=
>, <a data-link-type=3D"dfn" href=3D"https://heycam.github.io/webidl/#dfn-t=
hrow">throw</a> an <code>InvalidStateError</code> exception. </p>
    </li><li>
     <p>If the <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.or=
g/#send-flag"><code>send()</code> flag</a> is set, <a data-link-type=3D"dfn=
" href=3D"https://heycam.github.io/webidl/#dfn-throw">throw</a> an <code>In=
validStateError</code> exception. </p>
    </li><li>
     <p>Set the <code class=3D"idl"><a data-link-type=3D"idl" href=3D"https=
://xhr.spec.whatwg.org/#dom-xmlhttprequest-withcredentials">withCredentials=
</a></code> attribute=E2=80=99s value to the given value. </p>
   </li></ol>
   <p class=3D"note" role=3D"note">The <code class=3D"idl"><a data-link-typ=
e=3D"idl" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-withcrede=
ntials">withCredentials</a></code> attribute has no effect when <a data-lin=
k-type=3D"dfn" href=3D"https://fetch.spec.whatwg.org/#concept-fetch">fetchi=
ng</a> <a data-link-type=3D"dfn" href=3D"https://html.spec.whatwg.org/multi=
page/browsers.html#same-origin">same-origin</a> resources. </p>
   <h4 class=3D"heading settled" data-level=3D"4.5.5" id=3D"the-upload-attr=
ibute"><span class=3D"secno">4.5.5. </span><span class=3D"content">The <cod=
e>upload</code> attribute</span><a class=3D"self-link" href=3D"https://xhr.=
spec.whatwg.org/#the-upload-attribute"></a></h4>
   <dl class=3D"domintro">
    <dt><code><var>client</var> . <a class=3D"idl-code" data-link-type=3D"a=
ttribute" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-upload">u=
pload</a></code>=20
    </dt><dd>
     <p>Returns the associated <code class=3D"idl"><a data-link-type=3D"idl=
" href=3D"https://xhr.spec.whatwg.org/#xmlhttprequestupload">XMLHttpRequest=
Upload</a></code> object. It can be used to gather transmission information=
 when data is
 transferred to a server. </p>
   </dd></dl>
   <p>The <dfn class=3D"idl-code" data-dfn-for=3D"XMLHttpRequest" data-dfn-=
type=3D"attribute" data-export=3D"" id=3D"dom-xmlhttprequest-upload"><code>=
upload</code><a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#do=
m-xmlhttprequest-upload"></a></dfn> attribute must return the associated <c=
ode class=3D"idl"><a data-link-type=3D"idl" href=3D"https://xhr.spec.whatwg=
.org/#xmlhttprequestupload">XMLHttpRequestUpload</a></code> object. </p>
   <p class=3D"note" role=3D"note">As indicated earlier, each <code class=
=3D"idl"><a data-link-type=3D"idl" href=3D"https://xhr.spec.whatwg.org/#xml=
httprequest">XMLHttpRequest</a></code> object has an associated <code class=
=3D"idl"><a data-link-type=3D"idl" href=3D"https://xhr.spec.whatwg.org/#xml=
httprequestupload">XMLHttpRequestUpload</a></code> object. </p>
   <h4 class=3D"heading settled" data-level=3D"4.5.6" id=3D"the-send()-meth=
od"><span class=3D"secno">4.5.6. </span><span class=3D"content">The <code>s=
end()</code> method</span><a class=3D"self-link" href=3D"https://xhr.spec.w=
hatwg.org/#the-send%28%29-method"></a></h4>
   <dl class=3D"domintro">
    <dt><code><var>client</var> . <a class=3D"idl-code" data-link-type=3D"m=
ethod" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-send">send([=
<var>body</var> =3D null])</a></code>=20
    </dt><dd>
     <p>Initiates the request. The optional argument provides the <a data-l=
ink-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#request-body">request=
 body</a>. The argument is ignored if <a data-link-type=3D"dfn" href=3D"htt=
ps://xhr.spec.whatwg.org/#request-method">request method</a> is <code>GET</=
code> or <code>HEAD</code>. </p>
     <p>Throws an <code>InvalidStateError</code> exception if either <a dat=
a-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#concept-xmlhttpreq=
uest-state">state</a> is not <i>opened</i> or the <a data-link-type=3D"dfn"=
 href=3D"https://xhr.spec.whatwg.org/#send-flag"><code>send()</code> flag</=
a> is set. </p>
   </dd></dl>
   <p>The <dfn class=3D"idl-code" data-dfn-for=3D"XMLHttpRequest" data-dfn-=
type=3D"method" data-export=3D"" data-lt=3D"send(body)|send()" id=3D"dom-xm=
lhttprequest-send"><code>send(<var>body</var>)</code><a class=3D"self-link"=
 href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-send"></a></dfn> m=
ethod must run these steps: </p>
   <ol>
    <li>
     <p>If <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#c=
oncept-xmlhttprequest-state">state</a> is not <i>opened</i>, <a data-link-t=
ype=3D"dfn" href=3D"https://heycam.github.io/webidl/#dfn-throw">throw</a> a=
n <code>InvalidStateError</code> exception. </p>
    </li><li>
     <p>If the <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.or=
g/#send-flag"><code>send()</code> flag</a> is set, <a data-link-type=3D"dfn=
" href=3D"https://heycam.github.io/webidl/#dfn-throw">throw</a> an <code>In=
validStateError</code> exception. </p>
    </li><li>
     <p>If the <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.or=
g/#request-method">request method</a> is <code>GET</code> or <code>HEAD</co=
de>, set <var>body</var> to null. </p>
    </li><li>
     <p>If <var>body</var> is null, go to the next step. </p>
     <p>Otherwise, let <var>encoding</var> and <var>mimeType</var> be null,=
 and then follow these
  rules, switching on <var>body</var>: </p>
     <dl class=3D"switch">
      <dt id=3D"dom-xmlhttprequest-send-document"><a class=3D"self-link" hr=
ef=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-send-document"></a><c=
ode class=3D"idl"><a data-link-type=3D"idl" href=3D"https://dom.spec.whatwg=
.org/#document">Document</a></code>=20
      </dt><dd>
       <p>Set <var>encoding</var> to `<code>UTF-8</code>`. </p>
       <p>Set <var>mimeType</var> to `<code>text/html</code>` if <var>body<=
/var> is an <a data-link-type=3D"dfn" href=3D"https://dom.spec.whatwg.org/#=
html-document">HTML document</a>, and to `<code>application/xml</code>` oth=
erwise. Then append
    `<code>;charset=3DUTF-8</code>` to <var>mimeType</var>. </p>
       <p>Set <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org=
/#request-body">request body</a> to <var>body</var>, <a data-link-type=3D"d=
fn" href=3D"https://w3c.github.io/DOM-Parsing/#dfn-fragment-serializing-alg=
orithm">serialized</a>, <a data-link-type=3D"dfn" href=3D"https://heycam.gi=
thub.io/webidl/#dfn-obtain-unicode">converted to Unicode</a>, and <a data-l=
ink-type=3D"dfn" href=3D"https://encoding.spec.whatwg.org/#utf-8-encode">ut=
f-8 encoded</a>. </p>
      </dd><dt id=3D"dom-xmlhttprequest-send-bodyinit"><a class=3D"self-lin=
k" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-send-bodyinit"><=
/a><code class=3D"idl"><a data-link-type=3D"idl" href=3D"https://fetch.spec=
.whatwg.org/#bodyinit">BodyInit</a></code>=20
      </dt><dd>
       <p>If <var>body</var> is a string, set <var>encoding</var> to
    `<code>UTF-8</code>`. </p>
       <p>Set <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org=
/#request-body">request body</a> and <var>mimeType</var> to the result of <=
a data-link-type=3D"dfn" href=3D"https://fetch.spec.whatwg.org/#concept-bod=
yinit-extract">extracting</a> <var>body</var>. </p>
     </dd></dl>
     <p>If <var>mimeType</var> is non-null and <a data-link-type=3D"dfn" hr=
ef=3D"https://xhr.spec.whatwg.org/#author-request-headers">author request h=
eaders</a> <a data-link-type=3D"dfn" href=3D"https://fetch.spec.whatwg.org/=
#header-list-contains">does not contain</a> `<code>Content-Type</code>`, th=
en <a data-link-type=3D"dfn" href=3D"https://fetch.spec.whatwg.org/#concept=
-header-list-append">append</a> `<code>Content-Type</code>`/<var>mimeType</=
var> to <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#auth=
or-request-headers">author request headers</a>. </p>
     <p>Otherwise, if the <a data-link-type=3D"dfn" href=3D"https://fetch.s=
pec.whatwg.org/#concept-header">header</a> whose <a data-link-type=3D"dfn" =
href=3D"https://fetch.spec.whatwg.org/#concept-header-name">name</a> is a <=
a data-link-type=3D"dfn" href=3D"https://fetch.spec.whatwg.org/#byte-case-i=
nsensitive">byte-case-insensitive</a> match for `<code>Content-Type</code>`=
 in <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#author-r=
equest-headers">author request headers</a> has a <a data-link-type=3D"dfn" =
href=3D"https://fetch.spec.whatwg.org/#concept-header-value">value</a> that=
 is a <a data-link-type=3D"dfn" href=3D"https://mimesniff.spec.whatwg.org/#=
valid-mime-type">valid MIME type</a>, which has a `<code>charset</code>`
  parameter whose value is not a <a data-link-type=3D"dfn" href=3D"https://=
fetch.spec.whatwg.org/#byte-case-insensitive">byte-case-insensitive</a> mat=
ch for <var>encoding</var>, and <var>encoding</var> is not null, then set a=
ll the `<code>charset</code>` parameters whose value is
  not a <a data-link-type=3D"dfn" href=3D"https://fetch.spec.whatwg.org/#by=
te-case-insensitive">byte-case-insensitive</a> match for <var>encoding</var=
> of that <a data-link-type=3D"dfn" href=3D"https://fetch.spec.whatwg.org/#=
concept-header">header</a>=E2=80=99s <a data-link-type=3D"dfn" href=3D"http=
s://fetch.spec.whatwg.org/#concept-header-value">value</a> to <var>encoding=
</var>. </p>
    </li><li>
     <p>If one or more event listeners are registered on the associated <co=
de class=3D"idl"><a data-link-type=3D"idl" href=3D"https://xhr.spec.whatwg.=
org/#xmlhttprequestupload">XMLHttpRequestUpload</a></code> object, then set=
 <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#upload-list=
ener-flag">upload listener flag</a>. </p>
    </li><li>
     <p>Let <var>req</var> be a new <a data-link-type=3D"dfn" href=3D"https=
://fetch.spec.whatwg.org/#concept-request">request</a>, initialized as
  follows: </p>
     <dl>
      <dt><a data-link-type=3D"dfn" href=3D"https://fetch.spec.whatwg.org/#=
concept-request-method">method</a>=20
      </dt><dd><a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.or=
g/#request-method">request method</a>=20
      </dd><dt><a data-link-type=3D"dfn" href=3D"https://fetch.spec.whatwg.=
org/#concept-request-url">url</a>=20
      </dt><dd><a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.or=
g/#request-url">request URL</a>=20
      </dd><dt><a data-link-type=3D"dfn" href=3D"https://fetch.spec.whatwg.=
org/#concept-request-header-list">header list</a>=20
      </dt><dd><a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.or=
g/#author-request-headers">author request headers</a>=20
      </dd><dt><a data-link-type=3D"dfn" href=3D"https://fetch.spec.whatwg.=
org/#unsafe-request-flag">unsafe-request flag</a>=20
      </dt><dd>Set.=20
      </dd><dt><a data-link-type=3D"dfn" href=3D"https://fetch.spec.whatwg.=
org/#concept-request-body">body</a>=20
      </dt><dd><a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.or=
g/#request-body">request body</a>=20
      </dd><dt><a data-link-type=3D"dfn" href=3D"https://fetch.spec.whatwg.=
org/#concept-request-client">client</a>=20
      </dt><dd><a data-link-type=3D"dfn" href=3D"https://dom.spec.whatwg.or=
g/#context-object">context object</a>=E2=80=99s <a data-link-type=3D"dfn" h=
ref=3D"https://html.spec.whatwg.org/multipage/webappapis.html#relevant-sett=
ings-object">relevant settings object</a>=20
      </dd><dt><a data-link-type=3D"dfn" href=3D"https://fetch.spec.whatwg.=
org/#synchronous-flag">synchronous flag</a>=20
      </dt><dd>Set if the <a data-link-type=3D"dfn" href=3D"https://xhr.spe=
c.whatwg.org/#synchronous-flag">synchronous flag</a> is set.=20
      </dd><dt><a data-link-type=3D"dfn" href=3D"https://fetch.spec.whatwg.=
org/#concept-request-mode">mode</a>=20
      </dt><dd>"<code>cors</code>"=20
      </dd><dt><a data-link-type=3D"dfn" href=3D"https://fetch.spec.whatwg.=
org/#use-cors-preflight-flag">use-CORS-preflight flag</a>=20
      </dt><dd>Set if <a data-link-type=3D"dfn" href=3D"https://xhr.spec.wh=
atwg.org/#upload-listener-flag">upload listener flag</a> is set.=20
      </dd><dt><a data-link-type=3D"dfn" href=3D"https://fetch.spec.whatwg.=
org/#concept-request-credentials-mode">credentials mode</a>=20
      </dt><dd>If the <code class=3D"idl"><a data-link-type=3D"idl" href=3D=
"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-withcredentials">withCrede=
ntials</a></code> attribute value is true, "<code>include</code>", and "<co=
de>same-origin</code>"
   otherwise.=20
      </dd><dt><a data-link-type=3D"dfn" href=3D"https://fetch.spec.whatwg.=
org/#concept-request-use-url-credentials-flag">use-URL-credentials flag</a>=
=20
      </dt><dd>Set if either <a data-link-type=3D"dfn" href=3D"https://xhr.=
spec.whatwg.org/#request-url">request URL</a>=E2=80=99s <a data-link-type=
=3D"dfn" href=3D"https://url.spec.whatwg.org/#concept-url-username">usernam=
e</a> is not the empty string or <a data-link-type=3D"dfn" href=3D"https://=
xhr.spec.whatwg.org/#request-url">request URL</a>=E2=80=99s <a data-link-ty=
pe=3D"dfn" href=3D"https://url.spec.whatwg.org/#concept-url-password">passw=
ord</a> is non-null.=20
     </dd></dl>
    </li><li>
     <p>Unset the <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg=
.org/#upload-complete-flag">upload complete flag</a>. </p>
    </li><li>
     <p>If <var>req</var>=E2=80=99s <a data-link-type=3D"dfn" href=3D"https=
://fetch.spec.whatwg.org/#concept-request-body">body</a> is null,
 set the <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#upl=
oad-complete-flag">upload complete flag</a>. </p>
    </li><li>
     <p>Set the <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.o=
rg/#send-flag"><code>send()</code> flag</a>. </p>
    </li><li>
     <p>If the <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.or=
g/#synchronous-flag">synchronous flag</a> is unset, run these substeps: </p=
>
     <ol>
      <li>
       <p><a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#co=
ncept-event-fire-progress">Fire a progress event</a> named <a class=3D"idl-=
code" data-link-type=3D"event" href=3D"https://xhr.spec.whatwg.org/#event-x=
hr-loadstart"><code>loadstart</code></a> with 0 and 0. </p>
      </li><li>
       <p>If the <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.=
org/#upload-complete-flag">upload complete flag</a> is unset and <a data-li=
nk-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#upload-listener-flag">=
upload listener flag</a> is
   set, then <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/=
#concept-event-fire-progress">fire a progress event</a> named <a class=3D"i=
dl-code" data-link-type=3D"event" href=3D"https://xhr.spec.whatwg.org/#even=
t-xhr-loadstart"><code>loadstart</code></a> on the <code class=3D"idl"><a d=
ata-link-type=3D"idl" href=3D"https://xhr.spec.whatwg.org/#xmlhttprequestup=
load">XMLHttpRequestUpload</a></code> object with 0 and <var>req</var>=E2=
=80=99s <a data-link-type=3D"dfn" href=3D"https://fetch.spec.whatwg.org/#co=
ncept-request-body">body</a>=E2=80=99s <a data-link-type=3D"dfn" href=3D"ht=
tps://fetch.spec.whatwg.org/#concept-body-total-bytes">total bytes</a>. </p=
>
      </li><li>
       <p>If <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/=
#concept-xmlhttprequest-state">state</a> is not <i>opened</i> or the <a dat=
a-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#send-flag"><code>s=
end()</code> flag</a> is unset, then
   return. </p>
      </li><li>
       <p><a data-link-type=3D"dfn" href=3D"https://fetch.spec.whatwg.org/#=
concept-fetch">Fetch</a> <var>req</var>.
    Handle the <a data-link-type=3D"dfn" href=3D"https://html.spec.whatwg.o=
rg/multipage/webappapis.html#concept-task">tasks</a> <a data-link-type=3D"d=
fn" href=3D"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-=
task">queued</a> on the <a data-link-type=3D"dfn" href=3D"https://html.spec=
.whatwg.org/multipage/webappapis.html#networking-task-source">networking ta=
sk source</a> per below. </p>
       <p>Run these subsubsteps <a data-link-type=3D"dfn" href=3D"https://h=
tml.spec.whatwg.org/multipage/infrastructure.html#in-parallel">in parallel<=
/a>: </p>
       <ol>
        <li>
         <p>Wait until either <var>req</var>=E2=80=99s <a data-link-type=3D=
"dfn">done flag</a> is set or </p>
         <ol>
          <li>
           <p>the <code class=3D"idl"><a class=3D"idl-code" data-link-type=
=3D"attribute" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-time=
out">timeout</a></code> attribute value number of milliseconds has
       passed since these subsubsteps started </p>
          </li><li>
           <p>while <code class=3D"idl"><a class=3D"idl-code" data-link-typ=
e=3D"attribute" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-tim=
eout">timeout</a></code> attribute value is not zero. </p>
         </li></ol>
        </li><li>
         <p>If <var>req</var>=E2=80=99s <a data-link-type=3D"dfn">done flag=
</a> is unset, then <a data-link-type=3D"dfn" href=3D"https://fetch.spec.wh=
atwg.org/#concept-fetch-terminate">terminate</a> <a data-link-type=3D"dfn" =
href=3D"https://fetch.spec.whatwg.org/#concept-fetch">fetching</a> with rea=
son <i>timeout</i>. </p>
       </li></ol>
       <p>To <a data-link-type=3D"dfn" href=3D"https://fetch.spec.whatwg.or=
g/#process-request-body">process request body</a> for <var>request</var>, r=
un these subsubsteps: </p>
       <ol>
        <li>
         <p>If not roughly 50ms have passed since these subsubsteps were la=
st invoked,
     terminate these subsubsteps. </p>
        </li><li>
         <p>If <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.or=
g/#upload-listener-flag">upload listener flag</a> is set, then <a data-link=
-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#concept-event-fire-progr=
ess">fire a progress event</a> named <a class=3D"idl-code" data-link-type=
=3D"event" href=3D"https://xhr.spec.whatwg.org/#event-xhr-progress"><code>p=
rogress</code></a> on the <code class=3D"idl"><a data-link-type=3D"idl" hre=
f=3D"https://xhr.spec.whatwg.org/#xmlhttprequestupload">XMLHttpRequestUploa=
d</a></code> object with <var>request</var>=E2=80=99s <a data-link-type=3D"=
dfn" href=3D"https://fetch.spec.whatwg.org/#concept-request-body">body</a>=
=E2=80=99s <a data-link-type=3D"dfn" href=3D"https://fetch.spec.whatwg.org/=
#concept-body-transmitted">transmitted bytes</a> and <var>request</var>=E2=
=80=99s <a data-link-type=3D"dfn" href=3D"https://fetch.spec.whatwg.org/#co=
ncept-request-body">body</a>=E2=80=99s <a data-link-type=3D"dfn" href=3D"ht=
tps://fetch.spec.whatwg.org/#concept-body-total-bytes">total bytes</a>. </p=
>
       </li></ol>
       <p class=3D"note" role=3D"note">These subsubsteps are only invoked w=
hen new bytes are transmitted. </p>
       <p>To <a data-link-type=3D"dfn" href=3D"https://fetch.spec.whatwg.or=
g/#process-request-end-of-body">process request end-of-body</a> for <var>re=
quest</var>, run these subsubsteps: </p>
       <ol>
        <li>
         <p>Set the <a data-link-type=3D"dfn" href=3D"https://xhr.spec.what=
wg.org/#upload-complete-flag">upload complete flag</a>. </p>
        </li><li>
         <p>If <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.or=
g/#upload-listener-flag">upload listener flag</a> is unset, then terminate =
these subsubsteps. </p>
        </li><li>
         <p>Let <var>transmitted</var> be <var>request</var>=E2=80=99s <a d=
ata-link-type=3D"dfn" href=3D"https://fetch.spec.whatwg.org/#concept-reques=
t-body">body</a>=E2=80=99s <a data-link-type=3D"dfn" href=3D"https://fetch.=
spec.whatwg.org/#concept-body-transmitted">transmitted bytes</a>. </p>
        </li><li>
         <p>Let <var>length</var> be <var>request</var>=E2=80=99s <a data-l=
ink-type=3D"dfn" href=3D"https://fetch.spec.whatwg.org/#concept-request-bod=
y">body</a>=E2=80=99s <a data-link-type=3D"dfn" href=3D"https://fetch.spec.=
whatwg.org/#concept-body-total-bytes">total bytes</a>. </p>
        </li><li>
         <p><a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#=
concept-event-fire-progress">Fire a progress event</a> named <a class=3D"id=
l-code" data-link-type=3D"event" href=3D"https://xhr.spec.whatwg.org/#event=
-xhr-progress"><code>progress</code></a> on the <code class=3D"idl"><a data=
-link-type=3D"idl" href=3D"https://xhr.spec.whatwg.org/#xmlhttprequestuploa=
d">XMLHttpRequestUpload</a></code> object with <var>transmitted</var> and <=
var>length</var>. </p>
        </li><li>
         <p><a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#=
concept-event-fire-progress">Fire a progress event</a> named <a class=3D"id=
l-code" data-link-type=3D"event" href=3D"https://xhr.spec.whatwg.org/#event=
-xhr-load"><code>load</code></a> on the <code class=3D"idl"><a data-link-ty=
pe=3D"idl" href=3D"https://xhr.spec.whatwg.org/#xmlhttprequestupload">XMLHt=
tpRequestUpload</a></code> object with <var>transmitted</var> and <var>leng=
th</var>. </p>
        </li><li>
         <p><a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#=
concept-event-fire-progress">Fire a progress event</a> named <a class=3D"id=
l-code" data-link-type=3D"event" href=3D"https://xhr.spec.whatwg.org/#event=
-xhr-loadend"><code>loadend</code></a> on the <code class=3D"idl"><a data-l=
ink-type=3D"idl" href=3D"https://xhr.spec.whatwg.org/#xmlhttprequestupload"=
>XMLHttpRequestUpload</a></code> object with <var>transmitted</var> and <va=
r>length</var>. </p>
       </li></ol>
       <p>To <a data-link-type=3D"dfn" href=3D"https://fetch.spec.whatwg.or=
g/#process-response">process response</a> for <var>response</var>,
    run these subsubsteps: </p>
       <ol>
        <li>
         <p>If the <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatw=
g.org/#stop-timeout-flag">stop timeout flag</a> is unset, set the <a data-l=
ink-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#stop-timeout-flag">st=
op timeout flag</a>. </p>
        </li><li>
         <p>Set <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.o=
rg/#response">response</a> to <var>response</var>. </p>
        </li><li>
         <p><a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#=
handle-errors">Handle errors</a> for <var>response</var>. </p>
        </li><li>
         <p>If <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.or=
g/#response">response</a> is a <a data-link-type=3D"dfn" href=3D"https://fe=
tch.spec.whatwg.org/#concept-network-error">network error</a>,
     return. </p>
        </li><li>
         <p>Set <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.o=
rg/#concept-xmlhttprequest-state">state</a> to <i>headers received</i>. </p=
>
        </li><li>
         <p><a data-link-type=3D"dfn" href=3D"https://dom.spec.whatwg.org/#=
concept-event-fire">Fire an event</a> named <a class=3D"idl-code" data-link=
-type=3D"event" href=3D"https://xhr.spec.whatwg.org/#event-xhr-readystatech=
ange"><code>readystatechange</code></a>. </p>
        </li><li>
         <p>If <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.or=
g/#concept-xmlhttprequest-state">state</a> is not <i>headers received</i>, =
then return. </p>
        </li><li>
         <p>If <var>response</var>=E2=80=99s <a data-link-type=3D"dfn" href=
=3D"https://fetch.spec.whatwg.org/#concept-response-body">body</a> is null,
     then run <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org=
/#handle-response-end-of-body">handle response end-of-body</a> and return. =
</p>
        </li><li>
         <p>Let <var>reader</var> be the result of <a data-link-type=3D"dfn=
" href=3D"https://fetch.spec.whatwg.org/#concept-get-reader">getting a read=
er</a> from <var>response</var>=E2=80=99s <a data-link-type=3D"dfn" href=3D=
"https://fetch.spec.whatwg.org/#concept-response-body">body</a>=E2=80=99s <=
a data-link-type=3D"dfn" href=3D"https://fetch.spec.whatwg.org/#concept-bod=
y-stream">stream</a>. </p>
         <p><span class=3D"note no-backref">This operation will not throw a=
n exception.</span> </p>
        </li><li>
         <p>Let <var>read</var> be the result of <a data-link-type=3D"dfn" =
href=3D"https://fetch.spec.whatwg.org/#concept-read-chunk-from-readablestre=
am">reading a chunk</a> from <var>response</var>=E2=80=99s <a data-link-typ=
e=3D"dfn" href=3D"https://fetch.spec.whatwg.org/#concept-response-body">bod=
y</a>=E2=80=99s <a data-link-type=3D"dfn" href=3D"https://fetch.spec.whatwg=
.org/#concept-body-stream">stream</a> with <var>reader</var>. </p>
         <p>When <var>read</var> is fulfilled with an object whose <code>do=
ne</code> property is false
      and whose <code>value</code> property is a <code>Uint8Array</code> ob=
ject, run these
      subsubsubsteps and then run the above subsubstep again: </p>
         <ol>
          <li>
           <p>Append the <code>value</code> property to <a data-link-type=
=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#received-bytes">received byte=
s</a>. </p>
          </li><li>
           <p>If not roughly 50ms have passed since these subsubsubsteps we=
re last invoked,
       then terminate these subsubsubsteps. </p>
          </li><li>
           <p>If <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.=
org/#concept-xmlhttprequest-state">state</a> is <i>headers received</i>, th=
en set <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#conce=
pt-xmlhttprequest-state">state</a> to <i>loading</i>. </p>
          </li><li>
           <p><a data-link-type=3D"dfn" href=3D"https://dom.spec.whatwg.org=
/#concept-event-fire">Fire an event</a> named <a class=3D"idl-code" data-li=
nk-type=3D"event" href=3D"https://xhr.spec.whatwg.org/#event-xhr-readystate=
change"><code>readystatechange</code></a>. </p>
           <p class=3D"note no-backref" role=3D"note">Web compatibility is =
the reason <a class=3D"idl-code" data-link-type=3D"event" href=3D"https://x=
hr.spec.whatwg.org/#event-xhr-readystatechange"><code>readystatechange</cod=
e></a> fires more often than <a data-link-type=3D"dfn" href=3D"https://xhr.=
spec.whatwg.org/#concept-xmlhttprequest-state">state</a> changes. </p>
          </li><li>
           <p><a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org=
/#concept-event-fire-progress">Fire a progress event</a> named <a class=3D"=
idl-code" data-link-type=3D"event" href=3D"https://xhr.spec.whatwg.org/#eve=
nt-xhr-progress"><code>progress</code></a> with <var>response</var>=E2=80=
=99s <a data-link-type=3D"dfn" href=3D"https://fetch.spec.whatwg.org/#conce=
pt-response-body">body</a>=E2=80=99s <a data-link-type=3D"dfn" href=3D"http=
s://fetch.spec.whatwg.org/#concept-body-transmitted">transmitted bytes</a> =
and <var>response</var>=E2=80=99s <a data-link-type=3D"dfn" href=3D"https:/=
/fetch.spec.whatwg.org/#concept-response-body">body</a>=E2=80=99s <a data-l=
ink-type=3D"dfn" href=3D"https://fetch.spec.whatwg.org/#concept-body-total-=
bytes">total bytes</a>. </p>
         </li></ol>
         <p class=3D"note" role=3D"note">These subsubsubsteps are only invo=
ked when new bytes are transmitted. </p>
         <p>When <var>read</var> is fulfilled with an object whose <code>do=
ne</code> property is true,
      run <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#ha=
ndle-response-end-of-body">handle response end-of-body</a> for <var>respons=
e</var>. </p>
         <p>When <var>read</var> is rejected with an exception, run <a data=
-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#handle-errors">hand=
le errors</a> for <var>response</var>. </p>
       </li></ol>
     </li></ol>
    </li><li>
     <p>Otherwise, if the <a data-link-type=3D"dfn" href=3D"https://xhr.spe=
c.whatwg.org/#synchronous-flag">synchronous flag</a> is set, run these subs=
teps: </p>
     <ol>
      <li>
       <p>Let <var>response</var> be the result of <a data-link-type=3D"dfn=
" href=3D"https://fetch.spec.whatwg.org/#concept-fetch">fetching</a> <var>r=
eq</var>. </p>
       <p>If the <code class=3D"idl"><a class=3D"idl-code" data-link-type=
=3D"attribute" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-time=
out">timeout</a></code> attribute value is not
    zero, <a data-link-type=3D"dfn" href=3D"https://fetch.spec.whatwg.org/#=
concept-fetch-terminate">terminate</a> this <a data-link-type=3D"dfn" href=
=3D"https://fetch.spec.whatwg.org/#concept-fetch">fetch</a> if it has not r=
eturned
    within the amount of milliseconds from the <code class=3D"idl"><a class=
=3D"idl-code" data-link-type=3D"attribute" href=3D"https://xhr.spec.whatwg.=
org/#dom-xmlhttprequest-timeout">timeout</a></code> attribute value with re=
ason <i>timeout</i>. </p>
      </li><li>
       <p>If <var>response</var>=E2=80=99s <a data-link-type=3D"dfn" href=
=3D"https://fetch.spec.whatwg.org/#concept-response-body">body</a> is null,
   then run <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#=
handle-response-end-of-body">handle response end-of-body</a> and return. </=
p>
      </li><li>
       <p>Let <var>reader</var> be the result of <a data-link-type=3D"dfn" =
href=3D"https://fetch.spec.whatwg.org/#concept-get-reader">getting a reader=
</a> from <var>response</var>=E2=80=99s <a data-link-type=3D"dfn" href=3D"h=
ttps://fetch.spec.whatwg.org/#concept-response-body">body</a>=E2=80=99s <a =
data-link-type=3D"dfn" href=3D"https://fetch.spec.whatwg.org/#concept-body-=
stream">stream</a>. </p>
       <p><span class=3D"note no-backref">This operation will not throw an =
exception.</span> </p>
      </li><li>
       <p>Let <var>promise</var> be the result of <a data-link-type=3D"dfn"=
 href=3D"https://fetch.spec.whatwg.org/#concept-read-all-bytes-from-readabl=
estream">reading all bytes</a> from <var>response</var>=E2=80=99s <a data-l=
ink-type=3D"dfn" href=3D"https://fetch.spec.whatwg.org/#concept-response-bo=
dy">body</a>=E2=80=99s <a data-link-type=3D"dfn" href=3D"https://fetch.spec=
.whatwg.org/#concept-body-stream">stream</a> with <var>reader</var>. </p>
      </li><li>
       <p>Wait for <var>promise</var> to be fulfilled or rejected. </p>
      </li><li>
       <p>If <var>promise</var> is fulfilled with <var>bytes</var>, then ap=
pend <var>bytes</var> to <a data-link-type=3D"dfn" href=3D"https://xhr.spec=
.whatwg.org/#received-bytes">received bytes</a>. </p>
      </li><li>
       <p>Run <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org=
/#handle-response-end-of-body">handle response end-of-body</a> for <var>res=
ponse</var>. </p>
     </li></ol>
   </li></ol>
   <p id=3D"handle-response-end-of-file">To <dfn data-dfn-type=3D"dfn" data=
-noexport=3D"" id=3D"handle-response-end-of-body">handle response end-of-bo=
dy<a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#handle-respon=
se-end-of-body"></a></dfn> for <var>response</var>, run these steps: </p>
   <ol>
    <li>
     <p>If the <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.or=
g/#synchronous-flag">synchronous flag</a> is set, set <a data-link-type=3D"=
dfn" href=3D"https://xhr.spec.whatwg.org/#response">response</a> to <var>re=
sponse</var>. </p>
    </li><li>
     <p><a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#hand=
le-errors">Handle errors</a> for <var>response</var>. </p>
    </li><li>
     <p>If <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#r=
esponse">response</a> is a <a data-link-type=3D"dfn" href=3D"https://fetch.=
spec.whatwg.org/#concept-network-error">network error</a>, return. </p>
    </li><li>
     <p>If the <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.or=
g/#synchronous-flag">synchronous flag</a> is unset, update <a data-link-typ=
e=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#response">response</a>=E2=80=
=99s <a data-link-type=3D"dfn" href=3D"https://fetch.spec.whatwg.org/#conce=
pt-response-body">body</a> using <var>response</var>. </p>
    </li><li>
     <p>Let <var>transmitted</var> be <var>response</var>=E2=80=99s <a data=
-link-type=3D"dfn" href=3D"https://fetch.spec.whatwg.org/#concept-response-=
body">body</a>=E2=80=99s <a data-link-type=3D"dfn" href=3D"https://fetch.sp=
ec.whatwg.org/#concept-body-transmitted">transmitted bytes</a>. </p>
    </li><li>
     <p>Let <var>length</var> be <var>response</var>=E2=80=99s <a data-link=
-type=3D"dfn" href=3D"https://fetch.spec.whatwg.org/#concept-response-body"=
>body</a>=E2=80=99s <a data-link-type=3D"dfn" href=3D"https://fetch.spec.wh=
atwg.org/#concept-body-total-bytes">total bytes</a>. </p>
    </li><li>
     <p><a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#conc=
ept-event-fire-progress">Fire a progress event</a> named <a class=3D"idl-co=
de" data-link-type=3D"event" href=3D"https://xhr.spec.whatwg.org/#event-xhr=
-progress"><code>progress</code></a> with <var>transmitted</var> and <var>l=
ength</var>. </p>
    </li><li>
     <p>Set <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#=
concept-xmlhttprequest-state">state</a> to <i>done</i>. </p>
    </li><li>
     <p>Unset the <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg=
.org/#send-flag"><code>send()</code> flag</a>. </p>
    </li><li>
     <p><a data-link-type=3D"dfn" href=3D"https://dom.spec.whatwg.org/#conc=
ept-event-fire">Fire an event</a> named <a class=3D"idl-code" data-link-typ=
e=3D"event" href=3D"https://xhr.spec.whatwg.org/#event-xhr-readystatechange=
"><code>readystatechange</code></a>. </p>
    </li><li>
     <p><a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#conc=
ept-event-fire-progress">Fire a progress event</a> named <a class=3D"idl-co=
de" data-link-type=3D"event" href=3D"https://xhr.spec.whatwg.org/#event-xhr=
-load"><code>load</code></a> with <var>transmitted</var> and <var>length</v=
ar>. </p>
    </li><li>
     <p><a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#conc=
ept-event-fire-progress">Fire a progress event</a> named <a class=3D"idl-co=
de" data-link-type=3D"event" href=3D"https://xhr.spec.whatwg.org/#event-xhr=
-loadend"><code>loadend</code></a> with <var>transmitted</var> and <var>len=
gth</var>. </p>
   </li></ol>
   <p>To <dfn data-dfn-type=3D"dfn" data-noexport=3D"" id=3D"handle-errors"=
>handle errors<a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#h=
andle-errors"></a></dfn> for <var>response</var> run these steps: </p>
   <ol>
    <li>
     <p>If the <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.or=
g/#send-flag"><code>send()</code> flag</a> is unset, return. </p>
    </li><li>
     <p>If <var>response</var> is a <a data-link-type=3D"dfn" href=3D"https=
://fetch.spec.whatwg.org/#concept-network-error">network error</a>, run the=
 <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#request-err=
or-steps">request error steps</a> for event <a class=3D"idl-code" data-link=
-type=3D"event" href=3D"https://xhr.spec.whatwg.org/#event-xhr-error"><code=
>error</code></a> and
 exception <code>NetworkError</code>. </p>
    </li><li>
     <p>Otherwise, if <var>response</var> has a <a data-link-type=3D"dfn" h=
ref=3D"https://fetch.spec.whatwg.org/#concept-response-termination-reason">=
termination reason</a>: </p>
     <dl class=3D"switch">
      <dt><i>end-user abort</i>=20
      </dt><dd>
       <p>Run the <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg=
.org/#request-error-steps">request error steps</a> for event <a class=3D"id=
l-code" data-link-type=3D"event" href=3D"https://xhr.spec.whatwg.org/#event=
-xhr-abort"><code>abort</code></a> and exception <code>AbortError</code>. <=
/p>
      </dd><dt><i>fatal</i>=20
      </dt><dd>
       <ol>
        <li>
         <p>Set <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.o=
rg/#concept-xmlhttprequest-state">state</a> to <i>done</i>. </p>
        </li><li>
         <p>Unset the <a data-link-type=3D"dfn" href=3D"https://xhr.spec.wh=
atwg.org/#send-flag"><code>send()</code> flag</a>. </p>
        </li><li>
         <p>Set <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.o=
rg/#response">response</a> to a <a data-link-type=3D"dfn" href=3D"https://f=
etch.spec.whatwg.org/#concept-network-error">network error</a>. </p>
       </li></ol>
      </dd><dt><i>timeout</i>=20
      </dt><dd>
       <p>Run the <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg=
.org/#request-error-steps">request error steps</a> for event <a class=3D"id=
l-code" data-link-type=3D"event" href=3D"https://xhr.spec.whatwg.org/#event=
-xhr-timeout"><code>timeout</code></a> and exception <code>TimeoutError</co=
de>. </p>
     </dd></dl>
   </li></ol>
   <p>The <dfn data-dfn-type=3D"dfn" data-noexport=3D"" id=3D"request-error=
-steps">request error steps<a class=3D"self-link" href=3D"https://xhr.spec.=
whatwg.org/#request-error-steps"></a></dfn> for event <var>event</var> and =
optionally an
exception <var>exception</var> are: </p>
   <ol>
    <li>
     <p>Set <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#=
concept-xmlhttprequest-state">state</a> to <i>done</i>. </p>
    </li><li>
     <p>Unset the <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg=
.org/#send-flag"><code>send()</code> flag</a>. </p>
    </li><li>
     <p>Set <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#=
response">response</a> to a <a data-link-type=3D"dfn" href=3D"https://fetch=
.spec.whatwg.org/#concept-network-error">network error</a>. </p>
    </li><li>
     <p>If the <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.or=
g/#synchronous-flag">synchronous flag</a> is set, <a data-link-type=3D"dfn"=
 href=3D"https://heycam.github.io/webidl/#dfn-throw">throw</a> an <var>exce=
ption</var> exception. </p>
    </li><li>
     <p><a data-link-type=3D"dfn" href=3D"https://dom.spec.whatwg.org/#conc=
ept-event-fire">Fire an event</a> named <a class=3D"idl-code" data-link-typ=
e=3D"event" href=3D"https://xhr.spec.whatwg.org/#event-xhr-readystatechange=
"><code>readystatechange</code></a>. </p>
     <p class=3D"note" role=3D"note">At this point it is clear that the <a =
data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#synchronous-fla=
g">synchronous flag</a> is unset. </p>
    </li><li>
     <p>If the <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.or=
g/#upload-complete-flag">upload complete flag</a> is unset, follow these su=
bsteps: </p>
     <ol>
      <li>
       <p>Set the <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg=
.org/#upload-complete-flag">upload complete flag</a>. </p>
      </li><li>
       <p>If <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/=
#upload-listener-flag">upload listener flag</a> is unset, then terminate th=
ese substeps. </p>
      </li><li>
       <p><a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#co=
ncept-event-fire-progress">Fire a progress event</a> named <var>event</var>=
 on the <code class=3D"idl"><a data-link-type=3D"idl" href=3D"https://xhr.s=
pec.whatwg.org/#xmlhttprequestupload">XMLHttpRequestUpload</a></code> objec=
t with 0 and 0. </p>
      </li><li>
       <p><a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#co=
ncept-event-fire-progress">Fire a progress event</a> named <a class=3D"idl-=
code" data-link-type=3D"event" href=3D"https://xhr.spec.whatwg.org/#event-x=
hr-loadend"><code>loadend</code></a> on the <code class=3D"idl"><a data-lin=
k-type=3D"idl" href=3D"https://xhr.spec.whatwg.org/#xmlhttprequestupload">X=
MLHttpRequestUpload</a></code> object with 0 and 0. </p>
     </li></ol>
    </li><li>
     <p><a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#conc=
ept-event-fire-progress">Fire a progress event</a> named <var>event</var> w=
ith 0 and 0. </p>
    </li><li>
     <p><a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#conc=
ept-event-fire-progress">Fire a progress event</a> named <a class=3D"idl-co=
de" data-link-type=3D"event" href=3D"https://xhr.spec.whatwg.org/#event-xhr=
-loadend"><code>loadend</code></a> with 0 and 0. </p>
   </li></ol>
   <h4 class=3D"heading settled" data-level=3D"4.5.7" id=3D"the-abort()-met=
hod"><span class=3D"secno">4.5.7. </span><span class=3D"content">The <code>=
abort()</code> method</span><a class=3D"self-link" href=3D"https://xhr.spec=
.whatwg.org/#the-abort%28%29-method"></a></h4>
   <dl class=3D"domintro">
    <dt><code><var>client</var> . <a class=3D"idl-code" data-link-type=3D"m=
ethod" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-abort">abort=
()</a></code>=20
    </dt><dd>Cancels any network activity.=20
   </dd></dl>
   <p>The <dfn class=3D"idl-code" data-dfn-for=3D"XMLHttpRequest" data-dfn-=
type=3D"method" data-export=3D"" id=3D"dom-xmlhttprequest-abort"><code>abor=
t()</code><a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#dom-x=
mlhttprequest-abort"></a></dfn> method,
when invoked, must run these steps: </p>
   <ol>
    <li>
     <p><a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#term=
inate-the-request">Terminate the request</a>. </p>
    </li><li>
     <p>If <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#c=
oncept-xmlhttprequest-state">state</a> is either <i>opened</i> with the <a =
data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#send-flag"><cod=
e>send()</code> flag</a> set, <i>headers received</i>, or <i>loading</i>, r=
un the <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#reque=
st-error-steps">request error steps</a> for event <a class=3D"idl-code" dat=
a-link-type=3D"event" href=3D"https://xhr.spec.whatwg.org/#event-xhr-abort"=
><code>abort</code></a>. </p>
    </li><li>
     <p>If <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#c=
oncept-xmlhttprequest-state">state</a> is <i>done</i>, then set <a data-lin=
k-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#concept-xmlhttprequest-=
state">state</a> to <i>unsent</i> and <a data-link-type=3D"dfn" href=3D"htt=
ps://xhr.spec.whatwg.org/#response">response</a> to a <a data-link-type=3D"=
dfn" href=3D"https://fetch.spec.whatwg.org/#concept-network-error">network =
error</a>. </p>
     <p class=3D"note" role=3D"note">No <a class=3D"idl-code" data-link-typ=
e=3D"event" href=3D"https://xhr.spec.whatwg.org/#event-xhr-readystatechange=
"><code>readystatechange</code></a> event
  is dispatched. </p>
   </li></ol>
   <h3 class=3D"heading settled" data-level=3D"4.6" id=3D"xmlhttprequest-re=
sponse"><span class=3D"secno">4.6. </span><span class=3D"content">Response<=
/span><a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#xmlhttpre=
quest-response"></a></h3>
   <p>An <code class=3D"idl"><a data-link-type=3D"idl" href=3D"https://xhr.=
spec.whatwg.org/#xmlhttprequest">XMLHttpRequest</a></code> has an associate=
d <dfn data-dfn-type=3D"dfn" data-noexport=3D"" id=3D"response">response<a =
class=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#response"></a></df=
n>. Unless stated
otherwise it is a <a data-link-type=3D"dfn" href=3D"https://fetch.spec.what=
wg.org/#concept-network-error">network error</a>. </p>
   <p>An <code class=3D"idl"><a data-link-type=3D"idl" href=3D"https://xhr.=
spec.whatwg.org/#xmlhttprequest">XMLHttpRequest</a></code> also has an asso=
ciated <dfn data-dfn-type=3D"dfn" data-noexport=3D"" id=3D"received-bytes">=
received bytes<a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#r=
eceived-bytes"></a></dfn> (a byte
sequence). Unless stated otherwise it is the empty byte sequence. </p>
   <h4 class=3D"heading settled" data-level=3D"4.6.1" id=3D"the-responseurl=
-attribute"><span class=3D"secno">4.6.1. </span><span class=3D"content">The=
 <code>responseURL</code> attribute</span><a class=3D"self-link" href=3D"ht=
tps://xhr.spec.whatwg.org/#the-responseurl-attribute"></a></h4>
   <p>The <dfn class=3D"idl-code" data-dfn-for=3D"XMLHttpRequest" data-dfn-=
type=3D"attribute" data-export=3D"" id=3D"dom-xmlhttprequest-responseurl"><=
code>responseURL</code><a class=3D"self-link" href=3D"https://xhr.spec.what=
wg.org/#dom-xmlhttprequest-responseurl"></a></dfn> attribute
must return the empty string if <a data-link-type=3D"dfn" href=3D"https://x=
hr.spec.whatwg.org/#response">response</a>=E2=80=99s <a data-link-type=3D"d=
fn" href=3D"https://fetch.spec.whatwg.org/#concept-response-url">url</a> is=
 null and its <a data-link-type=3D"dfn" href=3D"https://url.spec.whatwg.org=
/#concept-url-serializer">serialization</a> with the <i>exclude fragment fl=
ag</i> set otherwise. </p>
   <h4 class=3D"heading settled" data-level=3D"4.6.2" id=3D"the-status-attr=
ibute"><span class=3D"secno">4.6.2. </span><span class=3D"content">The <cod=
e>status</code> attribute</span><a class=3D"self-link" href=3D"https://xhr.=
spec.whatwg.org/#the-status-attribute"></a></h4>
   <p>The <dfn class=3D"idl-code" data-dfn-for=3D"XMLHttpRequest" data-dfn-=
type=3D"attribute" data-export=3D"" id=3D"dom-xmlhttprequest-status"><code>=
status</code><a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#do=
m-xmlhttprequest-status"></a></dfn> attribute must return the <a data-link-=
type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#response">response</a>=E2=
=80=99s <a data-link-type=3D"dfn" href=3D"https://fetch.spec.whatwg.org/#co=
ncept-response-status">status</a>. </p>
   <h4 class=3D"heading settled" data-level=3D"4.6.3" id=3D"the-statustext-=
attribute"><span class=3D"secno">4.6.3. </span><span class=3D"content">The =
<code>statusText</code> attribute</span><a class=3D"self-link" href=3D"http=
s://xhr.spec.whatwg.org/#the-statustext-attribute"></a></h4>
   <p>The <dfn class=3D"idl-code" data-dfn-for=3D"XMLHttpRequest" data-dfn-=
type=3D"attribute" data-export=3D"" id=3D"dom-xmlhttprequest-statustext"><c=
ode>statusText</code><a class=3D"self-link" href=3D"https://xhr.spec.whatwg=
.org/#dom-xmlhttprequest-statustext"></a></dfn> attribute must return the <=
a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#response">res=
ponse</a>=E2=80=99s <a data-link-type=3D"dfn" href=3D"https://fetch.spec.wh=
atwg.org/#concept-response-status-message">status message</a>. </p>
   <h4 class=3D"heading settled" data-level=3D"4.6.4" id=3D"the-getresponse=
header()-method"><span class=3D"secno">4.6.4. </span><span class=3D"content=
">The <code>getResponseHeader()</code> method</span><a class=3D"self-link" =
href=3D"https://xhr.spec.whatwg.org/#the-getresponseheader%28%29-method"></=
a></h4>
   <p>The <dfn class=3D"idl-code" data-dfn-for=3D"XMLHttpRequest" data-dfn-=
type=3D"method" data-export=3D"" id=3D"dom-xmlhttprequest-getresponseheader=
"><code>getResponseHeader(<var>name</var>)</code><a class=3D"self-link" hre=
f=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-getresponseheader"></a=
></dfn> method must run these steps: </p>
   <ol>
    <li>
     <p>If <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#r=
esponse">response</a>=E2=80=99s <a data-link-type=3D"dfn" href=3D"https://f=
etch.spec.whatwg.org/#concept-response-header-list">header list</a> <a data=
-link-type=3D"dfn" href=3D"https://fetch.spec.whatwg.org/#header-list-conta=
ins">does not contain</a> <var>name</var>, then return null. </p>
    </li><li>
     <p>Return the <a data-link-type=3D"dfn" href=3D"https://fetch.spec.wha=
twg.org/#concept-header-value-combined">combined value</a> given <var>name<=
/var> and <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#re=
sponse">response</a>=E2=80=99s <a data-link-type=3D"dfn" href=3D"https://fe=
tch.spec.whatwg.org/#concept-response-header-list">header list</a>. </p>
   </li></ol>
   <p class=3D"note no-backref" role=3D"note">The Fetch Standard filters <a=
 data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#response">resp=
onse</a>=E2=80=99s <a data-link-type=3D"dfn" href=3D"https://fetch.spec.wha=
twg.org/#concept-response-header-list">header list</a>. <a data-link-type=
=3D"biblio" href=3D"https://xhr.spec.whatwg.org/#biblio-fetch">[FETCH]</a> =
</p>
   <div class=3D"example" id=3D"example-getresponseheader">
    <a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#example-get=
responseheader"></a>=20
    <p>For the following script: </p>
<pre><code>var client =3D new XMLHttpRequest();
client.open("GET", "unicorns-are-teh-awesome.txt", true);
client.send();
client.onreadystatechange =3D function() {
  if(this.readyState =3D=3D this.HEADERS_RECEIVED) {
    print(client.getResponseHeader("Content-Type"));
  }
}</code></pre>
    <p>The <code>print()</code> function will get to process something
 like: </p>
<pre><code>text/plain; charset=3DUTF-8</code></pre>
   </div>
   <h4 class=3D"heading settled" data-level=3D"4.6.5" id=3D"the-getallrespo=
nseheaders()-method"><span class=3D"secno">4.6.5. </span><span class=3D"con=
tent">The <code>getAllResponseHeaders()</code> method</span><a class=3D"sel=
f-link" href=3D"https://xhr.spec.whatwg.org/#the-getallresponseheaders%28%2=
9-method"></a></h4>
   <p>The <dfn class=3D"idl-code" data-dfn-for=3D"XMLHttpRequest" data-dfn-=
type=3D"method" data-export=3D"" id=3D"dom-xmlhttprequest-getallresponsehea=
ders"><code>getAllResponseHeaders()</code><a class=3D"self-link" href=3D"ht=
tps://xhr.spec.whatwg.org/#dom-xmlhttprequest-getallresponseheaders"></a></=
dfn> method, when invoked, must run these steps: </p>
   <ol>
    <li>
     <p>Let <var>output</var> be an empty byte sequence. </p>
    </li><li>
     <p>Let <var>headers</var> be the result of running <a data-link-type=
=3D"dfn" href=3D"https://fetch.spec.whatwg.org/#concept-header-list-sort-an=
d-combine">sort and combine</a> with <a data-link-type=3D"dfn" href=3D"http=
s://xhr.spec.whatwg.org/#response">response</a>=E2=80=99s <a data-link-type=
=3D"dfn" href=3D"https://fetch.spec.whatwg.org/#concept-response-header-lis=
t">header list</a>. </p>
    </li><li>
     <p><a data-link-type=3D"dfn" href=3D"https://infra.spec.whatwg.org/#li=
st-iterate">For each</a> <var>header</var> in <var>headers</var>, append <v=
ar>header</var>=E2=80=99s <a data-link-type=3D"dfn" href=3D"https://fetch.s=
pec.whatwg.org/#concept-header-name">name</a>, followed by a 0x3A 0x20 byte=
 pair, followed by <var>header</var>=E2=80=99s <a data-link-type=3D"dfn" hr=
ef=3D"https://fetch.spec.whatwg.org/#concept-header-value">value</a>, follo=
wed by a 0x0D 0x0A byte pair, to <var>output</var>. </p>
    </li><li>
     <p>Return <var>output</var>. </p>
   </li></ol>
   <p class=3D"note no-backref" role=3D"note">The Fetch Standard filters <a=
 data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#response">resp=
onse</a>=E2=80=99s <a data-link-type=3D"dfn" href=3D"https://fetch.spec.wha=
twg.org/#concept-response-header-list">header list</a>. <a data-link-type=
=3D"biblio" href=3D"https://xhr.spec.whatwg.org/#biblio-fetch">[FETCH]</a> =
</p>
   <div class=3D"example" id=3D"example-getresponseheaders">
    <a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#example-get=
responseheaders"></a>=20
    <p>For the following script: </p>
<pre><code>var client =3D new XMLHttpRequest();
client.open("GET", "narwhals-too.txt", true);
client.send();
client.onreadystatechange =3D function() {
  if(this.readyState =3D=3D this.HEADERS_RECEIVED) {
    print(this.getAllResponseHeaders());
  }
}</code></pre>
    <p>The <code>print()</code> function will get to process something
 like: </p>
<pre><code>Date: Sun, 24 Oct 2004 04:58:38 GMT
Server: Apache/1.3.31 (Unix)
Keep-Alive: timeout=3D15, max=3D99
Connection: Keep-Alive
Transfer-Encoding: chunked
Content-Type: text/plain; charset=3Dutf-8</code></pre>
   </div>
   <h4 class=3D"heading settled" data-level=3D"4.6.6" id=3D"response-body">=
<span class=3D"secno">4.6.6. </span><span class=3D"content">Response body</=
span><a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#response-b=
ody"></a></h4>
   <p>The <dfn data-dfn-type=3D"dfn" data-noexport=3D"" id=3D"response-mime=
-type">response MIME type<a class=3D"self-link" href=3D"https://xhr.spec.wh=
atwg.org/#response-mime-type"></a></dfn> is the result of running these ste=
ps: </p>
   <ol>
    <li>
     <p>Let <var>mimeType</var> be the result of <a data-link-type=3D"dfn" =
href=3D"https://fetch.spec.whatwg.org/#concept-header-extract-mime-type">ex=
tracting a MIME type</a> from <a data-link-type=3D"dfn" href=3D"https://xhr=
.spec.whatwg.org/#response">response</a>=E2=80=99s <a data-link-type=3D"dfn=
" href=3D"https://fetch.spec.whatwg.org/#concept-response-header-list">head=
er list</a>. </p>
    </li><li>
     <p>If <var>mimeType</var> is the empty byte sequence, then set <var>mi=
meType</var> to
 `<code>text/xml</code>`. </p>
    </li><li>
     <p>Return <var>mimeType</var>. </p>
   </li></ol>
   <p>The <dfn data-dfn-type=3D"dfn" data-noexport=3D"" id=3D"override-mime=
-type">override MIME type<a class=3D"self-link" href=3D"https://xhr.spec.wh=
atwg.org/#override-mime-type"></a></dfn> is initially null and can get a va=
lue if <code class=3D"idl"><a data-link-type=3D"idl" href=3D"https://xhr.sp=
ec.whatwg.org/#dom-xmlhttprequest-overridemimetype">overrideMimeType()</a><=
/code> is invoked. <dfn data-dfn-type=3D"dfn" data-noexport=3D"" id=3D"fina=
l-mime-type">Final MIME type<a class=3D"self-link" href=3D"https://xhr.spec=
.whatwg.org/#final-mime-type"></a></dfn> is the <a data-link-type=3D"dfn" h=
ref=3D"https://xhr.spec.whatwg.org/#override-mime-type">override MIME type<=
/a> unless that is null in which case it is the <a data-link-type=3D"dfn" h=
ref=3D"https://xhr.spec.whatwg.org/#response-mime-type">response MIME type<=
/a>. </p>
   <p>The <dfn data-dfn-type=3D"dfn" data-noexport=3D"" id=3D"response-char=
set">response charset<a class=3D"self-link" href=3D"https://xhr.spec.whatwg=
.org/#response-charset"></a></dfn> is the value of
the <code>charset</code> parameter of the `<code>Content-Type</code>` heade=
r
or null if there was no `<code>charset</code>` parameter or the header coul=
d
not be parsed or was omitted. The <dfn data-dfn-type=3D"dfn" data-noexport=
=3D"" id=3D"override-charset">override charset<a class=3D"self-link" href=
=3D"https://xhr.spec.whatwg.org/#override-charset"></a></dfn> is initially =
null and
can get a value if <a data-link-type=3D"functionish" href=3D"https://xhr.sp=
ec.whatwg.org/#dom-xmlhttprequest-overridemimetype"><code>overrideMimeType(=
)</code></a> is invoked. <dfn data-dfn-type=3D"dfn" data-noexport=3D"" id=
=3D"final-charset">Final charset<a class=3D"self-link" href=3D"https://xhr.=
spec.whatwg.org/#final-charset"></a></dfn> is the <a data-link-type=3D"dfn"=
 href=3D"https://xhr.spec.whatwg.org/#override-charset">override charset</a=
> unless
that is null in which case it is the <a data-link-type=3D"dfn" href=3D"http=
s://xhr.spec.whatwg.org/#response-charset">response charset</a>. </p>
   <hr>
   <p>An <code class=3D"idl"><a data-link-type=3D"idl" href=3D"https://xhr.=
spec.whatwg.org/#xmlhttprequest">XMLHttpRequest</a></code> object has an as=
sociated <dfn data-dfn-type=3D"dfn" data-noexport=3D"" id=3D"response-objec=
t">response object<a class=3D"self-link" href=3D"https://xhr.spec.whatwg.or=
g/#response-object"></a></dfn> (an object, failure,
or null). Unless stated otherwise it is null. </p>
   <p>An <dfn data-dfn-type=3D"dfn" data-noexport=3D"" id=3D"arraybuffer-re=
sponse">arraybuffer response<a class=3D"self-link" href=3D"https://xhr.spec=
.whatwg.org/#arraybuffer-response"></a></dfn> is the return value of these =
steps: </p>
   <ol>
    <li>
     <p>Set <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#=
response-object">response object</a> to a new <code class=3D"idl"><a data-l=
ink-type=3D"idl" href=3D"https://heycam.github.io/webidl/#idl-ArrayBuffer">=
ArrayBuffer</a></code> object representing <a data-link-type=3D"dfn" href=
=3D"https://xhr.spec.whatwg.org/#received-bytes">received bytes</a>.
  If this throws an exception, then set <a data-link-type=3D"dfn" href=3D"h=
ttps://xhr.spec.whatwg.org/#response-object">response object</a> to failure=
 and return null. </p>
     <p class=3D"note" role=3D"note">Allocating an <code class=3D"idl"><a d=
ata-link-type=3D"idl" href=3D"https://heycam.github.io/webidl/#idl-ArrayBuf=
fer">ArrayBuffer</a></code> object is not guaranteed to succeed. <a data-li=
nk-type=3D"biblio" href=3D"https://xhr.spec.whatwg.org/#biblio-ecmascript">=
[ECMASCRIPT]</a> </p>
    </li><li>
     <p>Return <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.or=
g/#response-object">response object</a>. </p>
   </li></ol>
   <p>A <dfn data-dfn-type=3D"dfn" data-noexport=3D"" id=3D"blob-response">=
blob response<a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#bl=
ob-response"></a></dfn> is the return value of these steps: </p>
   <ol>
    <li>
     <p>Set <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#=
response-object">response object</a> to a new <code class=3D"idl"><a data-l=
ink-type=3D"idl" href=3D"https://w3c.github.io/FileAPI/#dfn-Blob">Blob</a><=
/code> object representing <a data-link-type=3D"dfn" href=3D"https://xhr.sp=
ec.whatwg.org/#received-bytes">received bytes</a> with <code class=3D"idl">=
<a data-link-type=3D"idl" href=3D"https://w3c.github.io/FileAPI/#dfn-type">=
type</a></code> <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.o=
rg/#final-mime-type">final MIME type</a>. </p>
    </li><li>
     <p>Return <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.or=
g/#response-object">response object</a>. </p>
   </li></ol>
   <p>A <dfn data-dfn-type=3D"dfn" data-noexport=3D"" id=3D"document-respon=
se">document response<a class=3D"self-link" href=3D"https://xhr.spec.whatwg=
.org/#document-response"></a></dfn> is the return value of these steps: </p=
>
   <ol>
    <li>
     <p>If <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#r=
esponse">response</a>=E2=80=99s <a data-link-type=3D"dfn" href=3D"https://f=
etch.spec.whatwg.org/#concept-response-body">body</a> is null, then return =
null. </p>
    </li><li>
     <p>If <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#f=
inal-mime-type">final MIME type</a> is not `<code>text/html</code>`, `<code=
>text/xml</code>`,
 `<code>application/xml</code>`, or does not end in `<code>+xml</code>`, th=
en return null. </p>
    </li><li>
     <p>If <code class=3D"idl"><a data-link-type=3D"idl" href=3D"https://xh=
r.spec.whatwg.org/#dom-xmlhttprequest-responsetype">responseType</a></code>=
 is the empty string and <a data-link-type=3D"dfn" href=3D"https://xhr.spec=
.whatwg.org/#final-mime-type">final MIME type</a> is
  `<code>text/html</code>`, then return null. </p>
     <p class=3D"note" role=3D"note">This is restricted to <code class=3D"i=
dl"><a data-link-type=3D"idl" href=3D"https://xhr.spec.whatwg.org/#dom-xmlh=
ttprequest-responsetype">responseType</a></code> being
  "<code>document</code>" in order to prevent breaking legacy
  content. </p>
    </li><li>
     <p>If <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#f=
inal-mime-type">final MIME type</a> is `<code>text/html</code>`, then run t=
hese substeps: </p>
     <ol>
      <li>
       <p>Let <var>charset</var> be the <a data-link-type=3D"dfn" href=3D"h=
ttps://xhr.spec.whatwg.org/#final-charset">final charset</a>. </p>
      </li><li>
       <p>If <var>charset</var> is null, <a data-link-type=3D"dfn" href=3D"=
https://html.spec.whatwg.org/multipage/syntax.html#prescan-a-byte-stream-to=
-determine-its-encoding">prescan</a> the first 1024 bytes of <a data-link-t=
ype=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#received-bytes">received b=
ytes</a> and if
   that does not terminate unsuccessfully then let <var>charset</var> be
   the return value. </p>
      </li><li>
       <p>If <var>charset</var> is null, set <var>charset</var> to <a data-=
link-type=3D"dfn" href=3D"https://encoding.spec.whatwg.org/#utf-8">utf-8</a=
>. </p>
      </li><li>
       <p>Let <var>document</var> be a <a data-link-type=3D"dfn" href=3D"ht=
tps://dom.spec.whatwg.org/#concept-document">document</a> that
   represents the result parsing <a data-link-type=3D"dfn" href=3D"https://=
xhr.spec.whatwg.org/#received-bytes">received bytes</a> following the rules=
 set
   forth in the HTML Standard for an HTML parser with scripting disabled an=
d <a data-link-type=3D"dfn" href=3D"https://html.spec.whatwg.org/multipage/=
syntax.html#a-known-definite-encoding">a known definite encoding</a> <var>c=
harset</var>. <a data-link-type=3D"biblio" href=3D"https://xhr.spec.whatwg.=
org/#biblio-html">[HTML]</a> </p>
      </li><li>
       <p>Flag <var>document</var> as an <a data-link-type=3D"dfn" href=3D"=
https://dom.spec.whatwg.org/#html-document">HTML document</a>. </p>
     </li></ol>
    </li><li>
     <p>Otherwise, let <var>document</var> be a <a data-link-type=3D"dfn" h=
ref=3D"https://dom.spec.whatwg.org/#concept-document">document</a> that rep=
resents the result of running the <a data-link-type=3D"dfn" href=3D"https:/=
/html.spec.whatwg.org/multipage/xhtml.html#xml-parser">XML parser</a> with =
<a data-link-type=3D"dfn" href=3D"https://html.spec.whatwg.org/multipage/xh=
tml.html#xml-scripting-support-disabled">XML scripting support disabled</a>=
 on <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#received=
-bytes">received bytes</a>. If that fails (unsupported character encoding,
  namespace well-formedness error, etc.), then return null. <a data-link-ty=
pe=3D"biblio" href=3D"https://xhr.spec.whatwg.org/#biblio-html">[HTML]</a> =
</p>
     <p class=3D"note" role=3D"note">Resources referenced will not be loade=
d and no associated XSLT will be
  applied. </p>
    </li><li>
     <p>If <var>charset</var> is null, set <var>charset</var> to <a data-li=
nk-type=3D"dfn" href=3D"https://encoding.spec.whatwg.org/#utf-8">utf-8</a>.=
 </p>
    </li><li>
     <p>Set <var>document</var>=E2=80=99s <a data-link-type=3D"dfn" href=3D=
"https://dom.spec.whatwg.org/#concept-document-encoding">encoding</a> to <v=
ar>charset</var>. </p>
    </li><li>
     <p>Set <var>document</var>=E2=80=99s <a data-link-type=3D"dfn" href=3D=
"https://dom.spec.whatwg.org/#concept-document-content-type">content type</=
a> to <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#final-=
mime-type">final MIME type</a>. </p>
    </li><li>
     <p>Set <var>document</var>=E2=80=99s <a data-link-type=3D"dfn" href=3D=
"https://dom.spec.whatwg.org/#concept-document-url">URL</a> to <a data-link=
-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#response">response</a>=
=E2=80=99s <a data-link-type=3D"dfn" href=3D"https://fetch.spec.whatwg.org/=
#concept-response-url">url</a>. </p>
    </li><li>
     <p>Set <var>document</var>=E2=80=99s <a data-link-type=3D"dfn" href=3D=
"https://dom.spec.whatwg.org/#concept-document-origin">origin</a> to <a dat=
a-link-type=3D"dfn" href=3D"https://dom.spec.whatwg.org/#context-object">co=
ntext object</a>=E2=80=99s <a data-link-type=3D"dfn" href=3D"https://html.s=
pec.whatwg.org/multipage/webappapis.html#relevant-settings-object">relevant=
 settings object</a>=E2=80=99s <a data-link-type=3D"dfn" href=3D"https://ht=
ml.spec.whatwg.org/multipage/webappapis.html#concept-settings-object-origin=
">origin</a>. </p>
    </li><li>
     <p>Set <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#=
response-object">response object</a> to <var>document</var> and return it. =
</p>
   </li></ol>
   <p>A <dfn data-dfn-type=3D"dfn" data-noexport=3D"" id=3D"json-response">=
JSON response<a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#js=
on-response"></a></dfn> is the return value of these steps: </p>
   <ol>
    <li>
     <p>If <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#r=
esponse">response</a>=E2=80=99s <a data-link-type=3D"dfn" href=3D"https://f=
etch.spec.whatwg.org/#concept-response-body">body</a> is null, then return =
null. </p>
    </li><li>
     <p>Let <var>JSON text</var> be the result of running <a data-link-type=
=3D"dfn" href=3D"https://encoding.spec.whatwg.org/#utf-8-decode">utf-8 deco=
de</a> on <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#re=
ceived-bytes">received bytes</a>. </p>
    </li><li>
     <p>Let <var>JSON object</var> be the result of invoking the initial va=
lue of the <code>parse</code> property of the <code>JSON</code> object, wit=
h <var>JSON text</var> as its only argument. If that threw an exception, re=
turn null. <a data-link-type=3D"biblio" href=3D"https://xhr.spec.whatwg.org=
/#biblio-ecmascript">[ECMASCRIPT]</a> </p>
    </li><li>
     <p>Set <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#=
response-object">response object</a> to <var>JSON object</var> and return i=
t. </p>
   </li></ol>
   <p>A <dfn data-dfn-type=3D"dfn" data-noexport=3D"" id=3D"text-response">=
text response<a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#te=
xt-response"></a></dfn> is the return value of these steps: </p>
   <ol>
    <li>
     <p>If <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#r=
esponse">response</a>=E2=80=99s <a data-link-type=3D"dfn" href=3D"https://f=
etch.spec.whatwg.org/#concept-response-body">body</a> is null, then return =
the
 empty string. </p>
    </li><li>
     <p>Let <var>charset</var> be the <a data-link-type=3D"dfn" href=3D"htt=
ps://xhr.spec.whatwg.org/#final-charset">final charset</a>. </p>
    </li><li>
     <p>If <code class=3D"idl"><a data-link-type=3D"idl" href=3D"https://xh=
r.spec.whatwg.org/#dom-xmlhttprequest-responsetype">responseType</a></code>=
 is the empty string, <var>charset</var> is null, and <a data-link-type=3D"=
dfn" href=3D"https://xhr.spec.whatwg.org/#final-mime-type">final MIME type<=
/a> is `<code>text/xml</code>`, `<code>application/xml</code>`, or ends in
  `<code>+xml</code>`, then use the rules set forth in the XML specificatio=
ns to determine the
  encoding. Let <var>charset</var> be the determined encoding. <a data-link=
-type=3D"biblio" href=3D"https://xhr.spec.whatwg.org/#biblio-xml">[XML]</a>=
 <a data-link-type=3D"biblio" href=3D"https://xhr.spec.whatwg.org/#biblio-x=
mlns">[XMLNS]</a> </p>
     <p class=3D"note" role=3D"note">This is restricted to <code class=3D"i=
dl"><a data-link-type=3D"idl" href=3D"https://xhr.spec.whatwg.org/#dom-xmlh=
ttprequest-responsetype">responseType</a></code> being
  the empty string to keep the non-legacy <code class=3D"idl"><a data-link-=
type=3D"idl" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-respon=
setype">responseType</a></code> value
  "<code>text</code>" simple. </p>
    </li><li>
     <p>If <var>charset</var> is null, set <var>charset</var> to <a data-li=
nk-type=3D"dfn" href=3D"https://encoding.spec.whatwg.org/#utf-8">utf-8</a>.=
 </p>
    </li><li>
     <p>Return the result of running <a data-link-type=3D"dfn" href=3D"http=
s://encoding.spec.whatwg.org/#decode">decode</a> on <a data-link-type=3D"df=
n" href=3D"https://xhr.spec.whatwg.org/#received-bytes">received bytes</a> =
using fallback
 encoding <var>charset</var>. </p>
   </li></ol>
   <p class=3D"note" role=3D"note">Authors are strongly encouraged to alway=
s encode their
resources using <a data-link-type=3D"dfn" href=3D"https://encoding.spec.wha=
twg.org/#utf-8">utf-8</a>. </p>
   <h4 class=3D"heading settled" data-level=3D"4.6.7" id=3D"the-overridemim=
etype()-method"><span class=3D"secno">4.6.7. </span><span class=3D"content"=
>The <code>overrideMimeType()</code> method</span><a class=3D"self-link" hr=
ef=3D"https://xhr.spec.whatwg.org/#the-overridemimetype%28%29-method"></a><=
/h4>
   <dl class=3D"domintro">
    <dt><code><var>client</var> . <a class=3D"idl-code" data-link-type=3D"m=
ethod" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-overridemime=
type">overrideMimeType(<var>mime</var>)</a></code>=20
    </dt><dd>
     <p>Acts as if the `<code>Content-Type</code>` header for <a data-link-=
type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#response">response</a> is=
 <var>mime</var>. </p>
     <p>Throws an <code>InvalidStateError</code> exception if <a data-link-=
type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#concept-xmlhttprequest-st=
ate">state</a> is <i>loading</i> or <i>done</i>. </p>
   </dd></dl>
   <p>The <dfn class=3D"idl-code" data-dfn-for=3D"XMLHttpRequest" data-dfn-=
type=3D"method" data-export=3D"" id=3D"dom-xmlhttprequest-overridemimetype"=
><code>overrideMimeType(<var>mime</var>)</code><a class=3D"self-link" href=
=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-overridemimetype"></a><=
/dfn> method must run these steps: </p>
   <ol>
    <li>
     <p>If <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#c=
oncept-xmlhttprequest-state">state</a> is <i>loading</i> or <i>done</i>, <a=
 data-link-type=3D"dfn" href=3D"https://heycam.github.io/webidl/#dfn-throw"=
>throw</a> an <code>InvalidStateError</code> exception. </p>
    </li><li>
     <p>Set <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#=
override-mime-type">override MIME type</a> to `<code>application/octet-stre=
am</code>`. </p>
    </li><li>
     <p>If <var>mime</var> is a <a data-link-type=3D"dfn" href=3D"https://m=
imesniff.spec.whatwg.org/#parsable-mime-type">parsable MIME type</a>, then =
set <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#override=
-mime-type">override MIME type</a> to its <a data-link-type=3D"dfn" href=3D=
"https://mimesniff.spec.whatwg.org/#mime-type-portion">MIME type portion</a=
>. </p>
    </li><li>
     <p>If <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#o=
verride-mime-type">override MIME type</a> has a `<code>charset</code>` para=
meter, then set <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.o=
rg/#override-charset">override charset</a> to its value. </p>
   </li></ol>
   <h4 class=3D"heading settled" data-level=3D"4.6.8" id=3D"the-responsetyp=
e-attribute"><span class=3D"secno">4.6.8. </span><span class=3D"content">Th=
e <code>responseType</code> attribute</span><a class=3D"self-link" href=3D"=
https://xhr.spec.whatwg.org/#the-responsetype-attribute"></a></h4>
   <dl class=3D"domintro">
    <dt><code><var>client</var> . <a class=3D"idl-code" data-link-type=3D"a=
ttribute" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-responset=
ype">responseType</a> [ =3D <var>value</var> ]</code>=20
    </dt><dd>
     <p>Returns the response type. </p>
     <p>Can be set to change the response type. Values are:
  the empty string (default),
  "<code>arraybuffer</code>",
  "<code>blob</code>",
  "<code>document</code>",
  "<code>json</code>", and
  "<code>text</code>". </p>
     <p>When set: setting to "<code>document</code>" is ignored if <a data-=
link-type=3D"dfn" href=3D"https://html.spec.whatwg.org/multipage/webappapis=
.html#current-global-object">current global object</a> is <em>not</em> a <c=
ode class=3D"idl"><a data-link-type=3D"idl" href=3D"https://html.spec.whatw=
g.org/multipage/browsers.html#window">Window</a></code> object. </p>
     <p>When set: throws an <code>InvalidStateError</code> exception if <a =
data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#concept-xmlhttp=
request-state">state</a> is <i>loading</i> or <i>done</i>. </p>
     <p>When set: throws an <code>InvalidAccessError</code> exception if th=
e <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#synchronou=
s-flag">synchronous flag</a> is set and <a data-link-type=3D"dfn" href=3D"h=
ttps://html.spec.whatwg.org/multipage/webappapis.html#current-global-object=
">current global object</a> is a <code class=3D"idl"><a data-link-type=3D"i=
dl" href=3D"https://html.spec.whatwg.org/multipage/browsers.html#window">Wi=
ndow</a></code> object. </p>
   </dd></dl>
   <p>The <dfn class=3D"idl-code" data-dfn-for=3D"XMLHttpRequest" data-dfn-=
type=3D"attribute" data-export=3D"" id=3D"dom-xmlhttprequest-responsetype">=
<code>responseType</code><a class=3D"self-link" href=3D"https://xhr.spec.wh=
atwg.org/#dom-xmlhttprequest-responsetype"></a></dfn> attribute must return=
 its value. Initially its value must be the empty
string. </p>
   <p>Setting the <code class=3D"idl"><a data-link-type=3D"idl" href=3D"htt=
ps://xhr.spec.whatwg.org/#dom-xmlhttprequest-responsetype">responseType</a>=
</code> attribute must run these steps: </p>
   <ol>
    <li>
     <p>If <a data-link-type=3D"dfn" href=3D"https://html.spec.whatwg.org/m=
ultipage/webappapis.html#current-global-object">current global object</a> i=
s <em>not</em> a <code class=3D"idl"><a data-link-type=3D"idl" href=3D"http=
s://html.spec.whatwg.org/multipage/browsers.html#window">Window</a></code> =
object and the given value is
 "<code>document</code>", terminate these steps. </p>
    </li><li>
     <p>If <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#c=
oncept-xmlhttprequest-state">state</a> is <i>loading</i> or <i>done</i>, <a=
 data-link-type=3D"dfn" href=3D"https://heycam.github.io/webidl/#dfn-throw"=
>throw</a> an <code>InvalidStateError</code> exception. </p>
    </li><li>
     <p>If <a data-link-type=3D"dfn" href=3D"https://html.spec.whatwg.org/m=
ultipage/webappapis.html#current-global-object">current global object</a> i=
s a <code class=3D"idl"><a data-link-type=3D"idl" href=3D"https://html.spec=
.whatwg.org/multipage/browsers.html#window">Window</a></code> object and th=
e <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#synchronou=
s-flag">synchronous flag</a> is set, <a data-link-type=3D"dfn" href=3D"http=
s://heycam.github.io/webidl/#dfn-throw">throw</a> an <code>InvalidAccessErr=
or</code> exception. </p>
    </li><li>
     <p>Set the <code class=3D"idl"><a data-link-type=3D"idl" href=3D"https=
://xhr.spec.whatwg.org/#dom-xmlhttprequest-responsetype">responseType</a></=
code> attribute=E2=80=99s value to the given value. </p>
   </li></ol>
   <h4 class=3D"heading settled" data-level=3D"4.6.9" id=3D"the-response-at=
tribute"><span class=3D"secno">4.6.9. </span><span class=3D"content">The <c=
ode>response</code> attribute</span><a class=3D"self-link" href=3D"https://=
xhr.spec.whatwg.org/#the-response-attribute"></a></h4>
   <dl class=3D"domintro">
    <dt><code><var>client</var> . <a class=3D"idl-code" data-link-type=3D"a=
ttribute" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-response"=
>response</a></code>=20
    </dt><dd>
     <p>Returns the <a data-link-type=3D"dfn" href=3D"https://xhr.spec.what=
wg.org/#response">response</a>=E2=80=99s <a data-link-type=3D"dfn" href=3D"=
https://fetch.spec.whatwg.org/#concept-response-body">body</a>. </p>
   </dd></dl>
   <p>The <dfn class=3D"idl-code" data-dfn-for=3D"XMLHttpRequest" data-dfn-=
type=3D"attribute" data-export=3D"" id=3D"dom-xmlhttprequest-response"><cod=
e>response</code><a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org=
/#dom-xmlhttprequest-response"></a></dfn> attribute must return the result =
of running these
steps: </p>
   <dl class=3D"switch">
    <dt>If <code class=3D"idl"><a data-link-type=3D"idl" href=3D"https://xh=
r.spec.whatwg.org/#dom-xmlhttprequest-responsetype">responseType</a></code>=
 is the empty string or "<code>text</code>"=20
    </dt><dd>
     <ol>
      <li>
       <p>If <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/=
#concept-xmlhttprequest-state">state</a> is not <i>loading</i> or <i>done</=
i>, return the empty string. </p>
      </li><li>
       <p>Return the <a data-link-type=3D"dfn" href=3D"https://xhr.spec.wha=
twg.org/#text-response">text response</a>. </p>
     </li></ol>
    </dd><dt>Otherwise=20
    </dt><dd>
     <ol>
      <li>
       <p>If <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/=
#concept-xmlhttprequest-state">state</a> is not <i>done</i>, return null. <=
/p>
      </li><li>
       <p>If <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/=
#response-object">response object</a> is failure, then return null. </p>
      </li><li>
       <p>If <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/=
#response-object">response object</a> is non-null, then return it. </p>
      </li><li>
       <dl class=3D"switch">
        <dt>If <code class=3D"idl"><a data-link-type=3D"idl" href=3D"https:=
//xhr.spec.whatwg.org/#dom-xmlhttprequest-responsetype">responseType</a></c=
ode> is
     "<code>arraybuffer</code>"=20
        </dt><dd>
         <p>Return the <a data-link-type=3D"dfn" href=3D"https://xhr.spec.w=
hatwg.org/#arraybuffer-response">arraybuffer response</a>. </p>
        </dd><dt>If <code class=3D"idl"><a data-link-type=3D"idl" href=3D"h=
ttps://xhr.spec.whatwg.org/#dom-xmlhttprequest-responsetype">responseType</=
a></code> is
     "<code>blob</code>"=20
        </dt><dd>
         <p>Return the <a data-link-type=3D"dfn" href=3D"https://xhr.spec.w=
hatwg.org/#blob-response">blob response</a>. </p>
        </dd><dt>If <code class=3D"idl"><a data-link-type=3D"idl" href=3D"h=
ttps://xhr.spec.whatwg.org/#dom-xmlhttprequest-responsetype">responseType</=
a></code> is
     "<code>document</code>"=20
        </dt><dd>
         <p>Return the <a data-link-type=3D"dfn" href=3D"https://xhr.spec.w=
hatwg.org/#document-response">document response</a>. </p>
        </dd><dt>If <code class=3D"idl"><a data-link-type=3D"idl" href=3D"h=
ttps://xhr.spec.whatwg.org/#dom-xmlhttprequest-responsetype">responseType</=
a></code> is
     "<code>json</code>"=20
        </dt><dd>
         <p>Return the <a data-link-type=3D"dfn" href=3D"https://xhr.spec.w=
hatwg.org/#json-response">JSON response</a>. </p>
       </dd></dl>
     </li></ol>
   </dd></dl>
   <h4 class=3D"heading settled" data-level=3D"4.6.10" id=3D"the-responsete=
xt-attribute"><span class=3D"secno">4.6.10. </span><span class=3D"content">=
The <code>responseText</code> attribute</span><a class=3D"self-link" href=
=3D"https://xhr.spec.whatwg.org/#the-responsetext-attribute"></a></h4>
   <dl class=3D"domintro">
    <dt><code><var>client</var> . <a class=3D"idl-code" data-link-type=3D"a=
ttribute" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-responset=
ext">responseText</a></code>=20
    </dt><dd>
     <p>Returns the <a data-link-type=3D"dfn" href=3D"https://xhr.spec.what=
wg.org/#text-response">text response</a>. </p>
     <p>Throws an <code>InvalidStateError</code> exception if <code class=
=3D"idl"><a data-link-type=3D"idl" href=3D"https://xhr.spec.whatwg.org/#dom=
-xmlhttprequest-responsetype">responseType</a></code> is not
  the empty string or "<code>text</code>". </p>
   </dd></dl>
   <p>The <dfn class=3D"idl-code" data-dfn-for=3D"XMLHttpRequest" data-dfn-=
type=3D"attribute" data-export=3D"" id=3D"dom-xmlhttprequest-responsetext">=
<code>responseText</code><a class=3D"self-link" href=3D"https://xhr.spec.wh=
atwg.org/#dom-xmlhttprequest-responsetext"></a></dfn> attribute must return=
 the result of running these
steps: </p>
   <ol>
    <li>
     <p>If <code class=3D"idl"><a data-link-type=3D"idl" href=3D"https://xh=
r.spec.whatwg.org/#dom-xmlhttprequest-responsetype">responseType</a></code>=
 is not the
 empty string or "<code>text</code>", <a data-link-type=3D"dfn" href=3D"htt=
ps://heycam.github.io/webidl/#dfn-throw">throw</a> an <code>InvalidStateErr=
or</code> exception. </p>
    </li><li>
     <p>If <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#c=
oncept-xmlhttprequest-state">state</a> is not <i>loading</i> or <i>done</i>=
, return the empty string. </p>
    </li><li>
     <p>Return the <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatw=
g.org/#text-response">text response</a>. </p>
   </li></ol>
   <h4 class=3D"heading settled" data-level=3D"4.6.11" id=3D"the-responsexm=
l-attribute"><span class=3D"secno">4.6.11. </span><span class=3D"content">T=
he <code>responseXML</code> attribute</span><a class=3D"self-link" href=3D"=
https://xhr.spec.whatwg.org/#the-responsexml-attribute"></a></h4>
   <dl class=3D"domintro">
    <dt><code><var>client</var> . <a class=3D"idl-code" data-link-type=3D"a=
ttribute" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-responsex=
ml">responseXML</a></code>=20
    </dt><dd>
     <p>Returns the <a data-link-type=3D"dfn" href=3D"https://xhr.spec.what=
wg.org/#document-response">document response</a>. </p>
     <p>Throws an <code>InvalidStateError</code> exception if <code class=
=3D"idl"><a data-link-type=3D"idl" href=3D"https://xhr.spec.whatwg.org/#dom=
-xmlhttprequest-responsetype">responseType</a></code> is not
  the empty string or "<code>document</code>". </p>
   </dd></dl>
   <p>The <dfn class=3D"idl-code" data-dfn-for=3D"XMLHttpRequest" data-dfn-=
type=3D"attribute" data-export=3D"" id=3D"dom-xmlhttprequest-responsexml"><=
code>responseXML</code><a class=3D"self-link" href=3D"https://xhr.spec.what=
wg.org/#dom-xmlhttprequest-responsexml"></a></dfn> attribute must return th=
e result of running these steps: </p>
   <ol>
    <li>
     <p>If <code class=3D"idl"><a data-link-type=3D"idl" href=3D"https://xh=
r.spec.whatwg.org/#dom-xmlhttprequest-responsetype">responseType</a></code>=
 is not
 the empty string or "<code>document</code>", <a data-link-type=3D"dfn" hre=
f=3D"https://heycam.github.io/webidl/#dfn-throw">throw</a> an <code>Invalid=
StateError</code> exception. </p>
    </li><li>
     <p>If <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#c=
oncept-xmlhttprequest-state">state</a> is not <i>done</i>,
 return null. </p>
    </li><li>
     <p>If <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#r=
esponse-object">response object</a> is non-null, then return it. </p>
    </li><li>
     <p>Return the <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatw=
g.org/#document-response">document response</a>. </p>
   </li></ol>
   <p class=3D"note" role=3D"note">The <code class=3D"idl"><a data-link-typ=
e=3D"idl" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-responsex=
ml">responseXML</a></code> attribute has XML in its name for historical
reasons. It also returns HTML resources as <a data-link-type=3D"dfn" href=
=3D"https://dom.spec.whatwg.org/#concept-document">documents</a>. </p>
   <h3 class=3D"heading settled" data-level=3D"4.7" id=3D"events"><span cla=
ss=3D"secno">4.7. </span><span class=3D"content">Events summary</span><a cl=
ass=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#events"></a></h3>
   <p><em>This section is non-normative.</em> </p>
   <p>The following events are dispatched on <code class=3D"idl"><a data-li=
nk-type=3D"idl" href=3D"https://xhr.spec.whatwg.org/#xmlhttprequest">XMLHtt=
pRequest</a></code> and/or <code class=3D"idl"><a data-link-type=3D"idl" hr=
ef=3D"https://xhr.spec.whatwg.org/#xmlhttprequestupload">XMLHttpRequestUplo=
ad</a></code> objects: </p>
   <table>
    <thead>
     <tr>
      <th>Event name=20
      </th><th>Interface=20
      </th><th>Dispatched when=E2=80=A6=20
    </th></tr></thead><tbody>
     <tr>
      <td><dfn class=3D"idl-code" data-dfn-for=3D"XMLHttpRequest" data-dfn-=
type=3D"event" data-export=3D"" id=3D"event-xhr-readystatechange"><code>rea=
dystatechange</code><a class=3D"self-link" href=3D"https://xhr.spec.whatwg.=
org/#event-xhr-readystatechange"></a></dfn>=20
      </td><td><code>Event</code>=20
      </td><td>The <code class=3D"idl"><a data-link-type=3D"idl" href=3D"ht=
tps://xhr.spec.whatwg.org/#dom-xmlhttprequest-readystate">readyState</a></c=
ode> attribute changes
   value, except when it changes to <a class=3D"idl-code" data-link-type=3D=
"const" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-unsent">UNS=
ENT</a>.=20
     </td></tr><tr>
      <td><dfn class=3D"idl-code" data-dfn-for=3D"XMLHttpRequest" data-dfn-=
type=3D"event" data-export=3D"" id=3D"event-xhr-loadstart"><code>loadstart<=
/code><a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#event-xhr=
-loadstart"></a></dfn>=20
      </td><td><code class=3D"idl"><a data-link-type=3D"idl" href=3D"https:=
//xhr.spec.whatwg.org/#progressevent">ProgressEvent</a></code>=20
      </td><td>The fetch initiates.=20
     </td></tr><tr>
      <td><dfn class=3D"idl-code" data-dfn-for=3D"XMLHttpRequest" data-dfn-=
type=3D"event" data-export=3D"" id=3D"event-xhr-progress"><code>progress</c=
ode><a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#event-xhr-p=
rogress"></a></dfn>=20
      </td><td><code class=3D"idl"><a data-link-type=3D"idl" href=3D"https:=
//xhr.spec.whatwg.org/#progressevent">ProgressEvent</a></code>=20
      </td><td>Transmitting data.=20
     </td></tr><tr>
      <td><dfn class=3D"idl-code" data-dfn-for=3D"XMLHttpRequest" data-dfn-=
type=3D"event" data-export=3D"" id=3D"event-xhr-abort"><code>abort</code><a=
 class=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#event-xhr-abort">=
</a></dfn>=20
      </td><td><code class=3D"idl"><a data-link-type=3D"idl" href=3D"https:=
//xhr.spec.whatwg.org/#progressevent">ProgressEvent</a></code>=20
      </td><td>When the fetch has been aborted. For instance, by invoking t=
he <code class=3D"idl"><a data-link-type=3D"idl" href=3D"https://xhr.spec.w=
hatwg.org/#dom-xmlhttprequest-abort">abort()</a></code> method.=20
     </td></tr><tr>
      <td><dfn class=3D"idl-code" data-dfn-for=3D"XMLHttpRequest" data-dfn-=
type=3D"event" data-export=3D"" id=3D"event-xhr-error"><code>error</code><a=
 class=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#event-xhr-error">=
</a></dfn>=20
      </td><td><code class=3D"idl"><a data-link-type=3D"idl" href=3D"https:=
//xhr.spec.whatwg.org/#progressevent">ProgressEvent</a></code>=20
      </td><td>The fetch failed.=20
     </td></tr><tr>
      <td><dfn class=3D"idl-code" data-dfn-for=3D"XMLHttpRequest" data-dfn-=
type=3D"event" data-export=3D"" id=3D"event-xhr-load"><code>load</code><a c=
lass=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#event-xhr-load"></a=
></dfn>=20
      </td><td><code class=3D"idl"><a data-link-type=3D"idl" href=3D"https:=
//xhr.spec.whatwg.org/#progressevent">ProgressEvent</a></code>=20
      </td><td>The fetch succeeded.=20
     </td></tr><tr>
      <td><dfn class=3D"idl-code" data-dfn-for=3D"XMLHttpRequest" data-dfn-=
type=3D"event" data-export=3D"" id=3D"event-xhr-timeout"><code>timeout</cod=
e><a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#event-xhr-tim=
eout"></a></dfn>=20
      </td><td><code class=3D"idl"><a data-link-type=3D"idl" href=3D"https:=
//xhr.spec.whatwg.org/#progressevent">ProgressEvent</a></code>=20
      </td><td>The author specified timeout has passed before the fetch com=
pleted.=20
     </td></tr><tr>
      <td><dfn class=3D"idl-code" data-dfn-for=3D"XMLHttpRequest" data-dfn-=
type=3D"event" data-export=3D"" id=3D"event-xhr-loadend"><code>loadend</cod=
e><a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#event-xhr-loa=
dend"></a></dfn>=20
      </td><td><code class=3D"idl"><a data-link-type=3D"idl" href=3D"https:=
//xhr.spec.whatwg.org/#progressevent">ProgressEvent</a></code>=20
      </td><td>The fetch completed (success or failure).=20
   </td></tr></tbody></table>
   <h2 class=3D"heading settled" data-level=3D"5" id=3D"interface-formdata"=
><span class=3D"secno">5. </span><span class=3D"content">Interface <code cl=
ass=3D"idl"><a data-link-type=3D"idl" href=3D"https://xhr.spec.whatwg.org/#=
formdata">FormData</a></code></span><a class=3D"self-link" href=3D"https://=
xhr.spec.whatwg.org/#interface-formdata"></a></h2>
<pre class=3D"idl highlight def"><span class=3D"kt">typedef</span> (<a clas=
s=3D"n" data-link-type=3D"idl-name" href=3D"https://w3c.github.io/FileAPI/#=
dfn-file">File</a> <span class=3D"kt">or</span> <a class=3D"n idl-code" dat=
a-link-type=3D"interface" href=3D"https://heycam.github.io/webidl/#idl-USVS=
tring"><span class=3D"kt">USVString</span></a>) <dfn class=3D"nv idl-code" =
data-dfn-type=3D"typedef" data-export=3D"" id=3D"formdataentryvalue">FormDa=
taEntryValue<a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#for=
mdataentryvalue"></a></dfn>;

[<a class=3D"nv idl-code" data-link-type=3D"constructor" href=3D"https://xh=
r.spec.whatwg.org/#dom-formdata">Constructor</a>(<span class=3D"kt">optiona=
l</span> <a class=3D"n" data-link-type=3D"idl-name" href=3D"https://html.sp=
ec.whatwg.org/multipage/forms.html#htmlformelement">HTMLFormElement</a> <df=
n class=3D"nv idl-code" data-dfn-for=3D"FormData/FormData(form)" data-dfn-t=
ype=3D"argument" data-export=3D"" id=3D"dom-formdata-formdata-form-form">fo=
rm<a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#dom-formdata-=
formdata-form-form"></a></dfn>),
 <a class=3D"nv idl-code" data-link-type=3D"extended-attribute" href=3D"htt=
ps://heycam.github.io/webidl/#Exposed">Exposed</a>=3D(<span class=3D"n">Win=
dow</span>,<span class=3D"n">Worker</span>)]
<span class=3D"kt">interface</span> <dfn class=3D"nv idl-code" data-dfn-typ=
e=3D"interface" data-export=3D"" id=3D"formdata">FormData<a class=3D"self-l=
ink" href=3D"https://xhr.spec.whatwg.org/#formdata"></a></dfn> {
  <span class=3D"kt">void</span> <a class=3D"nv idl-code" data-link-type=3D=
"method" href=3D"https://xhr.spec.whatwg.org/#dom-formdata-append">append</=
a>(<a class=3D"n idl-code" data-link-type=3D"interface" href=3D"https://hey=
cam.github.io/webidl/#idl-USVString"><span class=3D"kt">USVString</span></a=
> <dfn class=3D"nv idl-code" data-dfn-for=3D"FormData/append(name, value)" =
data-dfn-type=3D"argument" data-export=3D"" id=3D"dom-formdata-append-name-=
value-name">name<a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org/=
#dom-formdata-append-name-value-name"></a></dfn>, <a class=3D"n idl-code" d=
ata-link-type=3D"interface" href=3D"https://heycam.github.io/webidl/#idl-US=
VString"><span class=3D"kt">USVString</span></a> <dfn class=3D"nv idl-code"=
 data-dfn-for=3D"FormData/append(name, value)" data-dfn-type=3D"argument" d=
ata-export=3D"" id=3D"dom-formdata-append-name-value-value">value<a class=
=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#dom-formdata-append-nam=
e-value-value"></a></dfn>);
  <span class=3D"kt">void</span> <a class=3D"nv idl-code" data-link-type=3D=
"method" href=3D"https://xhr.spec.whatwg.org/#dom-formdata-append-blob">app=
end</a>(<a class=3D"n idl-code" data-link-type=3D"interface" href=3D"https:=
//heycam.github.io/webidl/#idl-USVString"><span class=3D"kt">USVString</spa=
n></a> <dfn class=3D"nv idl-code" data-dfn-for=3D"FormData/append(name, blo=
bValue, filename), FormData/append(name, blobValue)" data-dfn-type=3D"argum=
ent" data-export=3D"" id=3D"dom-formdata-append-name-blobvalue-filename-nam=
e">name<a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#dom-form=
data-append-name-blobvalue-filename-name"></a></dfn>, <a class=3D"n" data-l=
ink-type=3D"idl-name" href=3D"https://w3c.github.io/FileAPI/#dfn-Blob">Blob=
</a> <dfn class=3D"nv idl-code" data-dfn-for=3D"FormData/append(name, blobV=
alue, filename), FormData/append(name, blobValue)" data-dfn-type=3D"argumen=
t" data-export=3D"" id=3D"dom-formdata-append-name-blobvalue-filename-blobv=
alue">blobValue<a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#=
dom-formdata-append-name-blobvalue-filename-blobvalue"></a></dfn>, <span cl=
ass=3D"kt">optional</span> <a class=3D"n idl-code" data-link-type=3D"interf=
ace" href=3D"https://heycam.github.io/webidl/#idl-USVString"><span class=3D=
"kt">USVString</span></a> <dfn class=3D"nv idl-code" data-dfn-for=3D"FormDa=
ta/append(name, blobValue, filename), FormData/append(name, blobValue)" dat=
a-dfn-type=3D"argument" data-export=3D"" id=3D"dom-formdata-append-name-blo=
bvalue-filename-filename">filename<a class=3D"self-link" href=3D"https://xh=
r.spec.whatwg.org/#dom-formdata-append-name-blobvalue-filename-filename"></=
a></dfn>);
  <span class=3D"kt">void</span> <a class=3D"nv idl-code" data-link-type=3D=
"method" href=3D"https://xhr.spec.whatwg.org/#dom-formdata-delete">delete</=
a>(<a class=3D"n idl-code" data-link-type=3D"interface" href=3D"https://hey=
cam.github.io/webidl/#idl-USVString"><span class=3D"kt">USVString</span></a=
> <dfn class=3D"nv idl-code" data-dfn-for=3D"FormData/delete(name)" data-df=
n-type=3D"argument" data-export=3D"" id=3D"dom-formdata-delete-name-name">n=
ame<a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#dom-formdata=
-delete-name-name"></a></dfn>);
  <a class=3D"n" data-link-type=3D"idl-name" href=3D"https://xhr.spec.whatw=
g.org/#formdataentryvalue">FormDataEntryValue</a>? <a class=3D"nv idl-code"=
 data-link-type=3D"method" href=3D"https://xhr.spec.whatwg.org/#dom-formdat=
a-get">get</a>(<a class=3D"n idl-code" data-link-type=3D"interface" href=3D=
"https://heycam.github.io/webidl/#idl-USVString"><span class=3D"kt">USVStri=
ng</span></a> <dfn class=3D"nv idl-code" data-dfn-for=3D"FormData/get(name)=
" data-dfn-type=3D"argument" data-export=3D"" id=3D"dom-formdata-get-name-n=
ame">name<a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#dom-fo=
rmdata-get-name-name"></a></dfn>);
  <span class=3D"kt">sequence</span>&lt;<a class=3D"n" data-link-type=3D"id=
l-name" href=3D"https://xhr.spec.whatwg.org/#formdataentryvalue">FormDataEn=
tryValue</a>&gt; <a class=3D"nv idl-code" data-link-type=3D"method" href=3D=
"https://xhr.spec.whatwg.org/#dom-formdata-getall">getAll</a>(<a class=3D"n=
 idl-code" data-link-type=3D"interface" href=3D"https://heycam.github.io/we=
bidl/#idl-USVString"><span class=3D"kt">USVString</span></a> <dfn class=3D"=
nv idl-code" data-dfn-for=3D"FormData/getAll(name)" data-dfn-type=3D"argume=
nt" data-export=3D"" id=3D"dom-formdata-getall-name-name">name<a class=3D"s=
elf-link" href=3D"https://xhr.spec.whatwg.org/#dom-formdata-getall-name-nam=
e"></a></dfn>);
  <a class=3D"n idl-code" data-link-type=3D"interface" href=3D"https://heyc=
am.github.io/webidl/#idl-boolean"><span class=3D"kt">boolean</span></a> <a =
class=3D"nv idl-code" data-link-type=3D"method" href=3D"https://xhr.spec.wh=
atwg.org/#dom-formdata-has">has</a>(<a class=3D"n idl-code" data-link-type=
=3D"interface" href=3D"https://heycam.github.io/webidl/#idl-USVString"><spa=
n class=3D"kt">USVString</span></a> <dfn class=3D"nv idl-code" data-dfn-for=
=3D"FormData/has(name)" data-dfn-type=3D"argument" data-export=3D"" id=3D"d=
om-formdata-has-name-name">name<a class=3D"self-link" href=3D"https://xhr.s=
pec.whatwg.org/#dom-formdata-has-name-name"></a></dfn>);
  <span class=3D"kt">void</span> <a class=3D"nv idl-code" data-link-type=3D=
"method" href=3D"https://xhr.spec.whatwg.org/#dom-formdata-set">set</a>(<a =
class=3D"n idl-code" data-link-type=3D"interface" href=3D"https://heycam.gi=
thub.io/webidl/#idl-USVString"><span class=3D"kt">USVString</span></a> <dfn=
 class=3D"nv idl-code" data-dfn-for=3D"FormData/set(name, value)" data-dfn-=
type=3D"argument" data-export=3D"" id=3D"dom-formdata-set-name-value-name">=
name<a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#dom-formdat=
a-set-name-value-name"></a></dfn>, <a class=3D"n idl-code" data-link-type=
=3D"interface" href=3D"https://heycam.github.io/webidl/#idl-USVString"><spa=
n class=3D"kt">USVString</span></a> <dfn class=3D"nv idl-code" data-dfn-for=
=3D"FormData/set(name, value)" data-dfn-type=3D"argument" data-export=3D"" =
id=3D"dom-formdata-set-name-value-value">value<a class=3D"self-link" href=
=3D"https://xhr.spec.whatwg.org/#dom-formdata-set-name-value-value"></a></d=
fn>);
  <span class=3D"kt">void</span> <a class=3D"nv idl-code" data-link-type=3D=
"method" href=3D"https://xhr.spec.whatwg.org/#dom-formdata-set-blob">set</a=
>(<a class=3D"n idl-code" data-link-type=3D"interface" href=3D"https://heyc=
am.github.io/webidl/#idl-USVString"><span class=3D"kt">USVString</span></a>=
 <dfn class=3D"nv idl-code" data-dfn-for=3D"FormData/set(name, blobValue, f=
ilename), FormData/set(name, blobValue)" data-dfn-type=3D"argument" data-ex=
port=3D"" id=3D"dom-formdata-set-name-blobvalue-filename-name">name<a class=
=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#dom-formdata-set-name-b=
lobvalue-filename-name"></a></dfn>, <a class=3D"n" data-link-type=3D"idl-na=
me" href=3D"https://w3c.github.io/FileAPI/#dfn-Blob">Blob</a> <dfn class=3D=
"nv idl-code" data-dfn-for=3D"FormData/set(name, blobValue, filename), Form=
Data/set(name, blobValue)" data-dfn-type=3D"argument" data-export=3D"" id=
=3D"dom-formdata-set-name-blobvalue-filename-blobvalue">blobValue<a class=
=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#dom-formdata-set-name-b=
lobvalue-filename-blobvalue"></a></dfn>, <span class=3D"kt">optional</span>=
 <a class=3D"n idl-code" data-link-type=3D"interface" href=3D"https://heyca=
m.github.io/webidl/#idl-USVString"><span class=3D"kt">USVString</span></a> =
<dfn class=3D"nv idl-code" data-dfn-for=3D"FormData/set(name, blobValue, fi=
lename), FormData/set(name, blobValue)" data-dfn-type=3D"argument" data-exp=
ort=3D"" id=3D"dom-formdata-set-name-blobvalue-filename-filename">filename<=
a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#dom-formdata-set=
-name-blobvalue-filename-filename"></a></dfn>);
  <span class=3D"kt">iterable</span>&lt;<a class=3D"n idl-code" data-link-t=
ype=3D"interface" href=3D"https://heycam.github.io/webidl/#idl-USVString"><=
span class=3D"kt">USVString</span></a>, <a class=3D"n" data-link-type=3D"id=
l-name" href=3D"https://xhr.spec.whatwg.org/#formdataentryvalue">FormDataEn=
tryValue</a>&gt;;
};</pre>
   <p>The <code class=3D"idl"><a data-link-type=3D"idl" href=3D"https://xhr=
.spec.whatwg.org/#formdata">FormData</a></code> object represents an ordere=
d list of <dfn data-dfn-for=3D"FormData" data-dfn-type=3D"dfn" data-lt=3D"e=
ntry|entries" data-noexport=3D"" id=3D"concept-formdata-entry">entries<a cl=
ass=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#concept-formdata-ent=
ry"></a></dfn>. Each <a data-link-type=3D"dfn" href=3D"https://xhr.spec.wha=
twg.org/#concept-formdata-entry">entry</a> consists of a <dfn data-dfn-for=
=3D"entry" data-dfn-type=3D"dfn" data-noexport=3D"" id=3D"concept-formdata-=
entry-name">name<a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org/=
#concept-formdata-entry-name"></a></dfn> and a <dfn data-dfn-for=3D"entry" =
data-dfn-type=3D"dfn" data-noexport=3D"" id=3D"concept-formdata-entry-value=
">value<a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#concept-=
formdata-entry-value"></a></dfn>. </p>
   <p>For the purposes of interaction with other algorithms, an <a data-lin=
k-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#concept-formdata-entry"=
>entry</a>=E2=80=99s type is "string" if its <a data-link-type=3D"dfn" href=
=3D"https://xhr.spec.whatwg.org/#concept-formdata-entry-value">value</a> is=
 a string and "file" otherwise. If
an <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#concept-f=
ormdata-entry">entry</a>=E2=80=99s type is "file", its filename is
the empty string if <a data-link-type=3D"dfn" href=3D"https://xhr.spec.what=
wg.org/#concept-formdata-entry-value">value</a> is not
a <code class=3D"idl"><a data-link-type=3D"idl" href=3D"https://w3c.github.=
io/FileAPI/#dfn-file">File</a></code> object, and otherwise its filename is=
 the
value of <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#con=
cept-formdata-entry">entry</a>=E2=80=99s <a data-link-type=3D"dfn" href=3D"=
https://xhr.spec.whatwg.org/#concept-formdata-entry-value">value</a>=E2=80=
=99s <code class=3D"idl"><a data-link-type=3D"idl" href=3D"https://w3c.gith=
ub.io/FileAPI/#dfn-name">name</a></code> attribute. </p>
   <p>To <dfn data-dfn-type=3D"dfn" data-noexport=3D"" id=3D"create-an-entr=
y">create an entry<a class=3D"self-link" href=3D"https://xhr.spec.whatwg.or=
g/#create-an-entry"></a></dfn> for <var>name</var>, <var>value</var>, and o=
ptionally a <var>filename</var>, run these steps: </p>
   <ol>
    <li>
     <p>Let <var>entry</var> be a new <a data-link-type=3D"dfn" href=3D"htt=
ps://xhr.spec.whatwg.org/#concept-formdata-entry">entry</a>. </p>
    </li><li>
     <p>Set <var>entry</var>=E2=80=99s <a data-link-type=3D"dfn" href=3D"ht=
tps://xhr.spec.whatwg.org/#concept-formdata-entry-name">name</a> to <var>na=
me</var>. </p>
    </li><li>
     <p>If <var>value</var> is a <code class=3D"idl"><a data-link-type=3D"i=
dl" href=3D"https://w3c.github.io/FileAPI/#dfn-Blob">Blob</a></code> object=
 and not a <code class=3D"idl"><a data-link-type=3D"idl" href=3D"https://w3=
c.github.io/FileAPI/#dfn-file">File</a></code> object, then set <var>value<=
/var> to a new <code class=3D"idl"><a data-link-type=3D"idl" href=3D"https:=
//w3c.github.io/FileAPI/#dfn-file">File</a></code> object, representing the=
 same bytes, whose <code class=3D"idl"><a data-link-type=3D"idl" href=3D"ht=
tps://w3c.github.io/FileAPI/#dfn-name">name</a></code> attribute value is
 "<code>blob</code>". </p>
    </li><li>
     <p>If <var>value</var> is (now) a <code class=3D"idl"><a data-link-typ=
e=3D"idl" href=3D"https://w3c.github.io/FileAPI/#dfn-file">File</a></code> =
object and <var>filename</var> is given, then set <var>value</var> to a new=
 <code class=3D"idl"><a data-link-type=3D"idl" href=3D"https://w3c.github.i=
o/FileAPI/#dfn-file">File</a></code> object, representing the same bytes, w=
hose <code class=3D"idl"><a data-link-type=3D"idl" href=3D"https://w3c.gith=
ub.io/FileAPI/#dfn-name">name</a></code> attribute value is <var>filename</=
var>. </p>
    </li><li>
     <p>Set <var>entry</var>=E2=80=99s <a data-link-type=3D"dfn" href=3D"ht=
tps://xhr.spec.whatwg.org/#concept-formdata-entry-value">value</a> to <var>=
value</var>. </p>
    </li><li>
     <p>Return <var>entry</var>. </p>
   </li></ol>
   <hr>
   <p>The <dfn class=3D"idl-code" data-dfn-for=3D"FormData" data-dfn-type=
=3D"constructor" data-export=3D"" id=3D"dom-formdata"><code>FormData(<var>f=
orm</var>)</code><a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org=
/#dom-formdata"></a></dfn> constructor must run these steps: </p>
   <ol>
    <li>
     <p>Let <var>fd</var> be a new <code class=3D"idl"><a data-link-type=3D=
"idl" href=3D"https://xhr.spec.whatwg.org/#formdata">FormData</a></code> ob=
ject. </p>
    </li><li>
     <p>If <var>form</var> is given, set <var>fd</var>=E2=80=99s <a data-li=
nk-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#concept-formdata-entry=
">entries</a> to the result of <a data-link-type=3D"dfn" href=3D"https://ht=
ml.spec.whatwg.org/multipage/forms.html#constructing-the-form-data-set">con=
structing the form data set</a> for <var>form</var>. </p>
    </li><li>
     <p>Return <var>fd</var>. </p>
   </li></ol>
   <p>The <dfn class=3D"idl-code" data-dfn-for=3D"FormData" data-dfn-type=
=3D"method" data-export=3D"" id=3D"dom-formdata-append"><code>append(<var>n=
ame</var>, <var>value</var>)</code><a class=3D"self-link" href=3D"https://x=
hr.spec.whatwg.org/#dom-formdata-append"></a></dfn> and <dfn class=3D"idl-c=
ode" data-dfn-for=3D"FormData" data-dfn-type=3D"method" data-export=3D"" da=
ta-lt=3D"append(name, blobValue, filename)|append(name, blobValue)" id=3D"d=
om-formdata-append-blob"><code>append(<var>name</var>, <var>blobValue</var>=
, <var>filename</var>)</code><a class=3D"self-link" href=3D"https://xhr.spe=
c.whatwg.org/#dom-formdata-append-blob"></a></dfn> methods, when invoked, m=
ust run these steps: </p>
   <ol>
    <li>
     <p>Let <var>value</var> be <var>value</var> if given, and <var>blobVal=
ue</var> otherwise. </p>
    </li><li>
     <p>Let <var>entry</var> be the result of <a data-link-type=3D"dfn" hre=
f=3D"https://xhr.spec.whatwg.org/#create-an-entry">creating an entry</a> wi=
th <var>name</var>, <var>value</var>, and <var>filename</var> if given. </p=
>
    </li><li>
     <p>Append <var>entry</var> to <a data-link-type=3D"dfn" href=3D"https:=
//dom.spec.whatwg.org/#context-object">context object</a>=E2=80=99s list of=
 <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#concept-for=
mdata-entry">entries</a>. </p>
   </li></ol>
   <p class=3D"note" role=3D"note">The reason there is an argument named <v=
ar>value</var> as well as <var>blobValue</var> is due to a limitation of th=
e editing software used to write the XMLHttpRequest Standard. </p>
   <p>The <dfn class=3D"idl-code" data-dfn-for=3D"FormData" data-dfn-type=
=3D"method" data-export=3D"" id=3D"dom-formdata-delete"><code>delete(<var>n=
ame</var>)</code><a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org=
/#dom-formdata-delete"></a></dfn> method, when invoked, must remove all <a =
data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#concept-formdat=
a-entry">entries</a> whose <a data-link-type=3D"dfn" href=3D"https://xhr.sp=
ec.whatwg.org/#concept-formdata-entry-name">name</a> is <var>name</var>. </=
p>
   <p>The <dfn class=3D"idl-code" data-dfn-for=3D"FormData" data-dfn-type=
=3D"method" data-export=3D"" id=3D"dom-formdata-get"><code>get(<var>name</v=
ar>)</code><a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#dom-=
formdata-get"></a></dfn> method, when
invoked, must return the <a data-link-type=3D"dfn" href=3D"https://xhr.spec=
.whatwg.org/#concept-formdata-entry-value">value</a> of the first <a data-l=
ink-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#concept-formdata-entr=
y">entry</a> whose <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatw=
g.org/#concept-formdata-entry-name">name</a> is <var>name</var>, and null
otherwise. </p>
   <p>The <dfn class=3D"idl-code" data-dfn-for=3D"FormData" data-dfn-type=
=3D"method" data-export=3D"" id=3D"dom-formdata-getall"><code>getAll(<var>n=
ame</var>)</code><a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org=
/#dom-formdata-getall"></a></dfn> method,
when invoked, must return the <a data-link-type=3D"dfn" href=3D"https://xhr=
.spec.whatwg.org/#concept-formdata-entry-value">values</a> of
all <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#concept-=
formdata-entry">entries</a> whose <a data-link-type=3D"dfn" href=3D"https:/=
/xhr.spec.whatwg.org/#concept-formdata-entry-name">name</a> is <var>name</v=
ar>, in list order, and
the empty sequence otherwise. </p>
   <p>The <dfn class=3D"idl-code" data-dfn-for=3D"FormData" data-dfn-type=
=3D"method" data-export=3D"" id=3D"dom-formdata-has"><code>has(<var>name</v=
ar>)</code><a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#dom-=
formdata-has"></a></dfn> method, when
invoked, must return true if there is an <a data-link-type=3D"dfn" href=3D"=
https://xhr.spec.whatwg.org/#concept-formdata-entry">entry</a> whose <a dat=
a-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#concept-formdata-e=
ntry-name">name</a> is <var>name</var>, and false
otherwise. </p>
   <p>The <dfn class=3D"idl-code" data-dfn-for=3D"FormData" data-dfn-type=
=3D"method" data-export=3D"" id=3D"dom-formdata-set"><code>set(<var>name</v=
ar>, <var>value</var>)</code><a class=3D"self-link" href=3D"https://xhr.spe=
c.whatwg.org/#dom-formdata-set"></a></dfn> and <dfn class=3D"idl-code" data=
-dfn-for=3D"FormData" data-dfn-type=3D"method" data-export=3D"" data-lt=3D"=
set(name, blobValue, filename)|set(name, blobValue)" id=3D"dom-formdata-set=
-blob"><code>set(<var>name</var>, <var>blobValue</var>, <var>filename</var>=
)</code><a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#dom-for=
mdata-set-blob"></a></dfn> methods, when invoked, must run these steps: </p=
>
   <ol>
    <li>
     <p>Let <var>value</var> be <var>value</var> if given, and <var>blobVal=
ue</var> otherwise. </p>
    </li><li>
     <p>Let <var>entry</var> be the result of <a data-link-type=3D"dfn" hre=
f=3D"https://xhr.spec.whatwg.org/#create-an-entry">creating an entry</a> wi=
th <var>name</var>, <var>value</var>, and <var>filename</var> if given. </p=
>
    </li><li>
     <p>If there are any <a data-link-type=3D"dfn" href=3D"https://xhr.spec=
.whatwg.org/#concept-formdata-entry">entries</a> in <a data-link-type=3D"df=
n" href=3D"https://dom.spec.whatwg.org/#context-object">context object</a>=
=E2=80=99s list of <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatw=
g.org/#concept-formdata-entry">entries</a> whose <a data-link-type=3D"dfn" =
href=3D"https://xhr.spec.whatwg.org/#concept-formdata-entry-name">name</a> =
is <var>name</var>, then replace the first such <a data-link-type=3D"dfn" h=
ref=3D"https://xhr.spec.whatwg.org/#concept-formdata-entry">entry</a> with =
<var>entry</var> and remove the others. </p>
    </li><li>
     <p>Otherwise, append <var>entry</var> to <a data-link-type=3D"dfn" hre=
f=3D"https://dom.spec.whatwg.org/#context-object">context object</a>=E2=80=
=99s
 list of <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#con=
cept-formdata-entry">entries</a>. </p>
   </li></ol>
   <p class=3D"note" role=3D"note">The reason there is an argument named <v=
ar>value</var> as well as <var>blobValue</var> is due to a limitation of th=
e editing software used to write the XMLHttpRequest Standard. </p>
   <p>The <a data-link-type=3D"dfn" href=3D"https://heycam.github.io/webidl=
/#dfn-value-pairs-to-iterate-over">value pairs to iterate over</a> are the =
<a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.org/#concept-form=
data-entry">entries</a> with the key being the <a data-link-type=3D"dfn" hr=
ef=3D"https://xhr.spec.whatwg.org/#concept-formdata-entry-name">name</a> an=
d the value the <a data-link-type=3D"dfn" href=3D"https://xhr.spec.whatwg.o=
rg/#concept-formdata-entry-value">value</a>. </p>
   <h2 class=3D"heading settled" data-level=3D"6" id=3D"interface-progresse=
vent"><span class=3D"secno">6. </span><span class=3D"content">Interface <co=
de class=3D"idl"><a data-link-type=3D"idl" href=3D"https://xhr.spec.whatwg.=
org/#progressevent">ProgressEvent</a></code></span><a class=3D"self-link" h=
ref=3D"https://xhr.spec.whatwg.org/#interface-progressevent"></a></h2>
<pre class=3D"idl highlight def">[<dfn class=3D"nv idl-code" data-dfn-for=
=3D"ProgressEvent" data-dfn-type=3D"constructor" data-export=3D"" data-lt=
=3D"ProgressEvent(type, eventInitDict)|ProgressEvent(type)" id=3D"dom-progr=
essevent-progressevent">Constructor<a class=3D"self-link" href=3D"https://x=
hr.spec.whatwg.org/#dom-progressevent-progressevent"></a></dfn>(<a class=3D=
"n idl-code" data-link-type=3D"interface" href=3D"https://heycam.github.io/=
webidl/#idl-DOMString"><span class=3D"kt">DOMString</span></a> <dfn class=
=3D"nv idl-code" data-dfn-for=3D"ProgressEvent/ProgressEvent(type, eventIni=
tDict)" data-dfn-type=3D"argument" data-export=3D"" id=3D"dom-progressevent=
-progressevent-type-eventinitdict-type">type<a class=3D"self-link" href=3D"=
https://xhr.spec.whatwg.org/#dom-progressevent-progressevent-type-eventinit=
dict-type"></a></dfn>, <span class=3D"kt">optional</span> <a class=3D"n" da=
ta-link-type=3D"idl-name" href=3D"https://xhr.spec.whatwg.org/#progresseven=
tinit">ProgressEventInit</a> <dfn class=3D"nv idl-code" data-dfn-for=3D"Pro=
gressEvent/ProgressEvent(type, eventInitDict)" data-dfn-type=3D"argument" d=
ata-export=3D"" id=3D"dom-progressevent-progressevent-type-eventinitdict-ev=
entinitdict">eventInitDict<a class=3D"self-link" href=3D"https://xhr.spec.w=
hatwg.org/#dom-progressevent-progressevent-type-eventinitdict-eventinitdict=
"></a></dfn>),
 <a class=3D"nv idl-code" data-link-type=3D"extended-attribute" href=3D"htt=
ps://heycam.github.io/webidl/#Exposed">Exposed</a>=3D(<span class=3D"n">Win=
dow</span>,<span class=3D"n">DedicatedWorker</span>,<span class=3D"n">Share=
dWorker</span>)]
<span class=3D"kt">interface</span> <dfn class=3D"nv idl-code" data-dfn-typ=
e=3D"interface" data-export=3D"" id=3D"progressevent">ProgressEvent<a class=
=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#progressevent"></a></df=
n> : <a class=3D"n" data-link-type=3D"idl-name" href=3D"https://dom.spec.wh=
atwg.org/#event">Event</a> {
  <span class=3D"kt">readonly</span> <span class=3D"kt">attribute</span> <a=
 class=3D"n idl-code" data-link-type=3D"interface" href=3D"https://heycam.g=
ithub.io/webidl/#idl-boolean"><span class=3D"kt">boolean</span></a> <a clas=
s=3D"nv idl-code" data-link-type=3D"attribute" data-readonly=3D"" data-type=
=3D"boolean" href=3D"https://xhr.spec.whatwg.org/#dom-progressevent-lengthc=
omputable">lengthComputable</a>;
  <span class=3D"kt">readonly</span> <span class=3D"kt">attribute</span> <a=
 class=3D"n idl-code" data-link-type=3D"interface" href=3D"https://heycam.g=
ithub.io/webidl/#idl-unsigned-long-long"><span class=3D"kt">unsigned</span>=
 <span class=3D"kt">long</span> <span class=3D"kt">long</span></a> <a class=
=3D"nv idl-code" data-link-type=3D"attribute" data-readonly=3D"" data-type=
=3D"unsigned long long" href=3D"https://xhr.spec.whatwg.org/#dom-progressev=
ent-loaded">loaded</a>;
  <span class=3D"kt">readonly</span> <span class=3D"kt">attribute</span> <a=
 class=3D"n idl-code" data-link-type=3D"interface" href=3D"https://heycam.g=
ithub.io/webidl/#idl-unsigned-long-long"><span class=3D"kt">unsigned</span>=
 <span class=3D"kt">long</span> <span class=3D"kt">long</span></a> <a class=
=3D"nv idl-code" data-link-type=3D"attribute" data-readonly=3D"" data-type=
=3D"unsigned long long" href=3D"https://xhr.spec.whatwg.org/#dom-progressev=
ent-total">total</a>;
};

<span class=3D"kt">dictionary</span> <dfn class=3D"nv idl-code" data-dfn-ty=
pe=3D"dictionary" data-export=3D"" id=3D"progresseventinit">ProgressEventIn=
it<a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#progressevent=
init"></a></dfn> : <a class=3D"n" data-link-type=3D"idl-name" href=3D"https=
://dom.spec.whatwg.org/#dictdef-eventinit">EventInit</a> {
  <a class=3D"n idl-code" data-link-type=3D"interface" href=3D"https://heyc=
am.github.io/webidl/#idl-boolean"><span class=3D"kt">boolean</span></a> <df=
n class=3D"nv idl-code" data-default=3D"false" data-dfn-for=3D"ProgressEven=
tInit" data-dfn-type=3D"dict-member" data-export=3D"" data-type=3D"boolean =
" id=3D"dom-progresseventinit-lengthcomputable">lengthComputable<a class=3D=
"self-link" href=3D"https://xhr.spec.whatwg.org/#dom-progresseventinit-leng=
thcomputable"></a></dfn> =3D <span class=3D"kt">false</span>;
  <a class=3D"n idl-code" data-link-type=3D"interface" href=3D"https://heyc=
am.github.io/webidl/#idl-unsigned-long-long"><span class=3D"kt">unsigned</s=
pan> <span class=3D"kt">long</span> <span class=3D"kt">long</span></a> <dfn=
 class=3D"nv idl-code" data-default=3D"0" data-dfn-for=3D"ProgressEventInit=
" data-dfn-type=3D"dict-member" data-export=3D"" data-type=3D"unsigned long=
 long " id=3D"dom-progresseventinit-loaded">loaded<a class=3D"self-link" hr=
ef=3D"https://xhr.spec.whatwg.org/#dom-progresseventinit-loaded"></a></dfn>=
 =3D 0;
  <a class=3D"n idl-code" data-link-type=3D"interface" href=3D"https://heyc=
am.github.io/webidl/#idl-unsigned-long-long"><span class=3D"kt">unsigned</s=
pan> <span class=3D"kt">long</span> <span class=3D"kt">long</span></a> <dfn=
 class=3D"nv idl-code" data-default=3D"0" data-dfn-for=3D"ProgressEventInit=
" data-dfn-type=3D"dict-member" data-export=3D"" data-type=3D"unsigned long=
 long " id=3D"dom-progresseventinit-total">total<a class=3D"self-link" href=
=3D"https://xhr.spec.whatwg.org/#dom-progresseventinit-total"></a></dfn> =
=3D 0;
};</pre>
   <p><a data-link-type=3D"dfn" href=3D"https://dom.spec.whatwg.org/#concep=
t-event">Events</a> using the <code class=3D"idl"><a data-link-type=3D"idl"=
 href=3D"https://xhr.spec.whatwg.org/#progressevent">ProgressEvent</a></cod=
e> interface indicate some kind of progression. </p>
   <p>The <dfn class=3D"idl-code" data-dfn-for=3D"ProgressEvent" data-dfn-t=
ype=3D"attribute" data-export=3D"" id=3D"dom-progressevent-lengthcomputable=
"><code>lengthComputable</code><a class=3D"self-link" href=3D"https://xhr.s=
pec.whatwg.org/#dom-progressevent-lengthcomputable"></a></dfn>, <dfn class=
=3D"idl-code" data-dfn-for=3D"ProgressEvent" data-dfn-type=3D"attribute" da=
ta-export=3D"" id=3D"dom-progressevent-loaded"><code>loaded</code><a class=
=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#dom-progressevent-loade=
d"></a></dfn>, and <dfn class=3D"idl-code" data-dfn-for=3D"ProgressEvent" d=
ata-dfn-type=3D"attribute" data-export=3D"" id=3D"dom-progressevent-total">=
<code>total</code><a class=3D"self-link" href=3D"https://xhr.spec.whatwg.or=
g/#dom-progressevent-total"></a></dfn> attributes must return the value the=
y were initialized to. </p>
   <h3 class=3D"heading settled" data-level=3D"6.1" id=3D"firing-events-usi=
ng-the-progressevent-interface"><span class=3D"secno">6.1. </span><span cla=
ss=3D"content">Firing events using the <code class=3D"idl"><a data-link-typ=
e=3D"idl" href=3D"https://xhr.spec.whatwg.org/#progressevent">ProgressEvent=
</a></code> interface</span><a class=3D"self-link" href=3D"https://xhr.spec=
.whatwg.org/#firing-events-using-the-progressevent-interface"></a></h3>
   <p>To <dfn data-dfn-type=3D"dfn" data-noexport=3D"" id=3D"concept-event-=
fire-progress">fire a progress event<a class=3D"self-link" href=3D"https://=
xhr.spec.whatwg.org/#concept-event-fire-progress"></a></dfn> named <var>e</=
var> at <var>target</var>, given <var>transmitted</var> and <var>length</va=
r>, means to <a data-link-type=3D"dfn" href=3D"https://dom.spec.whatwg.org/=
#concept-event-fire">fire an event</a> named <var>e</var> at <var>target</v=
ar>, using <code class=3D"idl"><a data-link-type=3D"idl" href=3D"https://xh=
r.spec.whatwg.org/#progressevent">ProgressEvent</a></code>, with the <code =
class=3D"idl"><a data-link-type=3D"idl" href=3D"https://xhr.spec.whatwg.org=
/#dom-progressevent-loaded">loaded</a></code> attribute initialized to <var=
>transmitted</var>, and if <var>length</var> is not 0, with the <code class=
=3D"idl"><a data-link-type=3D"idl" href=3D"https://xhr.spec.whatwg.org/#dom=
-progressevent-lengthcomputable">lengthComputable</a></code> attribute init=
ialized to true and the <code class=3D"idl"><a data-link-type=3D"idl" href=
=3D"https://xhr.spec.whatwg.org/#dom-progressevent-total">total</a></code> =
attribute initialized to <var>length</var>. </p>
   <h3 class=3D"heading settled" data-level=3D"6.2" id=3D"suggested-names-f=
or-events-using-the-progressevent-interface"><span class=3D"secno">6.2. </s=
pan><span class=3D"content">Suggested names for events using the <code clas=
s=3D"idl"><a data-link-type=3D"idl" href=3D"https://xhr.spec.whatwg.org/#pr=
ogressevent">ProgressEvent</a></code> interface</span><a class=3D"self-link=
" href=3D"https://xhr.spec.whatwg.org/#suggested-names-for-events-using-the=
-progressevent-interface"></a></h3>
   <p><em>This section is non-normative.</em> </p>
   <p>The suggested <code class=3D"idl"><a data-link-type=3D"idl" href=3D"h=
ttps://dom.spec.whatwg.org/#dom-event-type">type</a></code> attribute value=
s for use with <a data-link-type=3D"dfn" href=3D"https://dom.spec.whatwg.or=
g/#concept-event">events</a> using the <code class=3D"idl"><a data-link-typ=
e=3D"idl" href=3D"https://xhr.spec.whatwg.org/#progressevent">ProgressEvent=
</a></code> interface are summarized in the table below.
Specification editors are free to tune the details to their specific
scenarios, though are strongly encouraged to discuss their usage with the
WHATWG community to ensure input from people familiar with the subject. </p=
>
   <table>
    <tbody>
     <tr>
      <th><code class=3D"idl"><a data-link-type=3D"idl" href=3D"https://dom=
.spec.whatwg.org/#dom-event-type">type</a></code> attribute value=20
      </th><th>Description=20
      </th><th>Times=20
      </th><th>When=20
     </th></tr><tr>
      <th><code>loadstart</code>=20
      </th><td>Progress has begun.=20
      </td><td>Once.=20
      </td><td>First.=20
     </td></tr><tr>
      <th><a class=3D"idl-code" data-link-type=3D"event" href=3D"https://xh=
r.spec.whatwg.org/#event-xhr-progress"><code>progress</code></a>=20
      </th><td>In progress.=20
      </td><td>Once or more.=20
      </td><td>After <code>loadstart</code> has been <a data-link-type=3D"d=
fn" href=3D"https://dom.spec.whatwg.org/#concept-event-dispatch">dispatched=
</a>.=20
     </td></tr><tr>
      <th><code>error</code>=20
      </th><td>Progression failed.=20
      </td><td rowspan=3D"4">Zero or once (mutually exclusive).=20
      </td><td rowspan=3D"4">After the last <a class=3D"idl-code" data-link=
-type=3D"event" href=3D"https://xhr.spec.whatwg.org/#event-xhr-progress"><c=
ode>progress</code></a> has
    been <a data-link-type=3D"dfn" href=3D"https://dom.spec.whatwg.org/#con=
cept-event-dispatch">dispatched</a>.=20
     </td></tr><tr>
      <th><code>abort</code>=20
      </th><td>Progression is terminated.=20
     </td></tr><tr>
      <th><code>timeout</code>=20
      </th><td>Progression is terminated due to preset time expiring.=20
     </td></tr><tr>
      <th><code>load</code>=20
      </th><td>Progression is successful.=20
     </td></tr><tr>
      <th><code>loadend</code>=20
      </th><td>Progress has stopped.=20
      </td><td>Once.=20
      </td><td>After one of <code>error</code>, <code>abort</code>, <code>t=
imeout</code> or <code>load</code> has been <a data-link-type=3D"dfn" href=
=3D"https://dom.spec.whatwg.org/#concept-event-dispatch">dispatched</a>.=20
   </td></tr></tbody></table>
   <p>The <code>error</code>, <code>abort</code>, <code>timeout</code>, and=
 <code>load</code> event types are mutually exclusive. </p>
   <p>Throughout the web platform the <code>error</code>, <code>abort</code=
>, <code>timeout</code> and <code>load</code> event types have
their <code class=3D"idl"><a data-link-type=3D"idl" href=3D"https://dom.spe=
c.whatwg.org/#dom-event-bubbles">bubbles</a></code> and <code class=3D"idl"=
><a data-link-type=3D"idl" href=3D"https://dom.spec.whatwg.org/#dom-event-c=
ancelable">cancelable</a></code> attributes initialized to false, so it is =
suggested that for consistency all <a data-link-type=3D"dfn" href=3D"https:=
//dom.spec.whatwg.org/#concept-event">events</a> using the <code class=3D"i=
dl"><a data-link-type=3D"idl" href=3D"https://xhr.spec.whatwg.org/#progress=
event">ProgressEvent</a></code> interface do the same. </p>
   <h3 class=3D"heading settled" data-level=3D"6.3" id=3D"security-consider=
ations"><span class=3D"secno">6.3. </span><span class=3D"content">Security =
Considerations</span><a class=3D"self-link" href=3D"https://xhr.spec.whatwg=
.org/#security-considerations"></a></h3>
   <p>For cross-origin requests some kind of opt-in, e.g. the <a data-link-=
type=3D"dfn" href=3D"https://fetch.spec.whatwg.org/#cors-protocol">CORS pro=
tocol</a> defined in the Fetch Standard, has to be
used before <a data-link-type=3D"dfn" href=3D"https://dom.spec.whatwg.org/#=
concept-event">events</a> using the <code class=3D"idl"><a data-link-type=
=3D"idl" href=3D"https://xhr.spec.whatwg.org/#progressevent">ProgressEvent<=
/a></code> interface are <a data-link-type=3D"dfn" href=3D"https://dom.spec=
.whatwg.org/#concept-event-dispatch">dispatched</a> as information (e.g. si=
ze) would be revealed that cannot be obtained
otherwise. <a data-link-type=3D"biblio" href=3D"https://xhr.spec.whatwg.org=
/#biblio-fetch">[FETCH]</a> </p>
   <h3 class=3D"heading settled" data-level=3D"6.4" id=3D"example"><span cl=
ass=3D"secno">6.4. </span><span class=3D"content">Example</span><a class=3D=
"self-link" href=3D"https://xhr.spec.whatwg.org/#example"></a></h3>
   <div class=3D"example" id=3D"example-progress-events">
    <a class=3D"self-link" href=3D"https://xhr.spec.whatwg.org/#example-pro=
gress-events"></a>=20
    <p>In this example <code class=3D"idl"><a data-link-type=3D"idl" href=
=3D"https://xhr.spec.whatwg.org/#xmlhttprequest">XMLHttpRequest</a></code>,=
 combined with concepts
 defined in the sections before, and the HTML <code><a data-link-type=3D"el=
ement" href=3D"https://html.spec.whatwg.org/multipage/forms.html#the-progre=
ss-element">progress</a></code> element are used together to
 display the process of <a data-link-type=3D"dfn" href=3D"https://fetch.spe=
c.whatwg.org/#concept-fetch">fetching</a> a resource. </p>
<pre>&lt;!DOCTYPE html&gt;
&lt;title&gt;Waiting for Magical Unicorns&lt;/title&gt;
&lt;progress id=3Dp&gt;&lt;/progress&gt;
&lt;script&gt;
  var progressBar =3D document.getElementById("p"),
      client =3D new XMLHttpRequest()
  client.open("GET", "magical-unicorns")
  client.onprogress =3D function(pe) {
    if(pe.lengthComputable) {
      progressBar.max =3D pe.total
      progressBar.value =3D pe.loaded
    }
  }
  client.onloadend =3D function(pe) {
    progressBar.value =3D pe.loaded
  }
  client.send()
&lt;/script&gt;</pre>
    <p>Fully working code would of course be more elaborate and deal with m=
ore
 scenarios, such as network errors or the end user terminating the request.=
 </p>
   </div>
   <div data-fill-with=3D"references">
    <h2 class=3D"no-num no-ref heading settled" id=3D"references"><span cla=
ss=3D"content">References</span><a class=3D"self-link" href=3D"https://xhr.=
spec.whatwg.org/#references"></a></h2>
    <h3 class=3D"no-num no-ref heading settled" id=3D"normative"><span clas=
s=3D"content">Normative References</span><a class=3D"self-link" href=3D"htt=
ps://xhr.spec.whatwg.org/#normative"></a></h3>
    <dl>
     <dt id=3D"biblio-cookies">[COOKIES]
     </dt><dd>A. Barth. <a href=3D"https://tools.ietf.org/html/rfc6265">HTT=
P State Management Mechanism</a>. April 2011. Proposed Standard. URL: <a hr=
ef=3D"https://tools.ietf.org/html/rfc6265">https://tools.ietf.org/html/rfc6=
265</a>
     </dd><dt id=3D"biblio-dom">[DOM]
     </dt><dd>Anne van Kesteren. <a href=3D"https://dom.spec.whatwg.org/">D=
OM Standard</a>. Living Standard. URL: <a href=3D"https://dom.spec.whatwg.o=
rg/">https://dom.spec.whatwg.org/</a>
     </dd><dt id=3D"biblio-domps">[DOMPS]
     </dt><dd>Travis Leithead. <a href=3D"https://www.w3.org/TR/DOM-Parsing=
/">DOM Parsing and Serialization</a>. URL: <a href=3D"https://www.w3.org/TR=
/DOM-Parsing/">https://www.w3.org/TR/DOM-Parsing/</a>
     </dd><dt id=3D"biblio-ecmascript">[ECMASCRIPT]
     </dt><dd><a href=3D"https://tc39.github.io/ecma262/">ECMAScript Langua=
ge Specification</a>. URL: <a href=3D"https://tc39.github.io/ecma262/">http=
s://tc39.github.io/ecma262/</a>
     </dd><dt id=3D"biblio-encoding">[ENCODING]
     </dt><dd>Anne van Kesteren. <a href=3D"https://encoding.spec.whatwg.or=
g/">Encoding Standard</a>. Living Standard. URL: <a href=3D"https://encodin=
g.spec.whatwg.org/">https://encoding.spec.whatwg.org/</a>
     </dd><dt id=3D"biblio-fetch">[FETCH]
     </dt><dd>Anne van Kesteren. <a href=3D"https://fetch.spec.whatwg.org/"=
>Fetch Standard</a>. Living Standard. URL: <a href=3D"https://fetch.spec.wh=
atwg.org/">https://fetch.spec.whatwg.org/</a>
     </dd><dt id=3D"biblio-fileapi">[FILEAPI]
     </dt><dd>Arun Ranganathan; Jonas Sicking. <a href=3D"https://www.w3.or=
g/TR/FileAPI/">File API</a>. URL: <a href=3D"https://www.w3.org/TR/FileAPI/=
">https://www.w3.org/TR/FileAPI/</a>
     </dd><dt id=3D"biblio-html">[HTML]
     </dt><dd>Anne van Kesteren; et al. <a href=3D"https://html.spec.whatwg=
.org/multipage/">HTML Standard</a>. Living Standard. URL: <a href=3D"https:=
//html.spec.whatwg.org/multipage/">https://html.spec.whatwg.org/multipage/<=
/a>
     </dd><dt id=3D"biblio-http">[HTTP]
     </dt><dd>R. Fielding, Ed.; J. Reschke, Ed.. <a href=3D"https://tools.i=
etf.org/html/rfc7230">Hypertext Transfer Protocol (HTTP/1.1): Message Synta=
x and Routing</a>. June 2014. Proposed Standard. URL: <a href=3D"https://to=
ols.ietf.org/html/rfc7230">https://tools.ietf.org/html/rfc7230</a>
     </dd><dt id=3D"biblio-infra">[INFRA]
     </dt><dd>Anne van Kesteren; Domenic Denicola. <a href=3D"https://infra=
.spec.whatwg.org/">Infra Standard</a>. Living Standard. URL: <a href=3D"htt=
ps://infra.spec.whatwg.org/">https://infra.spec.whatwg.org/</a>
     </dd><dt id=3D"biblio-mimesniff">[MIMESNIFF]
     </dt><dd>Gordon P. Hemsley. <a href=3D"https://mimesniff.spec.whatwg.o=
rg/">MIME Sniffing Standard</a>. Living Standard. URL: <a href=3D"https://m=
imesniff.spec.whatwg.org/">https://mimesniff.spec.whatwg.org/</a>
     </dd><dt id=3D"biblio-rfc2119">[RFC2119]
     </dt><dd>S. Bradner. <a href=3D"https://tools.ietf.org/html/rfc2119">K=
ey words for use in RFCs to Indicate Requirement Levels</a>. March 1997. Be=
st Current Practice. URL: <a href=3D"https://tools.ietf.org/html/rfc2119">h=
ttps://tools.ietf.org/html/rfc2119</a>
     </dd><dt id=3D"biblio-url">[URL]
     </dt><dd>Anne van Kesteren. <a href=3D"https://url.spec.whatwg.org/">U=
RL Standard</a>. Living Standard. URL: <a href=3D"https://url.spec.whatwg.o=
rg/">https://url.spec.whatwg.org/</a>
     </dd><dt id=3D"biblio-webidl">[WEBIDL]
     </dt><dd>Cameron McCormack; Boris Zbarsky; Tobie Langel. <a href=3D"ht=
tps://www.w3.org/TR/WebIDL-1/">Web IDL</a>. URL: <a href=3D"https://www.w3.=
org/TR/WebIDL-1/">https://www.w3.org/TR/WebIDL-1/</a>
     </dd><dt id=3D"biblio-xml">[XML]
     </dt><dd>Tim Bray; et al. <a href=3D"https://www.w3.org/TR/xml">Extens=
ible Markup Language (XML) 1.0 (Fifth Edition)</a>. 26 November 2008. REC. =
URL: <a href=3D"https://www.w3.org/TR/xml">https://www.w3.org/TR/xml</a>
     </dd><dt id=3D"biblio-xmlns">[XMLNS]
     </dt><dd>Tim Bray; et al. <a href=3D"https://www.w3.org/TR/xml-names">=
Namespaces in XML 1.0 (Third Edition)</a>. 8 December 2009. REC. URL: <a hr=
ef=3D"https://www.w3.org/TR/xml-names">https://www.w3.org/TR/xml-names</a>
    </dd></dl>
   </div>
   <h2 class=3D"no-num heading settled" id=3D"acknowledgments"><span class=
=3D"content">Acknowledgments</span><a class=3D"self-link" href=3D"https://x=
hr.spec.whatwg.org/#acknowledgments"></a></h2>
   <p>Thanks to
Addison Phillips,
Adrian Bateman,
Ahmed Kamel,
Alan Thomas,
Alex Hopmann,
Alex Vincent,
Alexey Proskuryakov,
Ali Alabbas,
Andrea Marchesini,
Asbj=C3=B8rn Ulsberg,
Bertrand Guay-Paquet,
Bj=C3=B6rn H=C3=B6hrmann,
Boris Zbarsky,
Caitlin Potter,
Cameron McCormack,
Chris Marrin,
Christophe Jolif,
Charles McCathieNevile,
Dan Winship,
David Andersson,
David Flanagan,
David H=C3=A5s=C3=A4ther,
David Levin,
Dean Jackson,
Denis Sureau,
Domenic Denicola,
Dominik R=C3=B6ttsches,
Doug Schepers,
Douglas Livingstone,
Elliott Sprehn,
Elliotte Harold,
Eric Lawrence,
Eric Uhrhane,
Erik Arvidsson,
Erik Dahlstr=C3=B6m,
Feras Moussa,
Geoffrey Sneddon,
Gideon Cohn,
Glenn Adams,
Gorm Haug Eriksen,
H=C3=A5kon Wium Lie,
Hallvord R. M. Steen,
Henri Sivonen,
Hiroshige Hayashizaki,
Huub Schaeks,
Ian Davis,
Ian Hickson,
Ivan Herman,
Jake Archibald,
Jared Jacobs,
Jarred Nicholls,
Jeff Walden,
Jens Lindstr=C3=B6m,
Jim Deegan,
Jim Ley,
Joe Farro,
Jonas Sicking,
Julian Reschke,
=EC=86=A1=EC=A0=95=EA=B8=B0 (Jungkee Song),
=E5=91=82=E5=BA=B7=E8=B1=AA (Kang-Hao Lu),
Karl Dubost,
Keith Yeung,
Lachlan Hunt,
Maciej Stachowiak,
Magnus Kristiansen,
Manish Goregaokar,
Marc Hadley,
Marcos Caceres,
Mark Baker,
Mark Birbeck,
Mark Nottingham,
Mark S. Miller,
Martin Hassman,
Mohamed Zergaoui,
Ms2ger,
Odin H=C3=B8rthe Omdal,
Olli Pettay,
Pawel Glowacki,
Peter Michaux,
Philip J=C3=A4genstedt,
Philip Taylor,
Robin Berjon,
Rune <span title=3D"Fabulous">F.</span> Halvorsen,
Ruud Steltenpool,
Sergiu Dumitriu,
Shivakumar Jagalur Matt,
Sigbj=C3=B8rn Finne,
Simon Pieters,
Stewart Brodie,
Sunava Dutta,
Takeshi Kurosawa,
Takeshi Yoshino,
Thomas Roessler,
Thomas Wisniewski,
Tom Magliery,
Travis Leithead,
triple-underscore,
Yehuda Katz,
Youenn Fablet, and
Zhenbin Xu
for their contributions to this standard. </p>
   <p>Special thanks to the Microsoft employees who first implemented the <=
code>XMLHttpRequest</code> interface, which was first widely deployed by th=
e
Windows Internet Explorer browser. </p>
   <p>Special thanks to Ian Hickson for drafting an initial version of this=
 specification in
the HTML Standard (then Web Applications 1.0). <a data-link-type=3D"biblio"=
 href=3D"https://xhr.spec.whatwg.org/#biblio-html">[HTML]</a> </p>
   <p>Special thanks to the W3C SVG WG for drafting the original <code clas=
s=3D"idl"><a data-link-type=3D"idl" href=3D"https://xhr.spec.whatwg.org/#pr=
ogressevent">ProgressEvent</a></code> class as part of the <a href=3D"https=
://www.w3.org/TR/2008/REC-SVGTiny12-20081222/svgudom.html">SVG Micro DOM</a=
>. </p>
   <p>This standard is written by <a href=3D"https://annevankesteren.nl/" l=
ang=3D"nl">Anne van Kesteren</a> (<a href=3D"https://www.mozilla.org/">Mozi=
lla</a>, <a href=3D"mailto:annevk@annevk.nl">annevk@annevk.nl</a>). </p>
   <p>Per <a href=3D"https://creativecommons.org/publicdomain/zero/1.0/" re=
l=3D"license">CC0</a>, to
the extent possible under law, the editor has waived all copyright and rela=
ted or
neighboring rights to this work. </p>
  </main>
  <h2 class=3D"no-num no-ref heading settled" id=3D"index"><span class=3D"c=
ontent">Index</span><a class=3D"self-link" href=3D"https://xhr.spec.whatwg.=
org/#index"></a></h2>
  <h3 class=3D"no-num no-ref heading settled" id=3D"index-defined-here"><sp=
an class=3D"content">Terms defined by this specification</span><a class=3D"=
self-link" href=3D"https://xhr.spec.whatwg.org/#index-defined-here"></a></h=
3>
  <ul class=3D"index">
   <li><a href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequestresponsety=
pe">""</a><span>, in =C2=A74</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-abor=
t">abort()</a><span>, in =C2=A74.5.7</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#event-xhr-abort">abort<=
/a><span>, in =C2=A74.7</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#dom-formdata-append-blo=
b">append(name, blobValue)</a><span>, in =C2=A75</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#dom-formdata-append-blo=
b">append(name, blobValue, filename)</a><span>, in =C2=A75</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#dom-formdata-append">ap=
pend(name, value)</a><span>, in =C2=A75</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequestrespo=
nsetype-arraybuffer">"arraybuffer"</a><span>, in =C2=A74</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequestrespo=
nsetype-arraybuffer">arraybuffer</a><span>, in =C2=A74</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#arraybuffer-response">a=
rraybuffer response</a><span>, in =C2=A74.6.6</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#author-request-headers"=
>author request headers</a><span>, in =C2=A74.5</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequestrespo=
nsetype-blob">blob</a><span>, in =C2=A74</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequestrespo=
nsetype-blob">"blob"</a><span>, in =C2=A74</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#blob-response">blob res=
ponse</a><span>, in =C2=A74.6.6</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#create-an-entry">create=
 an entry</a><span>, in =C2=A75</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#dom-formdata-delete">de=
lete(name)</a><span>, in =C2=A75</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequestrespo=
nsetype-document">"document"</a><span>, in =C2=A74</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequestrespo=
nsetype-document">document</a><span>, in =C2=A74</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#document-response">docu=
ment response</a><span>, in =C2=A74.6.6</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-done=
">DONE</a><span>, in =C2=A74.4</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#concept-formdata-entry"=
>entries</a><span>, in =C2=A75</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#concept-formdata-entry"=
>entry</a><span>, in =C2=A75</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#event-xhr-error">error<=
/a><span>, in =C2=A74.7</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#final-charset">Final ch=
arset</a><span>, in =C2=A74.6.6</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#final-mime-type">Final =
MIME type</a><span>, in =C2=A74.6.6</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#concept-event-fire-prog=
ress">fire a progress event</a><span>, in =C2=A76.1</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#formdata">FormData</a><=
span>, in =C2=A75</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#formdataentryvalue">For=
mDataEntryValue</a><span>, in =C2=A75</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#dom-formdata">FormData(=
form)</a><span>, in =C2=A75</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#dom-formdata-getall">ge=
tAll(name)</a><span>, in =C2=A75</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-geta=
llresponseheaders">getAllResponseHeaders()</a><span>, in =C2=A74.6.5</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#dom-formdata-get">get(n=
ame)</a><span>, in =C2=A75</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-getr=
esponseheader">getResponseHeader(name)</a><span>, in =C2=A74.6.4</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#handle-errors">handle e=
rrors</a><span>, in =C2=A74.5.6</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#handle-response-end-of-=
body">handle response end-of-body</a><span>, in =C2=A74.5.6</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#dom-formdata-has">has(n=
ame)</a><span>, in =C2=A75</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-head=
ers_received">HEADERS_RECEIVED</a><span>, in =C2=A74.4</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequestrespo=
nsetype-json">json</a><span>, in =C2=A74</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequestrespo=
nsetype-json">"json"</a><span>, in =C2=A74</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#json-response">JSON res=
ponse</a><span>, in =C2=A74.6.6</span>
   </li><li>
    lengthComputable
    <ul>
     <li><a href=3D"https://xhr.spec.whatwg.org/#dom-progresseventinit-leng=
thcomputable">dict-member for ProgressEventInit</a><span>, in =C2=A76</span=
>
     </li><li><a href=3D"https://xhr.spec.whatwg.org/#dom-progressevent-len=
gthcomputable">attribute for ProgressEvent</a><span>, in =C2=A76</span>
    </li></ul>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#event-xhr-load">load</a=
><span>, in =C2=A74.7</span>
   </li><li>
    loaded
    <ul>
     <li><a href=3D"https://xhr.spec.whatwg.org/#dom-progresseventinit-load=
ed">dict-member for ProgressEventInit</a><span>, in =C2=A76</span>
     </li><li><a href=3D"https://xhr.spec.whatwg.org/#dom-progressevent-loa=
ded">attribute for ProgressEvent</a><span>, in =C2=A76</span>
    </li></ul>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#event-xhr-loadend">load=
end</a><span>, in =C2=A74.7</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-load=
ing">LOADING</a><span>, in =C2=A74.4</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#event-xhr-loadstart">lo=
adstart</a><span>, in =C2=A74.7</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#concept-formdata-entry-=
name">name</a><span>, in =C2=A75</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#handler-xhr-onabort">on=
abort</a><span>, in =C2=A74.3</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#handler-xhr-onerror">on=
error</a><span>, in =C2=A74.3</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#handler-xhr-onload">onl=
oad</a><span>, in =C2=A74.3</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#handler-xhr-onloadend">=
onloadend</a><span>, in =C2=A74.3</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#handler-xhr-onloadstart=
">onloadstart</a><span>, in =C2=A74.3</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#handler-xhr-onprogress"=
>onprogress</a><span>, in =C2=A74.3</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#handler-xhr-onreadystat=
echange">onreadystatechange</a><span>, in =C2=A74.3</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#handler-xhr-ontimeout">=
ontimeout</a><span>, in =C2=A74.3</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-open=
ed">OPENED</a><span>, in =C2=A74.4</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-open=
">open(method, url)</a><span>, in =C2=A74.5.1</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-open=
-method-url-async-username-password">open(method, url, async)</a><span>, in=
 =C2=A74.5.1</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-open=
-method-url-async-username-password">open(method, url, async, username)</a>=
<span>, in =C2=A74.5.1</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-open=
-method-url-async-username-password">open(method, url, async, username, pas=
sword)</a><span>, in =C2=A74.5.1</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#override-charset">overr=
ide charset</a><span>, in =C2=A74.6.6</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#override-mime-type">ove=
rride MIME type</a><span>, in =C2=A74.6.6</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-over=
ridemimetype">overrideMimeType(mime)</a><span>, in =C2=A74.6.7</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#event-xhr-progress">pro=
gress</a><span>, in =C2=A74.7</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#progressevent">Progress=
Event</a><span>, in =C2=A76</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#progresseventinit">Prog=
ressEventInit</a><span>, in =C2=A76</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#dom-progressevent-progr=
essevent">ProgressEvent(type)</a><span>, in =C2=A76</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#dom-progressevent-progr=
essevent">ProgressEvent(type, eventInitDict)</a><span>, in =C2=A76</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-read=
ystate">readyState</a><span>, in =C2=A74.4</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#event-xhr-readystatecha=
nge">readystatechange</a><span>, in =C2=A74.7</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#received-bytes">receive=
d bytes</a><span>, in =C2=A74.6</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#request-body">request b=
ody</a><span>, in =C2=A74.5</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#request-error-steps">re=
quest error steps</a><span>, in =C2=A74.5.6</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#request-method">request=
 method</a><span>, in =C2=A74.5</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#request-url">request UR=
L</a><span>, in =C2=A74.5</span>
   </li><li>
    response
    <ul>
     <li><a href=3D"https://xhr.spec.whatwg.org/#response">definition of</a=
><span>, in =C2=A74.6</span>
     </li><li><a href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-re=
sponse">attribute for XMLHttpRequest</a><span>, in =C2=A74.6.9</span>
    </li></ul>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#response-charset">respo=
nse charset</a><span>, in =C2=A74.6.6</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#response-mime-type">res=
ponse MIME type</a><span>, in =C2=A74.6.6</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#response-object">respon=
se object</a><span>, in =C2=A74.6.6</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-resp=
onsetext">responseText</a><span>, in =C2=A74.6.10</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-resp=
onsetype">responseType</a><span>, in =C2=A74.6.8</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-resp=
onseurl">responseURL</a><span>, in =C2=A74.6.1</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-resp=
onsexml">responseXML</a><span>, in =C2=A74.6.11</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-send=
">send()</a><span>, in =C2=A74.5.6</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-send=
">send(body)</a><span>, in =C2=A74.5.6</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#send-flag">send() flag<=
/a><span>, in =C2=A74</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#dom-formdata-set-blob">=
set(name, blobValue)</a><span>, in =C2=A75</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#dom-formdata-set-blob">=
set(name, blobValue, filename)</a><span>, in =C2=A75</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#dom-formdata-set">set(n=
ame, value)</a><span>, in =C2=A75</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-setr=
equestheader">setRequestHeader(name, value)</a><span>, in =C2=A74.5.2</span=
>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#concept-xmlhttprequest-=
state">state</a><span>, in =C2=A74</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-stat=
us">status</a><span>, in =C2=A74.6.2</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-stat=
ustext">statusText</a><span>, in =C2=A74.6.3</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#stop-timeout-flag">stop=
 timeout flag</a><span>, in =C2=A74</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#synchronous-flag">synch=
ronous flag</a><span>, in =C2=A74.5</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#terminate-the-request">=
terminate the request</a><span>, in =C2=A74.5</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequestrespo=
nsetype-text">text</a><span>, in =C2=A74</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequestrespo=
nsetype-text">"text"</a><span>, in =C2=A74</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#text-response">text res=
ponse</a><span>, in =C2=A74.6.6</span>
   </li><li>
    timeout
    <ul>
     <li><a href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-timeout=
">attribute for XMLHttpRequest</a><span>, in =C2=A74.5.3</span>
     </li><li><a href=3D"https://xhr.spec.whatwg.org/#event-xhr-timeout">ev=
ent for XMLHttpRequest</a><span>, in =C2=A74.7</span>
    </li></ul>
   </li><li>
    total
    <ul>
     <li><a href=3D"https://xhr.spec.whatwg.org/#dom-progresseventinit-tota=
l">dict-member for ProgressEventInit</a><span>, in =C2=A76</span>
     </li><li><a href=3D"https://xhr.spec.whatwg.org/#dom-progressevent-tot=
al">attribute for ProgressEvent</a><span>, in =C2=A76</span>
    </li></ul>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-unse=
nt">UNSENT</a><span>, in =C2=A74.4</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-uplo=
ad">upload</a><span>, in =C2=A74.5.5</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#upload-complete-flag">u=
pload complete flag</a><span>, in =C2=A74.5</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#upload-listener-flag">u=
pload listener flag</a><span>, in =C2=A74.5</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#user-credentials">user =
credentials</a><span>, in =C2=A73</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#concept-formdata-entry-=
value">value</a><span>, in =C2=A75</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-with=
credentials">withCredentials</a><span>, in =C2=A74.5.4</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest">XML=
HttpRequest()</a><span>, in =C2=A74.1</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#xmlhttprequest">XMLHttp=
Request</a><span>, in =C2=A74</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#xmlhttprequesteventtarg=
et">XMLHttpRequestEventTarget</a><span>, in =C2=A74</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#xmlhttprequestresponset=
ype">XMLHttpRequestResponseType</a><span>, in =C2=A74</span>
   </li><li><a href=3D"https://xhr.spec.whatwg.org/#xmlhttprequestupload">X=
MLHttpRequestUpload</a><span>, in =C2=A74</span>
  </li></ul>
  <h3 class=3D"no-num no-ref heading settled" id=3D"index-defined-elsewhere=
"><span class=3D"content">Terms defined by reference</span><a class=3D"self=
-link" href=3D"https://xhr.spec.whatwg.org/#index-defined-elsewhere"></a></=
h3>
  <ul class=3D"index">
   <li>
    <a data-link-type=3D"biblio">[DOM]</a> defines the following terms:
    <ul>
     <li><a href=3D"https://dom.spec.whatwg.org/#document">Document</a>
     </li><li><a href=3D"https://dom.spec.whatwg.org/#event">Event</a>
     </li><li><a href=3D"https://dom.spec.whatwg.org/#dictdef-eventinit">Ev=
entInit</a>
     </li><li><a href=3D"https://dom.spec.whatwg.org/#eventtarget">EventTar=
get</a>
     </li><li><a href=3D"https://dom.spec.whatwg.org/#dom-event-bubbles">bu=
bbles</a>
     </li><li><a href=3D"https://dom.spec.whatwg.org/#dom-event-cancelable"=
>cancelable</a>
     </li><li><a href=3D"https://dom.spec.whatwg.org/#concept-document-cont=
ent-type">content type</a>
     </li><li><a href=3D"https://dom.spec.whatwg.org/#context-object">conte=
xt object</a>
     </li><li><a href=3D"https://dom.spec.whatwg.org/#concept-event-dispatc=
h">dispatch</a>
     </li><li><a href=3D"https://dom.spec.whatwg.org/#concept-document">doc=
ument</a>
     </li><li><a href=3D"https://dom.spec.whatwg.org/#concept-document-enco=
ding">encoding</a>
     </li><li><a href=3D"https://dom.spec.whatwg.org/#concept-event">event<=
/a>
     </li><li><a href=3D"https://dom.spec.whatwg.org/#concept-event-listene=
r">event listener</a>
     </li><li><a href=3D"https://dom.spec.whatwg.org/#concept-event-fire">f=
ire an event</a>
     </li><li><a href=3D"https://dom.spec.whatwg.org/#html-document">html d=
ocument</a>
     </li><li><a href=3D"https://dom.spec.whatwg.org/#concept-document-orig=
in">origin</a>
     </li><li><a href=3D"https://dom.spec.whatwg.org/#dom-event-type">type<=
/a>
     </li><li><a href=3D"https://dom.spec.whatwg.org/#concept-document-url"=
>url</a>
    </li></ul>
   </li><li>
    <a data-link-type=3D"biblio">[DOMPS]</a> defines the following terms:
    <ul>
     <li><a href=3D"https://w3c.github.io/DOM-Parsing/#dfn-fragment-seriali=
zing-algorithm">fragment serializing algorithm</a>
    </li></ul>
   </li><li>
    <a data-link-type=3D"biblio">[ENCODING]</a> defines the following terms=
:
    <ul>
     <li><a href=3D"https://encoding.spec.whatwg.org/#decode">decode</a>
     </li><li><a href=3D"https://encoding.spec.whatwg.org/#utf-8">utf-8</a>
     </li><li><a href=3D"https://encoding.spec.whatwg.org/#utf-8-decode">ut=
f-8 decode</a>
     </li><li><a href=3D"https://encoding.spec.whatwg.org/#utf-8-encode">ut=
f-8 encode</a>
    </li></ul>
   </li><li>
    <a data-link-type=3D"biblio">[FETCH]</a> defines the following terms:
    <ul>
     <li><a href=3D"https://fetch.spec.whatwg.org/#bodyinit">BodyInit</a>
     </li><li><a href=3D"https://fetch.spec.whatwg.org/#concept-header-list=
-append">append</a>
     </li><li><a href=3D"https://fetch.spec.whatwg.org/#concept-request-bod=
y">body <small>(for request)</small></a>
     </li><li><a href=3D"https://fetch.spec.whatwg.org/#concept-response-bo=
dy">body <small>(for response)</small></a>
     </li><li><a href=3D"https://fetch.spec.whatwg.org/#byte-case-insensiti=
ve">byte-case-insensitive</a>
     </li><li><a href=3D"https://fetch.spec.whatwg.org/#concept-request-cli=
ent">client</a>
     </li><li><a href=3D"https://fetch.spec.whatwg.org/#concept-header-list=
-combine">combine</a>
     </li><li><a href=3D"https://fetch.spec.whatwg.org/#concept-header-valu=
e-combined">combined value</a>
     </li><li><a href=3D"https://fetch.spec.whatwg.org/#header-list-contain=
s">contains</a>
     </li><li><a href=3D"https://fetch.spec.whatwg.org/#cors-protocol">cors=
 protocol</a>
     </li><li><a href=3D"https://fetch.spec.whatwg.org/#concept-request-cre=
dentials-mode">credentials mode</a>
     </li><li><a href=3D"https://fetch.spec.whatwg.org/#header-list-contain=
s">does not contain</a>
     </li><li><a href=3D"https://fetch.spec.whatwg.org/#concept-bodyinit-ex=
tract">extract</a>
     </li><li><a href=3D"https://fetch.spec.whatwg.org/#concept-header-extr=
act-mime-type">extracting a mime type</a>
     </li><li><a href=3D"https://fetch.spec.whatwg.org/#concept-fetch">fetc=
h</a>
     </li><li><a href=3D"https://fetch.spec.whatwg.org/#forbidden-header-na=
me">forbidden header name</a>
     </li><li><a href=3D"https://fetch.spec.whatwg.org/#forbidden-method">f=
orbidden method</a>
     </li><li><a href=3D"https://fetch.spec.whatwg.org/#concept-get-reader"=
>get a reader</a>
     </li><li><a href=3D"https://fetch.spec.whatwg.org/#concept-header">hea=
der</a>
     </li><li><a href=3D"https://fetch.spec.whatwg.org/#concept-header-list=
">header list</a>
     </li><li><a href=3D"https://fetch.spec.whatwg.org/#concept-request-hea=
der-list">header list <small>(for request)</small></a>
     </li><li><a href=3D"https://fetch.spec.whatwg.org/#concept-response-he=
ader-list">header list <small>(for response)</small></a>
     </li><li><a href=3D"https://fetch.spec.whatwg.org/#concept-method">met=
hod</a>
     </li><li><a href=3D"https://fetch.spec.whatwg.org/#concept-request-met=
hod">method <small>(for request)</small></a>
     </li><li><a href=3D"https://fetch.spec.whatwg.org/#concept-request-mod=
e">mode</a>
     </li><li><a href=3D"https://fetch.spec.whatwg.org/#concept-header-name=
">name</a>
     </li><li><a href=3D"https://fetch.spec.whatwg.org/#concept-network-err=
or">network error</a>
     </li><li><a href=3D"https://fetch.spec.whatwg.org/#concept-header-valu=
e-normalize">normalize <small>(for header/value)</small></a>
     </li><li><a href=3D"https://fetch.spec.whatwg.org/#concept-method-norm=
alize">normalize <small>(for method)</small></a>
     </li><li><a href=3D"https://fetch.spec.whatwg.org/#http-origin">origin=
</a>
     </li><li><a href=3D"https://fetch.spec.whatwg.org/#process-request-bod=
y">process request body</a>
     </li><li><a href=3D"https://fetch.spec.whatwg.org/#process-request-end=
-of-body">process request end-of-body</a>
     </li><li><a href=3D"https://fetch.spec.whatwg.org/#process-response">p=
rocess response</a>
     </li><li><a href=3D"https://fetch.spec.whatwg.org/#concept-read-chunk-=
from-readablestream">read a chunk</a>
     </li><li><a href=3D"https://fetch.spec.whatwg.org/#concept-read-all-by=
tes-from-readablestream">read all bytes</a>
     </li><li><a href=3D"https://fetch.spec.whatwg.org/#concept-request">re=
quest</a>
     </li><li><a href=3D"https://fetch.spec.whatwg.org/#concept-header-list=
-sort-and-combine">sort and combine</a>
     </li><li><a href=3D"https://fetch.spec.whatwg.org/#concept-response-st=
atus">status</a>
     </li><li><a href=3D"https://fetch.spec.whatwg.org/#concept-response-st=
atus-message">status message</a>
     </li><li><a href=3D"https://fetch.spec.whatwg.org/#concept-body-stream=
">stream</a>
     </li><li><a href=3D"https://fetch.spec.whatwg.org/#synchronous-flag">s=
ynchronous flag</a>
     </li><li><a href=3D"https://fetch.spec.whatwg.org/#concept-fetch-termi=
nate">terminated</a>
     </li><li><a href=3D"https://fetch.spec.whatwg.org/#concept-response-te=
rmination-reason">termination reason</a>
     </li><li><a href=3D"https://fetch.spec.whatwg.org/#concept-body-total-=
bytes">total bytes</a>
     </li><li><a href=3D"https://fetch.spec.whatwg.org/#concept-body-transm=
itted">transmitted bytes</a>
     </li><li><a href=3D"https://fetch.spec.whatwg.org/#unsafe-request-flag=
">unsafe-request flag</a>
     </li><li><a href=3D"https://fetch.spec.whatwg.org/#concept-request-url=
">url <small>(for request)</small></a>
     </li><li><a href=3D"https://fetch.spec.whatwg.org/#concept-response-ur=
l">url <small>(for response)</small></a>
     </li><li><a href=3D"https://fetch.spec.whatwg.org/#use-cors-preflight-=
flag">use-cors-preflight flag</a>
     </li><li><a href=3D"https://fetch.spec.whatwg.org/#concept-request-use=
-url-credentials-flag">use-url-credentials flag</a>
     </li><li><a href=3D"https://fetch.spec.whatwg.org/#concept-header-valu=
e">value</a>
    </li></ul>
   </li><li>
    <a data-link-type=3D"biblio">[FILEAPI]</a> defines the following terms:
    <ul>
     <li><a href=3D"https://w3c.github.io/FileAPI/#dfn-Blob">Blob</a>
     </li><li><a href=3D"https://w3c.github.io/FileAPI/#dfn-file">File</a>
     </li><li><a href=3D"https://w3c.github.io/FileAPI/#dfn-name">name</a>
     </li><li><a href=3D"https://w3c.github.io/FileAPI/#dfn-type">type</a>
    </li></ul>
   </li><li>
    <a data-link-type=3D"biblio">[HTML]</a> defines the following terms:
    <ul>
     <li><a href=3D"https://html.spec.whatwg.org/multipage/webappapis.html#=
eventhandler">EventHandler</a>
     </li><li><a href=3D"https://html.spec.whatwg.org/multipage/forms.html#=
htmlformelement">HTMLFormElement</a>
     </li><li><a href=3D"https://html.spec.whatwg.org/multipage/browsers.ht=
ml#window">Window</a>
     </li><li><a href=3D"https://html.spec.whatwg.org/multipage/syntax.html=
#a-known-definite-encoding">a known definite encoding</a>
     </li><li><a href=3D"https://html.spec.whatwg.org/multipage/webappapis.=
html#api-base-url">api base url</a>
     </li><li><a href=3D"https://html.spec.whatwg.org/multipage/forms.html#=
constructing-the-form-data-set">constructing the form data set</a>
     </li><li><a href=3D"https://html.spec.whatwg.org/multipage/webappapis.=
html#current-global-object">current global object</a>
     </li><li><a href=3D"https://html.spec.whatwg.org/multipage/webappapis.=
html#event-handlers">event handler</a>
     </li><li><a href=3D"https://html.spec.whatwg.org/multipage/webappapis.=
html#event-handler-event-type">event handler event type</a>
     </li><li><a href=3D"https://html.spec.whatwg.org/multipage/browsers.ht=
ml#fully-active">fully active</a>
     </li><li><a href=3D"https://html.spec.whatwg.org/multipage/infrastruct=
ure.html#in-parallel">in parallel</a>
     </li><li><a href=3D"https://html.spec.whatwg.org/multipage/webappapis.=
html#networking-task-source">networking task source</a>
     </li><li><a href=3D"https://html.spec.whatwg.org/multipage/webappapis.=
html#concept-settings-object-origin">origin</a>
     </li><li><a href=3D"https://html.spec.whatwg.org/multipage/syntax.html=
#prescan-a-byte-stream-to-determine-its-encoding">prescan a byte stream to =
determine its encoding</a>
     </li><li><a href=3D"https://html.spec.whatwg.org/multipage/forms.html#=
the-progress-element">progress</a>
     </li><li><a href=3D"https://html.spec.whatwg.org/multipage/webappapis.=
html#queue-a-task">queue a task</a>
     </li><li><a href=3D"https://html.spec.whatwg.org/multipage/webappapis.=
html#relevant-settings-object">relevant settings object</a>
     </li><li><a href=3D"https://html.spec.whatwg.org/multipage/webappapis.=
html#responsible-document">responsible document</a>
     </li><li><a href=3D"https://html.spec.whatwg.org/multipage/browsers.ht=
ml#same-origin">same origin</a>
     </li><li><a href=3D"https://html.spec.whatwg.org/multipage/webappapis.=
html#concept-task">task</a>
     </li><li><a href=3D"https://html.spec.whatwg.org/multipage/xhtml.html#=
xml-parser">xml parser</a>
     </li><li><a href=3D"https://html.spec.whatwg.org/multipage/xhtml.html#=
xml-scripting-support-disabled">xml scripting support disabled</a>
    </li></ul>
   </li><li>
    <a data-link-type=3D"biblio">[INFRA]</a> defines the following terms:
    <ul>
     <li><a href=3D"https://infra.spec.whatwg.org/#list-iterate">for each</=
a>
    </li></ul>
   </li><li>
    <a data-link-type=3D"biblio">[MIMESNIFF]</a> defines the following term=
s:
    <ul>
     <li><a href=3D"https://mimesniff.spec.whatwg.org/#mime-type-portion">m=
ime type portion</a>
     </li><li><a href=3D"https://mimesniff.spec.whatwg.org/#parsable-mime-t=
ype">parsable mime type</a>
     </li><li><a href=3D"https://mimesniff.spec.whatwg.org/#valid-mime-type=
">valid mime type</a>
    </li></ul>
   </li><li>
    <a data-link-type=3D"biblio">[URL]</a> defines the following terms:
    <ul>
     <li><a href=3D"https://url.spec.whatwg.org/#concept-url-host">host</a>
     </li><li><a href=3D"https://url.spec.whatwg.org/#concept-url-password"=
>password</a>
     </li><li><a href=3D"https://url.spec.whatwg.org/#set-the-password">set=
 the password</a>
     </li><li><a href=3D"https://url.spec.whatwg.org/#set-the-username">set=
 the username</a>
     </li><li><a href=3D"https://url.spec.whatwg.org/#concept-url-parser">u=
rl parser</a>
     </li><li><a href=3D"https://url.spec.whatwg.org/#concept-url-serialize=
r">url serializer</a>
     </li><li><a href=3D"https://url.spec.whatwg.org/#concept-url-username"=
>username</a>
    </li></ul>
   </li><li>
    <a data-link-type=3D"biblio">[WEBIDL]</a> defines the following terms:
    <ul>
     <li><a href=3D"https://heycam.github.io/webidl/#idl-ArrayBuffer">Array=
Buffer</a>
     </li><li><a href=3D"https://heycam.github.io/webidl/#idl-ByteString">B=
yteString</a>
     </li><li><a href=3D"https://heycam.github.io/webidl/#idl-DOMString">DO=
MString</a>
     </li><li><a href=3D"https://heycam.github.io/webidl/#Exposed">Exposed<=
/a>
     </li><li><a href=3D"https://heycam.github.io/webidl/#SameObject">SameO=
bject</a>
     </li><li><a href=3D"https://heycam.github.io/webidl/#idl-USVString">US=
VString</a>
     </li><li><a href=3D"https://heycam.github.io/webidl/#idl-boolean">bool=
ean</a>
     </li><li><a href=3D"https://heycam.github.io/webidl/#dfn-obtain-unicod=
e">obtain unicode</a>
     </li><li><a href=3D"https://heycam.github.io/webidl/#dfn-throw">throw<=
/a>
     </li><li><a href=3D"https://heycam.github.io/webidl/#idl-unsigned-long=
">unsigned long</a>
     </li><li><a href=3D"https://heycam.github.io/webidl/#idl-unsigned-long=
-long">unsigned long long</a>
     </li><li><a href=3D"https://heycam.github.io/webidl/#idl-unsigned-shor=
t">unsigned short</a>
     </li><li><a href=3D"https://heycam.github.io/webidl/#dfn-value-pairs-t=
o-iterate-over">value pairs to iterate over</a>
    </li></ul>
  </li></ul>
  <h2 class=3D"no-num no-ref heading settled" id=3D"idl-index"><span class=
=3D"content">IDL Index</span><a class=3D"self-link" href=3D"https://xhr.spe=
c.whatwg.org/#idl-index"></a></h2>
<pre class=3D"idl def">[<a class=3D"nv idl-code" data-link-type=3D"extended=
-attribute" href=3D"https://heycam.github.io/webidl/#Exposed">Exposed</a>=
=3D(<span class=3D"n">Window</span>,<span class=3D"n">DedicatedWorker</span=
>,<span class=3D"n">SharedWorker</span>)]
<span class=3D"kt">interface</span> <a class=3D"nv" href=3D"https://xhr.spe=
c.whatwg.org/#xmlhttprequesteventtarget">XMLHttpRequestEventTarget</a> : <a=
 class=3D"n" data-link-type=3D"idl-name" href=3D"https://dom.spec.whatwg.or=
g/#eventtarget">EventTarget</a> {
  // event handlers
  <span class=3D"kt">attribute</span> <a class=3D"n" data-link-type=3D"idl-=
name" href=3D"https://html.spec.whatwg.org/multipage/webappapis.html#eventh=
andler">EventHandler</a> <a class=3D"nv idl-code" data-link-type=3D"attribu=
te" data-type=3D"EventHandler" href=3D"https://xhr.spec.whatwg.org/#handler=
-xhr-onloadstart">onloadstart</a>;
  <span class=3D"kt">attribute</span> <a class=3D"n" data-link-type=3D"idl-=
name" href=3D"https://html.spec.whatwg.org/multipage/webappapis.html#eventh=
andler">EventHandler</a> <a class=3D"nv idl-code" data-link-type=3D"attribu=
te" data-type=3D"EventHandler" href=3D"https://xhr.spec.whatwg.org/#handler=
-xhr-onprogress">onprogress</a>;
  <span class=3D"kt">attribute</span> <a class=3D"n" data-link-type=3D"idl-=
name" href=3D"https://html.spec.whatwg.org/multipage/webappapis.html#eventh=
andler">EventHandler</a> <a class=3D"nv idl-code" data-link-type=3D"attribu=
te" data-type=3D"EventHandler" href=3D"https://xhr.spec.whatwg.org/#handler=
-xhr-onabort">onabort</a>;
  <span class=3D"kt">attribute</span> <a class=3D"n" data-link-type=3D"idl-=
name" href=3D"https://html.spec.whatwg.org/multipage/webappapis.html#eventh=
andler">EventHandler</a> <a class=3D"nv idl-code" data-link-type=3D"attribu=
te" data-type=3D"EventHandler" href=3D"https://xhr.spec.whatwg.org/#handler=
-xhr-onerror">onerror</a>;
  <span class=3D"kt">attribute</span> <a class=3D"n" data-link-type=3D"idl-=
name" href=3D"https://html.spec.whatwg.org/multipage/webappapis.html#eventh=
andler">EventHandler</a> <a class=3D"nv idl-code" data-link-type=3D"attribu=
te" data-type=3D"EventHandler" href=3D"https://xhr.spec.whatwg.org/#handler=
-xhr-onload">onload</a>;
  <span class=3D"kt">attribute</span> <a class=3D"n" data-link-type=3D"idl-=
name" href=3D"https://html.spec.whatwg.org/multipage/webappapis.html#eventh=
andler">EventHandler</a> <a class=3D"nv idl-code" data-link-type=3D"attribu=
te" data-type=3D"EventHandler" href=3D"https://xhr.spec.whatwg.org/#handler=
-xhr-ontimeout">ontimeout</a>;
  <span class=3D"kt">attribute</span> <a class=3D"n" data-link-type=3D"idl-=
name" href=3D"https://html.spec.whatwg.org/multipage/webappapis.html#eventh=
andler">EventHandler</a> <a class=3D"nv idl-code" data-link-type=3D"attribu=
te" data-type=3D"EventHandler" href=3D"https://xhr.spec.whatwg.org/#handler=
-xhr-onloadend">onloadend</a>;
};

[<a class=3D"nv idl-code" data-link-type=3D"extended-attribute" href=3D"htt=
ps://heycam.github.io/webidl/#Exposed">Exposed</a>=3D(<span class=3D"n">Win=
dow</span>,<span class=3D"n">DedicatedWorker</span>,<span class=3D"n">Share=
dWorker</span>)]
<span class=3D"kt">interface</span> <a class=3D"nv" href=3D"https://xhr.spe=
c.whatwg.org/#xmlhttprequestupload">XMLHttpRequestUpload</a> : <a class=3D"=
n" data-link-type=3D"idl-name" href=3D"https://xhr.spec.whatwg.org/#xmlhttp=
requesteventtarget">XMLHttpRequestEventTarget</a> {
};

<span class=3D"kt">enum</span> <a class=3D"nv" href=3D"https://xhr.spec.wha=
twg.org/#xmlhttprequestresponsetype">XMLHttpRequestResponseType</a> {
  <a class=3D"s" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequestres=
ponsetype">""</a>,
  <a class=3D"s" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequestres=
ponsetype-arraybuffer">"arraybuffer"</a>,
  <a class=3D"s" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequestres=
ponsetype-blob">"blob"</a>,
  <a class=3D"s" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequestres=
ponsetype-document">"document"</a>,
  <a class=3D"s" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequestres=
ponsetype-json">"json"</a>,
  <a class=3D"s" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequestres=
ponsetype-text">"text"</a>
};

[<a class=3D"nv idl-code" data-link-type=3D"constructor" href=3D"https://xh=
r.spec.whatwg.org/#dom-xmlhttprequest">Constructor</a>,
 <a class=3D"nv idl-code" data-link-type=3D"extended-attribute" href=3D"htt=
ps://heycam.github.io/webidl/#Exposed">Exposed</a>=3D(<span class=3D"n">Win=
dow</span>,<span class=3D"n">DedicatedWorker</span>,<span class=3D"n">Share=
dWorker</span>)]
<span class=3D"kt">interface</span> <a class=3D"nv" href=3D"https://xhr.spe=
c.whatwg.org/#xmlhttprequest">XMLHttpRequest</a> : <a class=3D"n" data-link=
-type=3D"idl-name" href=3D"https://xhr.spec.whatwg.org/#xmlhttprequestevent=
target">XMLHttpRequestEventTarget</a> {
  // event handler
  <span class=3D"kt">attribute</span> <a class=3D"n" data-link-type=3D"idl-=
name" href=3D"https://html.spec.whatwg.org/multipage/webappapis.html#eventh=
andler">EventHandler</a> <a class=3D"nv idl-code" data-link-type=3D"attribu=
te" data-type=3D"EventHandler" href=3D"https://xhr.spec.whatwg.org/#handler=
-xhr-onreadystatechange">onreadystatechange</a>;

  // states
  <span class=3D"kt">const</span> <a class=3D"n idl-code" data-link-type=3D=
"interface" href=3D"https://heycam.github.io/webidl/#idl-unsigned-short"><s=
pan class=3D"kt">unsigned</span> <span class=3D"kt">short</span></a> <a cla=
ss=3D"nv idl-code" data-link-type=3D"const" href=3D"https://xhr.spec.whatwg=
.org/#dom-xmlhttprequest-unsent">UNSENT</a> =3D 0;
  <span class=3D"kt">const</span> <a class=3D"n idl-code" data-link-type=3D=
"interface" href=3D"https://heycam.github.io/webidl/#idl-unsigned-short"><s=
pan class=3D"kt">unsigned</span> <span class=3D"kt">short</span></a> <a cla=
ss=3D"nv idl-code" data-link-type=3D"const" href=3D"https://xhr.spec.whatwg=
.org/#dom-xmlhttprequest-opened">OPENED</a> =3D 1;
  <span class=3D"kt">const</span> <a class=3D"n idl-code" data-link-type=3D=
"interface" href=3D"https://heycam.github.io/webidl/#idl-unsigned-short"><s=
pan class=3D"kt">unsigned</span> <span class=3D"kt">short</span></a> <a cla=
ss=3D"nv idl-code" data-link-type=3D"const" href=3D"https://xhr.spec.whatwg=
.org/#dom-xmlhttprequest-headers_received">HEADERS_RECEIVED</a> =3D 2;
  <span class=3D"kt">const</span> <a class=3D"n idl-code" data-link-type=3D=
"interface" href=3D"https://heycam.github.io/webidl/#idl-unsigned-short"><s=
pan class=3D"kt">unsigned</span> <span class=3D"kt">short</span></a> <a cla=
ss=3D"nv idl-code" data-link-type=3D"const" href=3D"https://xhr.spec.whatwg=
.org/#dom-xmlhttprequest-loading">LOADING</a> =3D 3;
  <span class=3D"kt">const</span> <a class=3D"n idl-code" data-link-type=3D=
"interface" href=3D"https://heycam.github.io/webidl/#idl-unsigned-short"><s=
pan class=3D"kt">unsigned</span> <span class=3D"kt">short</span></a> <a cla=
ss=3D"nv idl-code" data-link-type=3D"const" href=3D"https://xhr.spec.whatwg=
.org/#dom-xmlhttprequest-done">DONE</a> =3D 4;
  <span class=3D"kt">readonly</span> <span class=3D"kt">attribute</span> <a=
 class=3D"n idl-code" data-link-type=3D"interface" href=3D"https://heycam.g=
ithub.io/webidl/#idl-unsigned-short"><span class=3D"kt">unsigned</span> <sp=
an class=3D"kt">short</span></a> <a class=3D"nv idl-code" data-link-type=3D=
"attribute" data-readonly=3D"" data-type=3D"unsigned short" href=3D"https:/=
/xhr.spec.whatwg.org/#dom-xmlhttprequest-readystate">readyState</a>;

  // request
  <span class=3D"kt">void</span> <a class=3D"nv idl-code" data-link-type=3D=
"method" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-open">open=
</a>(<a class=3D"n idl-code" data-link-type=3D"interface" href=3D"https://h=
eycam.github.io/webidl/#idl-ByteString"><span class=3D"kt">ByteString</span=
></a> <a class=3D"nv" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttpreque=
st-open-method-url-method">method</a>, <a class=3D"n idl-code" data-link-ty=
pe=3D"interface" href=3D"https://heycam.github.io/webidl/#idl-USVString"><s=
pan class=3D"kt">USVString</span></a> <a class=3D"nv" href=3D"https://xhr.s=
pec.whatwg.org/#dom-xmlhttprequest-open-method-url-url">url</a>);
  <span class=3D"kt">void</span> <a class=3D"nv idl-code" data-link-type=3D=
"method" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-open-metho=
d-url-async-username-password">open</a>(<a class=3D"n idl-code" data-link-t=
ype=3D"interface" href=3D"https://heycam.github.io/webidl/#idl-ByteString">=
<span class=3D"kt">ByteString</span></a> <a class=3D"nv" href=3D"https://xh=
r.spec.whatwg.org/#dom-xmlhttprequest-open-method-url-async-username-passwo=
rd-method">method</a>, <a class=3D"n idl-code" data-link-type=3D"interface"=
 href=3D"https://heycam.github.io/webidl/#idl-USVString"><span class=3D"kt"=
>USVString</span></a> <a class=3D"nv" href=3D"https://xhr.spec.whatwg.org/#=
dom-xmlhttprequest-open-method-url-async-username-password-url">url</a>, <a=
 class=3D"n idl-code" data-link-type=3D"interface" href=3D"https://heycam.g=
ithub.io/webidl/#idl-boolean"><span class=3D"kt">boolean</span></a> <a clas=
s=3D"nv" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-open-metho=
d-url-async-username-password-async">async</a>, <span class=3D"kt">optional=
</span> <a class=3D"n idl-code" data-link-type=3D"interface" href=3D"https:=
//heycam.github.io/webidl/#idl-USVString"><span class=3D"kt">USVString</spa=
n></a>? <a class=3D"nv" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttpreq=
uest-open-method-url-async-username-password-username">username</a> =3D <sp=
an class=3D"kt">null</span>, <span class=3D"kt">optional</span> <a class=3D=
"n idl-code" data-link-type=3D"interface" href=3D"https://heycam.github.io/=
webidl/#idl-USVString"><span class=3D"kt">USVString</span></a>? <a class=3D=
"nv" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-open-method-ur=
l-async-username-password-password">password</a> =3D <span class=3D"kt">nul=
l</span>);
  <span class=3D"kt">void</span> <a class=3D"nv idl-code" data-link-type=3D=
"method" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-setrequest=
header">setRequestHeader</a>(<a class=3D"n idl-code" data-link-type=3D"inte=
rface" href=3D"https://heycam.github.io/webidl/#idl-ByteString"><span class=
=3D"kt">ByteString</span></a> <a class=3D"nv" href=3D"https://xhr.spec.what=
wg.org/#dom-xmlhttprequest-setrequestheader-name-value-name">name</a>, <a c=
lass=3D"n idl-code" data-link-type=3D"interface" href=3D"https://heycam.git=
hub.io/webidl/#idl-ByteString"><span class=3D"kt">ByteString</span></a> <a =
class=3D"nv" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-setreq=
uestheader-name-value-value">value</a>);
           <span class=3D"kt">attribute</span> <a class=3D"n idl-code" data=
-link-type=3D"interface" href=3D"https://heycam.github.io/webidl/#idl-unsig=
ned-long"><span class=3D"kt">unsigned</span> <span class=3D"kt">long</span>=
</a> <a class=3D"nv idl-code" data-link-type=3D"attribute" data-type=3D"uns=
igned long" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-timeout=
">timeout</a>;
           <span class=3D"kt">attribute</span> <a class=3D"n idl-code" data=
-link-type=3D"interface" href=3D"https://heycam.github.io/webidl/#idl-boole=
an"><span class=3D"kt">boolean</span></a> <a class=3D"nv idl-code" data-lin=
k-type=3D"attribute" data-type=3D"boolean" href=3D"https://xhr.spec.whatwg.=
org/#dom-xmlhttprequest-withcredentials">withCredentials</a>;
  [<a class=3D"nv idl-code" data-link-type=3D"extended-attribute" href=3D"h=
ttps://heycam.github.io/webidl/#SameObject">SameObject</a>] <span class=3D"=
kt">readonly</span> <span class=3D"kt">attribute</span> <a class=3D"n" data=
-link-type=3D"idl-name" href=3D"https://xhr.spec.whatwg.org/#xmlhttprequest=
upload">XMLHttpRequestUpload</a> <a class=3D"nv idl-code" data-link-type=3D=
"attribute" data-readonly=3D"" data-type=3D"XMLHttpRequestUpload" href=3D"h=
ttps://xhr.spec.whatwg.org/#dom-xmlhttprequest-upload">upload</a>;
  <span class=3D"kt">void</span> <a class=3D"nv idl-code" data-link-type=3D=
"method" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-send">send=
</a>(<span class=3D"kt">optional</span> (<a class=3D"n" data-link-type=3D"i=
dl-name" href=3D"https://dom.spec.whatwg.org/#document">Document</a> <span =
class=3D"kt">or</span> <a class=3D"n" data-link-type=3D"idl-name" href=3D"h=
ttps://fetch.spec.whatwg.org/#bodyinit">BodyInit</a>)? <a class=3D"nv" href=
=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-send-body-body">body</a=
> =3D <span class=3D"kt">null</span>);
  <span class=3D"kt">void</span> <a class=3D"nv idl-code" data-link-type=3D=
"method" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-abort">abo=
rt</a>();

  // response
  <span class=3D"kt">readonly</span> <span class=3D"kt">attribute</span> <a=
 class=3D"n idl-code" data-link-type=3D"interface" href=3D"https://heycam.g=
ithub.io/webidl/#idl-USVString"><span class=3D"kt">USVString</span></a> <a =
class=3D"nv idl-code" data-link-type=3D"attribute" data-readonly=3D"" data-=
type=3D"USVString" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-=
responseurl">responseURL</a>;
  <span class=3D"kt">readonly</span> <span class=3D"kt">attribute</span> <a=
 class=3D"n idl-code" data-link-type=3D"interface" href=3D"https://heycam.g=
ithub.io/webidl/#idl-unsigned-short"><span class=3D"kt">unsigned</span> <sp=
an class=3D"kt">short</span></a> <a class=3D"nv idl-code" data-link-type=3D=
"attribute" data-readonly=3D"" data-type=3D"unsigned short" href=3D"https:/=
/xhr.spec.whatwg.org/#dom-xmlhttprequest-status">status</a>;
  <span class=3D"kt">readonly</span> <span class=3D"kt">attribute</span> <a=
 class=3D"n idl-code" data-link-type=3D"interface" href=3D"https://heycam.g=
ithub.io/webidl/#idl-ByteString"><span class=3D"kt">ByteString</span></a> <=
a class=3D"nv idl-code" data-link-type=3D"attribute" data-readonly=3D"" dat=
a-type=3D"ByteString" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttpreque=
st-statustext">statusText</a>;
  <a class=3D"n idl-code" data-link-type=3D"interface" href=3D"https://heyc=
am.github.io/webidl/#idl-ByteString"><span class=3D"kt">ByteString</span></=
a>? <a class=3D"nv idl-code" data-link-type=3D"method" href=3D"https://xhr.=
spec.whatwg.org/#dom-xmlhttprequest-getresponseheader">getResponseHeader</a=
>(<a class=3D"n idl-code" data-link-type=3D"interface" href=3D"https://heyc=
am.github.io/webidl/#idl-ByteString"><span class=3D"kt">ByteString</span></=
a> <a class=3D"nv" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-=
getresponseheader-name-name">name</a>);
  <a class=3D"n idl-code" data-link-type=3D"interface" href=3D"https://heyc=
am.github.io/webidl/#idl-ByteString"><span class=3D"kt">ByteString</span></=
a> <a class=3D"nv idl-code" data-link-type=3D"method" href=3D"https://xhr.s=
pec.whatwg.org/#dom-xmlhttprequest-getallresponseheaders">getAllResponseHea=
ders</a>();
  <span class=3D"kt">void</span> <a class=3D"nv idl-code" data-link-type=3D=
"method" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-overridemi=
metype">overrideMimeType</a>(<a class=3D"n idl-code" data-link-type=3D"inte=
rface" href=3D"https://heycam.github.io/webidl/#idl-DOMString"><span class=
=3D"kt">DOMString</span></a> <a class=3D"nv" href=3D"https://xhr.spec.whatw=
g.org/#dom-xmlhttprequest-overridemimetype-mime-mime">mime</a>);
           <span class=3D"kt">attribute</span> <a class=3D"n" data-link-typ=
e=3D"idl-name" href=3D"https://xhr.spec.whatwg.org/#xmlhttprequestresponset=
ype">XMLHttpRequestResponseType</a> <a class=3D"nv idl-code" data-link-type=
=3D"attribute" data-type=3D"XMLHttpRequestResponseType" href=3D"https://xhr=
.spec.whatwg.org/#dom-xmlhttprequest-responsetype">responseType</a>;
  <span class=3D"kt">readonly</span> <span class=3D"kt">attribute</span> <s=
pan class=3D"kt">any</span> <a class=3D"nv idl-code" data-link-type=3D"attr=
ibute" data-readonly=3D"" data-type=3D"any" href=3D"https://xhr.spec.whatwg=
.org/#dom-xmlhttprequest-response">response</a>;
  <span class=3D"kt">readonly</span> <span class=3D"kt">attribute</span> <a=
 class=3D"n idl-code" data-link-type=3D"interface" href=3D"https://heycam.g=
ithub.io/webidl/#idl-USVString"><span class=3D"kt">USVString</span></a> <a =
class=3D"nv idl-code" data-link-type=3D"attribute" data-readonly=3D"" data-=
type=3D"USVString" href=3D"https://xhr.spec.whatwg.org/#dom-xmlhttprequest-=
responsetext">responseText</a>;
  [<a class=3D"nv idl-code" data-link-type=3D"extended-attribute" href=3D"h=
ttps://heycam.github.io/webidl/#Exposed">Exposed</a>=3D<span class=3D"n">Wi=
ndow</span>] <span class=3D"kt">readonly</span> <span class=3D"kt">attribut=
e</span> <a class=3D"n" data-link-type=3D"idl-name" href=3D"https://dom.spe=
c.whatwg.org/#document">Document</a>? <a class=3D"nv idl-code" data-link-ty=
pe=3D"attribute" data-readonly=3D"" data-type=3D"Document?" href=3D"https:/=
/xhr.spec.whatwg.org/#dom-xmlhttprequest-responsexml">responseXML</a>;
};
<span class=3D"kt">typedef</span> (<a class=3D"n" data-link-type=3D"idl-nam=
e" href=3D"https://w3c.github.io/FileAPI/#dfn-file">File</a> <span class=3D=
"kt">or</span> <a class=3D"n idl-code" data-link-type=3D"interface" href=3D=
"https://heycam.github.io/webidl/#idl-USVString"><span class=3D"kt">USVStri=
ng</span></a>) <a class=3D"nv" href=3D"https://xhr.spec.whatwg.org/#formdat=
aentryvalue">FormDataEntryValue</a>;

[<a class=3D"nv idl-code" data-link-type=3D"constructor" href=3D"https://xh=
r.spec.whatwg.org/#dom-formdata">Constructor</a>(<span class=3D"kt">optiona=
l</span> <a class=3D"n" data-link-type=3D"idl-name" href=3D"https://html.sp=
ec.whatwg.org/multipage/forms.html#htmlformelement">HTMLFormElement</a> <a =
class=3D"nv" href=3D"https://xhr.spec.whatwg.org/#dom-formdata-formdata-for=
m-form">form</a>),
 <a class=3D"nv idl-code" data-link-type=3D"extended-attribute" href=3D"htt=
ps://heycam.github.io/webidl/#Exposed">Exposed</a>=3D(<span class=3D"n">Win=
dow</span>,<span class=3D"n">Worker</span>)]
<span class=3D"kt">interface</span> <a class=3D"nv" href=3D"https://xhr.spe=
c.whatwg.org/#formdata">FormData</a> {
  <span class=3D"kt">void</span> <a class=3D"nv idl-code" data-link-type=3D=
"method" href=3D"https://xhr.spec.whatwg.org/#dom-formdata-append">append</=
a>(<a class=3D"n idl-code" data-link-type=3D"interface" href=3D"https://hey=
cam.github.io/webidl/#idl-USVString"><span class=3D"kt">USVString</span></a=
> <a class=3D"nv" href=3D"https://xhr.spec.whatwg.org/#dom-formdata-append-=
name-value-name">name</a>, <a class=3D"n idl-code" data-link-type=3D"interf=
ace" href=3D"https://heycam.github.io/webidl/#idl-USVString"><span class=3D=
"kt">USVString</span></a> <a class=3D"nv" href=3D"https://xhr.spec.whatwg.o=
rg/#dom-formdata-append-name-value-value">value</a>);
  <span class=3D"kt">void</span> <a class=3D"nv idl-code" data-link-type=3D=
"method" href=3D"https://xhr.spec.whatwg.org/#dom-formdata-append-blob">app=
end</a>(<a class=3D"n idl-code" data-link-type=3D"interface" href=3D"https:=
//heycam.github.io/webidl/#idl-USVString"><span class=3D"kt">USVString</spa=
n></a> <a class=3D"nv" href=3D"https://xhr.spec.whatwg.org/#dom-formdata-ap=
pend-name-blobvalue-filename-name">name</a>, <a class=3D"n" data-link-type=
=3D"idl-name" href=3D"https://w3c.github.io/FileAPI/#dfn-Blob">Blob</a> <a =
class=3D"nv" href=3D"https://xhr.spec.whatwg.org/#dom-formdata-append-name-=
blobvalue-filename-blobvalue">blobValue</a>, <span class=3D"kt">optional</s=
pan> <a class=3D"n idl-code" data-link-type=3D"interface" href=3D"https://h=
eycam.github.io/webidl/#idl-USVString"><span class=3D"kt">USVString</span><=
/a> <a class=3D"nv" href=3D"https://xhr.spec.whatwg.org/#dom-formdata-appen=
d-name-blobvalue-filename-filename">filename</a>);
  <span class=3D"kt">void</span> <a class=3D"nv idl-code" data-link-type=3D=
"method" href=3D"https://xhr.spec.whatwg.org/#dom-formdata-delete">delete</=
a>(<a class=3D"n idl-code" data-link-type=3D"interface" href=3D"https://hey=
cam.github.io/webidl/#idl-USVString"><span class=3D"kt">USVString</span></a=
> <a class=3D"nv" href=3D"https://xhr.spec.whatwg.org/#dom-formdata-delete-=
name-name">name</a>);
  <a class=3D"n" data-link-type=3D"idl-name" href=3D"https://xhr.spec.whatw=
g.org/#formdataentryvalue">FormDataEntryValue</a>? <a class=3D"nv idl-code"=
 data-link-type=3D"method" href=3D"https://xhr.spec.whatwg.org/#dom-formdat=
a-get">get</a>(<a class=3D"n idl-code" data-link-type=3D"interface" href=3D=
"https://heycam.github.io/webidl/#idl-USVString"><span class=3D"kt">USVStri=
ng</span></a> <a class=3D"nv" href=3D"https://xhr.spec.whatwg.org/#dom-form=
data-get-name-name">name</a>);
  <span class=3D"kt">sequence</span>&lt;<a class=3D"n" data-link-type=3D"id=
l-name" href=3D"https://xhr.spec.whatwg.org/#formdataentryvalue">FormDataEn=
tryValue</a>&gt; <a class=3D"nv idl-code" data-link-type=3D"method" href=3D=
"https://xhr.spec.whatwg.org/#dom-formdata-getall">getAll</a>(<a class=3D"n=
 idl-code" data-link-type=3D"interface" href=3D"https://heycam.github.io/we=
bidl/#idl-USVString"><span class=3D"kt">USVString</span></a> <a class=3D"nv=
" href=3D"https://xhr.spec.whatwg.org/#dom-formdata-getall-name-name">name<=
/a>);
  <a class=3D"n idl-code" data-link-type=3D"interface" href=3D"https://heyc=
am.github.io/webidl/#idl-boolean"><span class=3D"kt">boolean</span></a> <a =
class=3D"nv idl-code" data-link-type=3D"method" href=3D"https://xhr.spec.wh=
atwg.org/#dom-formdata-has">has</a>(<a class=3D"n idl-code" data-link-type=
=3D"interface" href=3D"https://heycam.github.io/webidl/#idl-USVString"><spa=
n class=3D"kt">USVString</span></a> <a class=3D"nv" href=3D"https://xhr.spe=
c.whatwg.org/#dom-formdata-has-name-name">name</a>);
  <span class=3D"kt">void</span> <a class=3D"nv idl-code" data-link-type=3D=
"method" href=3D"https://xhr.spec.whatwg.org/#dom-formdata-set">set</a>(<a =
class=3D"n idl-code" data-link-type=3D"interface" href=3D"https://heycam.gi=
thub.io/webidl/#idl-USVString"><span class=3D"kt">USVString</span></a> <a c=
lass=3D"nv" href=3D"https://xhr.spec.whatwg.org/#dom-formdata-set-name-valu=
e-name">name</a>, <a class=3D"n idl-code" data-link-type=3D"interface" href=
=3D"https://heycam.github.io/webidl/#idl-USVString"><span class=3D"kt">USVS=
tring</span></a> <a class=3D"nv" href=3D"https://xhr.spec.whatwg.org/#dom-f=
ormdata-set-name-value-value">value</a>);
  <span class=3D"kt">void</span> <a class=3D"nv idl-code" data-link-type=3D=
"method" href=3D"https://xhr.spec.whatwg.org/#dom-formdata-set-blob">set</a=
>(<a class=3D"n idl-code" data-link-type=3D"interface" href=3D"https://heyc=
am.github.io/webidl/#idl-USVString"><span class=3D"kt">USVString</span></a>=
 <a class=3D"nv" href=3D"https://xhr.spec.whatwg.org/#dom-formdata-set-name=
-blobvalue-filename-name">name</a>, <a class=3D"n" data-link-type=3D"idl-na=
me" href=3D"https://w3c.github.io/FileAPI/#dfn-Blob">Blob</a> <a class=3D"n=
v" href=3D"https://xhr.spec.whatwg.org/#dom-formdata-set-name-blobvalue-fil=
ename-blobvalue">blobValue</a>, <span class=3D"kt">optional</span> <a class=
=3D"n idl-code" data-link-type=3D"interface" href=3D"https://heycam.github.=
io/webidl/#idl-USVString"><span class=3D"kt">USVString</span></a> <a class=
=3D"nv" href=3D"https://xhr.spec.whatwg.org/#dom-formdata-set-name-blobvalu=
e-filename-filename">filename</a>);
  <span class=3D"kt">iterable</span>&lt;<a class=3D"n idl-code" data-link-t=
ype=3D"interface" href=3D"https://heycam.github.io/webidl/#idl-USVString"><=
span class=3D"kt">USVString</span></a>, <a class=3D"n" data-link-type=3D"id=
l-name" href=3D"https://xhr.spec.whatwg.org/#formdataentryvalue">FormDataEn=
tryValue</a>&gt;;
};
[<a class=3D"nv" href=3D"https://xhr.spec.whatwg.org/#dom-progressevent-pro=
gressevent">Constructor</a>(<a class=3D"n idl-code" data-link-type=3D"inter=
face" href=3D"https://heycam.github.io/webidl/#idl-DOMString"><span class=
=3D"kt">DOMString</span></a> <a class=3D"nv" href=3D"https://xhr.spec.whatw=
g.org/#dom-progressevent-progressevent-type-eventinitdict-type">type</a>, <=
span class=3D"kt">optional</span> <a class=3D"n" data-link-type=3D"idl-name=
" href=3D"https://xhr.spec.whatwg.org/#progresseventinit">ProgressEventInit=
</a> <a class=3D"nv" href=3D"https://xhr.spec.whatwg.org/#dom-progressevent=
-progressevent-type-eventinitdict-eventinitdict">eventInitDict</a>),
 <a class=3D"nv idl-code" data-link-type=3D"extended-attribute" href=3D"htt=
ps://heycam.github.io/webidl/#Exposed">Exposed</a>=3D(<span class=3D"n">Win=
dow</span>,<span class=3D"n">DedicatedWorker</span>,<span class=3D"n">Share=
dWorker</span>)]
<span class=3D"kt">interface</span> <a class=3D"nv" href=3D"https://xhr.spe=
c.whatwg.org/#progressevent">ProgressEvent</a> : <a class=3D"n" data-link-t=
ype=3D"idl-name" href=3D"https://dom.spec.whatwg.org/#event">Event</a> {
  <span class=3D"kt">readonly</span> <span class=3D"kt">attribute</span> <a=
 class=3D"n idl-code" data-link-type=3D"interface" href=3D"https://heycam.g=
ithub.io/webidl/#idl-boolean"><span class=3D"kt">boolean</span></a> <a clas=
s=3D"nv idl-code" data-link-type=3D"attribute" data-readonly=3D"" data-type=
=3D"boolean" href=3D"https://xhr.spec.whatwg.org/#dom-progressevent-lengthc=
omputable">lengthComputable</a>;
  <span class=3D"kt">readonly</span> <span class=3D"kt">attribute</span> <a=
 class=3D"n idl-code" data-link-type=3D"interface" href=3D"https://heycam.g=
ithub.io/webidl/#idl-unsigned-long-long"><span class=3D"kt">unsigned</span>=
 <span class=3D"kt">long</span> <span class=3D"kt">long</span></a> <a class=
=3D"nv idl-code" data-link-type=3D"attribute" data-readonly=3D"" data-type=
=3D"unsigned long long" href=3D"https://xhr.spec.whatwg.org/#dom-progressev=
ent-loaded">loaded</a>;
  <span class=3D"kt">readonly</span> <span class=3D"kt">attribute</span> <a=
 class=3D"n idl-code" data-link-type=3D"interface" href=3D"https://heycam.g=
ithub.io/webidl/#idl-unsigned-long-long"><span class=3D"kt">unsigned</span>=
 <span class=3D"kt">long</span> <span class=3D"kt">long</span></a> <a class=
=3D"nv idl-code" data-link-type=3D"attribute" data-readonly=3D"" data-type=
=3D"unsigned long long" href=3D"https://xhr.spec.whatwg.org/#dom-progressev=
ent-total">total</a>;
};

<span class=3D"kt">dictionary</span> <a class=3D"nv" href=3D"https://xhr.sp=
ec.whatwg.org/#progresseventinit">ProgressEventInit</a> : <a class=3D"n" da=
ta-link-type=3D"idl-name" href=3D"https://dom.spec.whatwg.org/#dictdef-even=
tinit">EventInit</a> {
  <a class=3D"n idl-code" data-link-type=3D"interface" href=3D"https://heyc=
am.github.io/webidl/#idl-boolean"><span class=3D"kt">boolean</span></a> <a =
class=3D"nv" data-default=3D"false" data-type=3D"boolean " href=3D"https://=
xhr.spec.whatwg.org/#dom-progresseventinit-lengthcomputable">lengthComputab=
le</a> =3D <span class=3D"kt">false</span>;
  <a class=3D"n idl-code" data-link-type=3D"interface" href=3D"https://heyc=
am.github.io/webidl/#idl-unsigned-long-long"><span class=3D"kt">unsigned</s=
pan> <span class=3D"kt">long</span> <span class=3D"kt">long</span></a> <a c=
lass=3D"nv" data-default=3D"0" data-type=3D"unsigned long long " href=3D"ht=
tps://xhr.spec.whatwg.org/#dom-progresseventinit-loaded">loaded</a> =3D 0;
  <a class=3D"n idl-code" data-link-type=3D"interface" href=3D"https://heyc=
am.github.io/webidl/#idl-unsigned-long-long"><span class=3D"kt">unsigned</s=
pan> <span class=3D"kt">long</span> <span class=3D"kt">long</span></a> <a c=
lass=3D"nv" data-default=3D"0" data-type=3D"unsigned long long " href=3D"ht=
tps://xhr.spec.whatwg.org/#dom-progresseventinit-total">total</a> =3D 0;
};
</pre></body></html>
------MultipartBoundary--0Her9Mqf3y9I8AcGDzeenx9hyupwWZXDKwlHTt2xTF----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://resources.whatwg.org/standard.css

@charset "utf-8";

html { margin: 0px; padding: 0px; background: white; color: black; }

body { margin: 0px auto; padding: 0px 2.5em 2em; max-width: 80em; backgroun=
d: white; color: black; }

@media (max-width: 100em) {
  body { padding-right: 10em; }
}

@keyframes fade-target {=20
  0%, 50% { background: yellow; }
}

@media screen {
  dfn:target, a:target, i:target { animation: fade-target 3s ease 0s 1; }
  :link, :visited { }
  .toc :link, .toc :visited, code :link, code :visited { text-decoration: n=
one; }
  :link:hover, :visited:hover, :link:focus, :visited:focus { text-decoratio=
n: underline; }
  :link { color: rgb(0, 0, 204); }
  :visited { color: rgb(102, 0, 153); }
  :link:active, :visited:active { color: rgb(204, 0, 0); }
  pre :link, pre :visited { color: inherit; background: transparent; text-d=
ecoration: none; }
  pre:hover :link, pre:hover :visited { text-decoration: underline; }
}

.selected-text-file-an-issue { position: fixed; bottom: 0px; right: 0px; ba=
ckground: rgba(255, 255, 255, 0.8); font-size: smaller; padding: 4px 10px; =
z-index: 4; }

.status-LS-COMMIT .selected-text-file-an-issue, .status-LS-BRANCH .selected=
-text-file-an-issue { bottom: 40px; }

@media (max-width: 767px) {
  html { background: rgb(255, 255, 255); tab-size: 2; }
  body { max-width: none; padding: 0px 0.625em; }
  pre, code, a { word-wrap: break-word; }
  .selected-text-file-an-issue { left: 0px; right: auto; text-align: left; =
}
}

code { color: rgb(102, 102, 102); }

dfn code { color: orangered; }

code :link, :link code, code :visited, :visited code { color: orangered; }

html, ::before { font-style: normal; font-variant: normal; font-weight: nor=
mal; font-stretch: normal; font-size: 1em; line-height: 1.45; font-family: =
"Helvetica Neue", sans-serif, "Droid Sans Fallback"; }

h1, h2, h3, h4, h5, h6 { text-align: left; text-rendering: optimizeLegibili=
ty; }

h1, h2, h3 { color: rgb(60, 121, 10); background: transparent; }

h1 { font-style: normal; font-variant: normal; font-weight: 900; font-stret=
ch: normal; font-size: 200%; line-height: normal; font-family: "Helvetica N=
eue", sans-serif, "Droid Sans Fallback"; }

h1.allcaps { font-style: normal; font-variant: normal; font-weight: 900; fo=
nt-stretch: normal; font-size: 350%; line-height: normal; font-family: "Hel=
vetica Neue", sans-serif, "Droid Sans Fallback"; letter-spacing: 2px; }

h2 { font-style: normal; font-variant: normal; font-weight: 800; font-stret=
ch: normal; font-size: 140%; line-height: normal; font-family: "Helvetica N=
eue", sans-serif, "Droid Sans Fallback"; }

h3 { font-style: normal; font-variant: normal; font-weight: 800; font-stret=
ch: normal; font-size: 125%; line-height: normal; font-family: "Helvetica N=
eue", sans-serif, "Droid Sans Fallback"; }

h4 { font-style: normal; font-variant: normal; font-weight: 800; font-stret=
ch: normal; font-size: 110%; line-height: normal; font-family: "Helvetica N=
eue", sans-serif, "Droid Sans Fallback"; }

h5 { font-style: normal; font-variant: normal; font-weight: 800; font-stret=
ch: normal; font-size: 100%; line-height: normal; font-family: "Helvetica N=
eue", sans-serif, "Droid Sans Fallback"; }

h6 { font-style: italic; font-variant: normal; font-weight: 600; font-stret=
ch: normal; font-size: 100%; line-height: normal; font-family: "Helvetica N=
eue", sans-serif, "Droid Sans Fallback"; }

h2 { margin: 6em 0px 1em; }

h3, h4, h5, h6 { margin: 4.5em 0px 1em; }

h1 + h2, h2 + h3, h3 + h4, h4 + h5, h5 + h6, h1 + div.status + h2, h2 + div=
.status + h3, h3 + div.status + h4, h4 + div.status + h5, h5 + div.status +=
 h6 { margin-top: 0.5em; }

header + h2, header + hr + h2, header + hr + #configUI + h2, header + hr + =
#configUI + #updatesStatus + h2, h2.no-toc { margin-top: 2em; }

hr { display: block; background: none; border: none; padding: 0px; margin: =
3em 0px; height: auto; }

p { margin: 1.25em 0px; }

pre { margin-left: 2em; white-space: pre-wrap; }

dl, dd { margin-top: 0px; margin-bottom: 0px; }

dt { margin-top: 0.75em; margin-bottom: 0.25em; clear: left; }

dt ul { margin: 0px 1.25em; }

dt + dt { margin-top: 0px; }

dd dt { margin-top: 0.25em; margin-bottom: 0px; }

dd p, dd ol, dd ol.brief { margin-top: 0px; }

dd dl + p, dd dl + div.status + p { margin-top: 1.25em; }

dd table + p, dd table + div.status + p { margin-top: 1.25em; }

p + * > li, p + div.status + * > li, dd li, p + * > li > p, p + div.status =
+ * > li > p, dd li > p { margin: 1em 0px; }

h2, h3, h4, h5, h6 { position: relative; }

a.self-link { position: absolute; top: 0px; left: -2.5em; width: 2em; heigh=
t: 2em; text-align: center; border: none; transition: opacity 0.2s; opacity=
: 0.5; text-decoration: none; }

a.self-link:hover { opacity: 1; text-decoration: none; }

h2 > a.self-link, h3 > a.self-link, h4 > a.self-link, h5 > a.self-link, h6 =
> a.self-link { font-size: 83%; color: inherit; }

a.self-link::before { content: "=C2=B6"; }

h2 > a.self-link::before, h3 > a.self-link::before, h4 > a.self-link::befor=
e, h5 > a.self-link::before, h6 > a.self-link::before { content: "=C2=A7"; =
}

@media (max-width: 767px) {
  dd { margin-left: 0px; }
  h2 > a.self-link, h3 > a.self-link, h4 > a.self-link, h5 > a.self-link, h=
6 > a.self-link { left: auto; top: auto; margin-left: 0.5em; }
}

.toc, .toc li { list-style: none; }

body > .toc.brief > li { margin-top: 0.35em; margin-bottom: 0.35em; }

body > .toc > li { margin-top: 1.75em; margin-bottom: 2.25em; }

body > .toc > li > * > li { margin-top: 0.4em; margin-bottom: 0.6em; }

body > .toc > li > * > li > * > li { margin-top: 0.2em; margin-bottom: 0.4e=
m; }

body > .toc > li > * > li > * > li > * > li { margin-top: 0.1em; margin-bot=
tom: 0.2em; }

.toc dfn, h1 dfn, h2 dfn, h3 dfn, h4 dfn, h5 dfn, h6 dfn { font-style: inhe=
rit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; fo=
nt-size: inherit; line-height: inherit; font-family: inherit; }

@media (max-width: 767px) {
  .toc { padding-left: 0.5em; }
  .toc ol, dd { padding-left: 1.5em; }
}

dt, dfn { font-weight: bolder; font-style: normal; }

i, em, dt dfn { font-style: italic; }

pre, code { font-size: inherit; font-family: monospace, "Droid Sans Fallbac=
k", "Helvetica Neue", sans-serif; font-variant-ligatures: normal; font-vari=
ant-caps: normal; }

pre strong { font-style: inherit; font-variant: inherit; font-weight: inher=
it; font-stretch: inherit; font-size: inherit; line-height: inherit; font-f=
amily: inherit; background: rgb(221, 255, 221); color: green; }

pre small { color: silver; font-style: inherit; font-variant: inherit; font=
-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: i=
nherit; font-family: inherit; }

pre em { font-weight: bolder; font-style: normal; }

var sub { vertical-align: bottom; font-size: smaller; top: 0.1em; }

var > var::before { content: "=E2=9F=A8"; font-style: normal; }

var > var::after { content: "=E2=9F=A9"; font-style: normal; }

table { border-collapse: collapse; border-style: hidden hidden none; }

table thead, table tbody { border-bottom: solid; }

table tbody th { text-align: left; }

table tbody th:first-child { border-left: solid; }

table td, table th { border-left: solid; border-right: solid; border-bottom=
: thin solid; vertical-align: top; padding: 0.2em; }

blockquote { margin: 0px 0px 0px 2em; border: 0px; padding: 0px; font-style=
: italic; }

img, object, p.overview { position: relative; z-index: 2; }

img.extra, p.overview { float: right; }

p > img:only-child { margin-left: 2em; }

@media (max-width: 767px) {
  img { max-width: 100%; object-fit: contain; }
  img.extra, p.overview { float: none; }
  p > img:only-child { margin-left: 0px; }
}

dl.switch { padding-left: 2em; }

dl.switch > dt { text-indent: -1.5em; }

dl.switch > dt > * { text-indent: 0px; }

dl.switch > dt::before { content: "=E2=86=AA"; padding: 0px 0.5em 0px 0px; =
display: inline-block; width: 1em; text-align: right; line-height: 0.5em; }

dl.triple { padding: 0px 0px 0px 1em; }

dl.triple dt, dl.triple dd { margin: 0px; display: inline; }

dl.triple dt::after { content: ":"; }

dl.triple dd::after { content: "\a "; white-space: pre; }

tr.rare { background: rgb(238, 238, 238); color: rgb(51, 51, 51); }

pre.idl::before, pre.asn::before, pre.css::before { font-style: normal; fon=
t-variant: normal; font-weight: bold; font-stretch: normal; font-size: 0.8r=
em; line-height: normal; font-family: "Helvetica Neue", sans-serif; padding=
: 0.5em; position: absolute; top: auto; margin: -0.703125em 0px 0px -3.75em=
; width: 1.5em; background: inherit; border-width: 0.078125em; border-color=
: initial; border-image: initial; border-style: solid none solid solid; bor=
der-radius: 1em 0px 0px 1em; }

pre.idl { border: 0.0625em solid; background: rgb(238, 238, 238); color: bl=
ack; padding: 0.5em 1em; }

pre.idl::before { content: "IDL"; }

pre.asn { border: 0.0625em solid; background: rgb(238, 238, 238); color: bl=
ack; padding: 0.5em 1em; }

pre.asn::before { content: "ASN"; }

pre.css { border: 0.0625em solid; background: rgb(255, 255, 238); color: bl=
ack; padding: 0.5em 1em; }

pre.css::first-line { color: rgb(170, 170, 80); }

pre.css::before { content: "CSS"; }

@media (max-width: 767px) {
  pre.idl, pre.css { padding-left: 0.33em; }
  pre.idl::before, pre.css::before { width: 2.3em; }
}

dl.domintro { position: relative; color: green; background: rgb(221, 255, 2=
21); margin: 2em 0px; padding: 0.5em 1em 0.5em 2em; }

hr + dl.domintro, div.impl + dl.domintro, hr + div.status + dl.domintro, di=
v.impl + div.status + dl.domintro { margin-top: 2.5em; margin-bottom: 1.5em=
; }

dl.domintro dt, dl.domintro dt * { color: black; }

dl.domintro dd { margin: 0.5em 0px 1em 2em; padding: 0px; }

dl.domintro dd p { margin: 0.5em 0px; }

dl.domintro::before { content: "Note"; background: green; color: white; pad=
ding: 0.15em 0.25em; font-style: normal; position: absolute; top: -0.2em; l=
eft: -1.5em; transform: rotate(-5deg); }

.note { position: relative; color: green; background: rgb(221, 255, 221); f=
ont-style: italic; margin-left: 2em; padding-left: 2em; }

.note em, .note i, .note var { font-style: normal; }

span.note { padding: 0px 2em; }

.note p:first-child { margin-top: 0px; }

.note p:last-child { margin-bottom: 0px; }

dd > .note:first-child { margin-bottom: 0px; }

.note::before { content: "Note"; background: green; color: white; padding: =
0.15em 0.25em; font-style: normal; position: absolute; top: -0.2em; left: -=
1.5em; transform: rotate(-5deg); }

.warning { color: red; background: transparent; font-style: italic; font-va=
riant: normal; font-weight: bolder; font-stretch: normal; font-size: 1em; l=
ine-height: normal; font-family: "Helvetica Neue", sans-serif, "Droid Sans =
Fallback"; position: relative; margin: 2em 0px 2em 6em; padding-left: 2em; =
}

.warning em, .warning i, .warning var { font-style: normal; }

.warning p:first-child { margin-top: 0px; }

.warning p:last-child { margin-bottom: 0px; }

.warning::before { content: "=E2=9A=A0Warning!"; background: red; color: ye=
llow; padding: 0.15em 0.25em; font-style: normal; position: absolute; top: =
-0.2em; left: -4.25em; transform: rotate(-5deg); }

.example { display: block; color: rgb(34, 34, 34); background: rgb(238, 238=
, 238); margin-left: 2em; padding-left: 3em; position: relative; }

.example::before { content: "Example"; background: rgb(34, 34, 34); color: =
rgb(238, 238, 238); padding: 0.15em 0.25em; font-style: normal; font-varian=
t: normal; font-weight: normal; font-stretch: normal; font-size: 1em; line-=
height: normal; font-family: "Helvetica Neue", sans-serif, "Droid Sans Fall=
back"; position: absolute; top: 0.2em; left: -2.25em; transform: rotate(-5d=
eg); }

td > .example:only-child { margin: 0px 0px 0px 0.1em; padding: 0px; }

td > .example:only-child::before { display: none; }

@media (min-width: 768px) {
  .example > a.self-link { left: -5em; }
}

@media (max-width: 767px) {
  dl.domintro, .note, .warning, .example { margin-top: 1.25em; margin-left:=
 0px; padding: 1.5em 0.5em 0.5em 1.5em; }
  .warning { padding-top: 2em; }
  dl.domintro::before, .note::before, .warning::before, .example::before { =
top: -0.3em; left: -0.3em; }
}

figure.diagrams { border: thin solid black; background: white; padding: 1em=
; }

figure.diagrams img { display: block; margin: 1em auto; }

h2:not(.short) { break-before: page; }

h2#contents { break-before: avoid; }

h1, h2, h3, h4, h5, h6, dt { break-after: avoid; }

hgroup h2, h1 + h2, hr + h2.no-toc { break-before: auto !important; }

.brief { margin-top: 1em; margin-bottom: 1em; line-height: 1.1; }

.brief > li { margin: 0px; padding: 0px; }

.brief > li > p, .brief > li > ol, .brief > li > ul, .brief > li > dl { mar=
gin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px; }

.category-list { margin-top: -0.75em; margin-bottom: 1em; line-height: 1.5;=
 }

.category-list::before { content: "=E2=87=92=C2=A0"; font-size: 1.2em; font=
-weight: 900; }

.category-list li { display: inline; }

.category-list li:not(:last-child)::after { content: ", "; }

.category-list li > span, .category-list li > a { text-transform: lowercase=
; }

.category-list li * { text-transform: none; }

.big-issue, .XXX { color: rgb(229, 0, 0); background: white; border: solid =
red; padding: 0.5em; margin: 1em 0px; }

.big-issue > :first-child, .XXX > :first-child { margin-top: 0px; }

p .big-issue, p .XXX { line-height: 3em; }

.tablenote { margin: 0.25em 0px; }

.tablenote small { font-size: 0.9em; }

.bookkeeping::before { display: block; content: "Bookkeeping details"; font=
-weight: bolder; font-style: italic; }

.bookkeeping { font-size: 0.8em; margin: 2em 0px; }

.bookkeeping p { margin: 0.5em 2em; display: list-item; list-style: square;=
 }

.bookkeeping dt { margin: 0.5em 2em 0px; }

.bookkeeping dd { margin: 0px 3em 0.5em; }

.critical { margin: 1em; border: thick double red; padding: 1em; background=
: rgb(255, 255, 204); }

.critical > :first-child { margin-top: 0px; }

h4 { position: relative; z-index: 3; }

h4 + .element, h4 + div.status + .element { margin-top: -2.75em; padding-to=
p: 1.5em; }

.element { background: rgb(238, 255, 238); color: black; margin: 0px 0px 1e=
m -0.15em; padding: 0px 1em 0.25em; }

.element:not(:hover) > dt > :link, .element:not(:hover) > dt > :visited { c=
olor: inherit; text-decoration: none; }

table.css-property caption { text-align: left; font-style: inherit; font-va=
riant: inherit; font-stretch: inherit; font-size: inherit; line-height: inh=
erit; font-family: inherit; font-weight: bolder; }

table.css-property th { font-variant: inherit; font-weight: inherit; font-s=
tretch: inherit; font-size: inherit; line-height: inherit; font-family: inh=
erit; font-style: italic; text-align: left; padding-left: 2em; }

td.non-rectangular-cell-continuation { border-left-style: hidden; }

td.non-rectangular-cell-indentation { border-top-style: hidden; min-width: =
2em; }

.hide { display: none; }

.head { margin: 0px 0px 1em; padding: 1em 0px 0px; display: block; }

.head p { margin: 0px; }

.head h1 { margin: 0px 100px 0px 0px; }

.head h2 { margin-top: 0px; margin-right: 100px; }

.head .logo img { position: absolute; top: 1em; right: 1em; border: none; }

@media (max-width: 767px) {
  .head .logo img { width: 4em; height: 4em; }
  .head h1, .head h2 { margin-right: 5rem; }
}

.head dl { margin: 1em 0px; }

p.copyright { font-size: 0.6em; font-style: oblique; margin: 0px; }

nav { margin: 5em 0px 0px; }

header + nav { margin: 1em 0px; }

#head nav { text-align: center; margin: auto; }

#head nav > div { display: inline-block; }

#head nav > div > a { display: inline-block; white-space: nowrap; font-styl=
e: normal; font-variant: normal; font-weight: normal; font-stretch: normal;=
 font-size: 1em; line-height: 1; font-family: "Helvetica Neue", sans-serif,=
 "Droid Sans Fallback"; text-decoration: none; width: auto; margin: 0.5em; =
color: rgb(243, 243, 243); text-align: center; }

@keyframes stand-out {=20
  0%, 95% { transform: scale(1.4); box-shadow: gray 0px 2px 10px; }
}

html:not(.split) #multipage-link { animation: stand-out 10s ease 0s 1; }

#head nav > div > a { box-shadow: rgb(60, 121, 10) 0px 0px 2px; background:=
 rgb(60, 121, 10); }

#head nav > div > a.comms { box-shadow: rgb(22, 95, 204) 0px 0px 2px; backg=
round: rgb(22, 95, 204); }

#head nav > div > a.feedback { box-shadow: rgb(255, 62, 58) 0px 0px 2px; ba=
ckground: rgb(255, 62, 58); }

#head nav > div > a.changes { box-shadow: rgb(84, 178, 154) 0px 0px 2px; ba=
ckground: rgb(84, 178, 154); }

#head nav > div > a.misc { box-shadow: rgb(255, 163, 45) 0px 0px 2px; backg=
round: rgb(255, 163, 45); }

#head nav > div > a > * > * { display: block; padding: 0.1em 1em; backgroun=
d: rgba(255, 255, 255, 0.901961); color: black; font-style: inherit; font-v=
ariant: inherit; font-weight: inherit; font-stretch: inherit; font-size: in=
herit; line-height: inherit; font-family: inherit; overflow: hidden; text-o=
verflow: ellipsis; }

#head nav > div > a > * > :first-child { padding-top: 0.5em; }

#head nav > div > a > * > :last-child { padding-bottom: 1em; }

#head nav > div > a > * > strong { color: blue; text-decoration: underline;=
 padding-bottom: 0.5em; }

#head nav > div > a > * > code { font-size: 0.8em; }

@media (max-width: 767px) {
  #head nav { text-align: left; }
  #head nav > div { display: inline; }
  #head nav > div > a { width: 48%; margin: 0.1em; }
  #head nav > div > a > * > * { padding: 0.1em 0.5em 0.5em; }
  #head nav > div > a > * > code { font-size: 0.7em; }
}

p.copyright { text-align: center; }

p.copyright > span { display: inline-block; border: none; }

body.dfnEnabled dfn, body.dfnEnabled h2[data-dfn-type], body.dfnEnabled h3[=
data-dfn-type], body.dfnEnabled h4[data-dfn-type], body.dfnEnabled h5[data-=
dfn-type], body.dfnEnabled h6[data-dfn-type] { cursor: pointer; }

.dfnPanel { cursor: auto; display: inline; position: absolute; z-index: 35;=
 height: auto; width: auto; padding: 0.5em 0.75em; font-style: normal; font=
-variant: normal; font-weight: normal; font-stretch: normal; font-size: sma=
ll; line-height: normal; font-family: "Helvetica Neue", sans-serif, "Droid =
Sans Fallback"; background: rgb(221, 221, 221); color: black; border: 0.2em=
 outset; }

.dfnPanel * { margin: 0px; padding: 0px; font-style: inherit; font-variant:=
 inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; =
line-height: inherit; font-family: inherit; text-indent: 0px; }

.dfnPanel :link, .dfnPanel :visited { color: black; cursor: pointer; }

.dfnPanel *, pre:hover .dfnPanel * { text-decoration: none; }

pre:hover .dfnPanel :link:hover, pre:hover .dfnPanel :visited:hover { text-=
decoration: underline; }

.dfnPanel p:not(.spec-link) { font-weight: bolder; }

.dfnPanel * + p { margin-top: 0.25em; }

.dfnPanel li { list-style-position: inside; }

@media print {
  html { font-size: 8pt; }
  @page { margin: 1cm; }
  @page :left { }
  @page :right { }
  a[href^=3D"#"]::after { font-size: 0.6em; vertical-align: super; padding:=
 0px 0.15em; }
  .toc a::after { font-style: inherit; font-variant: inherit; font-weight: =
inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; f=
ont-family: inherit; vertical-align: baseline; padding: 0px; }
  pre a[href^=3D"#"]::after, blockquote a[href^=3D"#"]::after { content: ""=
; padding: 0px; }
  table { font-size: smaller; }
}

ul.domTree, ul.domTree ul { padding: 0px 0px 0px 1em; margin: 0px; }

ul.domTree li { padding: 0px; margin: 0px; list-style: none; position: rela=
tive; }

ul.domTree li li { list-style: none; }

ul.domTree li:first-child::before { position: absolute; top: 0px; height: 0=
.6em; left: -0.75em; width: 0.5em; border-style: none none solid solid; con=
tent: ""; border-width: 0.1em; }

ul.domTree li:not(:last-child)::after { position: absolute; top: 0px; botto=
m: -0.6em; left: -0.75em; width: 0.5em; border-style: none none solid solid=
; content: ""; border-width: 0.1em; }

ul.domTree span { font-style: italic; font-family: serif, "Droid Sans Fallb=
ack"; }

ul.domTree .t1 code { color: purple; font-weight: bold; }

ul.domTree .t2 { font-style: normal; font-family: monospace, "Droid Sans Fa=
llback"; }

ul.domTree .t2 .name { color: black; font-weight: bold; }

ul.domTree .t2 .value { color: blue; font-weight: normal; }

ul.domTree .t3 code, .domTree .t4 code, .domTree .t5 code { color: gray; }

ul.domTree .t7 code, .domTree .t8 code { color: green; }

ul.domTree .t10 code { color: teal; }
------MultipartBoundary--0Her9Mqf3y9I8AcGDzeenx9hyupwWZXDKwlHTt2xTF----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://resources.whatwg.org/bikeshed.css

@charset "utf-8";

li > a.self-link { left: -3.5em; }

dfn > a.self-link { top: auto; left: auto; opacity: 0; width: 1.5em; height=
: 1.5em; background: gray; color: white; font-style: normal; transition: op=
acity 0.2s, background-color 0.2s, color 0.2s; }

dfn:hover > a.self-link { opacity: 1; }

dfn > a.self-link:hover { color: black; background-color: rgb(177, 201, 157=
); }

dfn > a.self-link::before { content: "#"; }

@media (hover: none), (hover: on-demand) {
  dfn > a.self-link { display: none; }
}

@media (max-width: 767px) {
  dfn > a.self-link { width: 0.625em; }
}

.head .editor { display: none; }

details.annoying-warning { background-color: rgb(146, 8, 0); background-ima=
ge: linear-gradient(transparent 40%, rgba(255, 255, 255, 0.2)); border-styl=
e: solid; border-color: rgba(0, 0, 0, 0.4); border-image: initial; border-r=
adius: 3px; border-width: 1px 1px 0px; box-shadow: rgba(0, 0, 0, 0.498039) =
0px 0px 0.5em; color: rgba(255, 255, 255, 0.952941); opacity: 0.95; positio=
n: fixed; left: 5%; margin: 0px auto; right: 5%; z-index: 10; }

details.annoying-warning[open] { top: calc(5vw + 5vh); max-width: 1024px; o=
utline: rgba(255, 255, 255, 0.6) solid 10000px; }

details.annoying-warning:not([open]) { bottom: 0px; left: 0px; right: 0px; =
border-radius: 0px; }

details.annoying-warning > summary { display: list-item; font-size: 0.875em=
; font-weight: bold; letter-spacing: 0.02em; padding: 10px 5px; text-align:=
 center; text-transform: uppercase; text-shadow: rgba(0, 0, 0, 0.85098) 0px=
 1px 2px; cursor: default; }

details.annoying-warning > summary::after { content: " Expand"; position: a=
bsolute; top: 0px; right: 5px; font-size: smaller; font-weight: bold; }

details.annoying-warning[open] > summary::after { content: " Collapse"; }

details.annoying-warning p { padding: 0px 7.5% 1em; line-height: 1.4; margi=
n: 0px; text-shadow: rgba(0, 0, 0, 0.85098) 0px 1px 1px; }

details.annoying-warning a { color: white; text-decoration: underline; }
------MultipartBoundary--0Her9Mqf3y9I8AcGDzeenx9hyupwWZXDKwlHTt2xTF----
Content-Type: image/svg+xml
Content-Transfer-Encoding: quoted-printable
Content-Location: https://resources.whatwg.org/logo-xhr.svg

<svg xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 100 100" stroke=3D=
"#3c790a">
<circle cx=3D"50" cy=3D"50" r=3D"45" stroke-width=3D"10" fill=3D"#fff"/>
<path stroke-width=3D"1.5" fill=3D"none" d=3D"M17,66C21,63,43,76,37,68M33,7=
5a8,8,0,0,16,8M50,84C68,49,57,90,63,77,66,58,75,87,71,69,68,62,74,65,78,66M=
65,62C57,64,64,71,67,64M47,60L43,69,44,69,51,66M50,52C47,60,53,54,52,60,50,=
68,62,60,57,62,58,54,65,60,59,54,48,42,20,25,29,37M29,40C23,50,27,47,29,48M=
33,37C28,42,37,38,35,42,34,44,30,38,32,48,31,50,36,52,28,50M32,53L28,52M30,=
53C28,55,25,57,30,61,32,62,32,65,38,62,40,61,43,63,44,57,44,56,48,52,44,48L=
45,45,41,42,40,43,41,47,39,50,35,51M32,31C43,30,50,16,64,23M43,37C54,28,49,=
56,69,48,82,40,78,21,68,20L68,26C72,29,72,29,72,33"/>
</svg>=0A
------MultipartBoundary--0Her9Mqf3y9I8AcGDzeenx9hyupwWZXDKwlHTt2xTF------
